---
import { getEntry } from "astro:content";
import AnimeList from "@/components/mine/Lists/AnimeList.astro";
import MusicList from "@/components/mine/Lists/MusicList.astro";
import PhotoList from "@/components/mine/Lists/PhotoList.astro";
import { timelineItems } from "@/data/chronoboxData.js"; // 假设你有一个文件存放时间线数据
import I18nKey from "@/i18n/i18nKey";
import { i18n } from "@/i18n/translation";
import MainGridLayout from "@/layouts/MainGridLayout.astro";

import Markdown from "@components/misc/Markdown.astro";
const chronoboxPost = await getEntry("spec", "chronobox");
const { Content } = await chronoboxPost.render();
---

<MainGridLayout title={i18n(I18nKey.chronobox)} description={i18n(I18nKey.chronobox)}>
  <Markdown class="mt-8 prose max-w-none">
      <Content />
  </Markdown>

  <!-- 选项卡容器 -->
  <div class="time-capsule-container">
      <div class="card-base z-10 px-9 py-6 relative w-full">
          <!-- 选项卡导航 -->
          <div class="tabs-header flex gap-4 mb-8 border-b border-gray-200 dark:border-gray-700">
              <button
              data-tab="anime"
              class="tab-button active px-4 py-2 rounded-t-lg transition-colors duration-200 font-medium relative"
            >
              动漫
              <span class="active-indicator absolute bottom-0 left-0 right-0 h-0.5 transition-opacity"></span>
            </button>
            <button
            data-tab="music"
            class="tab-button px-4 py-2 rounded-t-lg transition-colors duration-200 font-medium relative"
          >
            音乐
            <span class="active-indicator absolute bottom-0 left-0 right-0 h-0.5 transition-opacity"></span>
          </button>
          <button
          data-tab="photo"
          class="tab-button px-4 py-2 rounded-t-lg transition-colors duration-200 font-medium relative"
        >
        照片
          <span class="active-indicator absolute bottom-0 left-0 right-0 h-0.5 transition-opacity"></span>
        </button>
          </div>
          <div id="anime-content" class="tab-content">
  <AnimeList timelineItems={timelineItems} />
</div>
<div id="music-content" class="tab-content hidden">
  <MusicList timelineItems={timelineItems} />
</div>
<div id="photo-content" class="tab-content hidden">
  <PhotoList timelineItems={timelineItems} />
</div>
      </div>
  </div>

  <!-- 选项卡交互脚本 -->
  <script is:inline>
(function() {
  const tabs = document.querySelectorAll('.tab-button');
  const contents = document.querySelectorAll('.tab-content');
  
  tabs.forEach(tab => {
    tab.addEventListener('click', () => {
      // 移除所有标签的激活状态
      tabs.forEach(t => {
        t.classList.remove('active');
        t.querySelector('.active-indicator').style.opacity = '0';
      });
      
      // 隐藏所有内容
      contents.forEach(c => {
        c.classList.add('hidden');
      });
      // 添加当前标签的激活状态
      tab.classList.add('active');
      tab.querySelector('.active-indicator').style.opacity = '1';
      // 显示对应内容
      const targetContentId = `${tab.dataset.tab}-content`;
      document.getElementById(targetContentId).classList.remove('hidden');
    });
  });
})();
</script>

  <style is:global>
    /* 新增选项卡样式 */
    .tabs-header {
      @apply border-b border-gray-200 dark:border-gray-700;
    }

    .tab-button {
      @apply transition-colors duration-200 text-gray-600 dark:text-gray-300;
    }
    

    .tab-button.active {
      color: var(--primary); /* 使用Tailwind内置颜色 */
    }

    .tab-button.active .active-indicator {
      @apply opacity-100;
    }

    .tab-content {
    @apply hidden;
  }
  
  .tab-content:not(.hidden) {
    display: block;
    animation: fadeIn 0.3s ease-out;
  }
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    

    /* 电脑端额外优化（新增） */
    @media (min-width: 1024px) {
      .grid-cols-3 > * {
        width: calc((100% - 1.5rem) / 3); /* 精确计算列宽，避免间隙影响 */
      }
      .anime-card {
        min-height: 500px; /* 增大桌面端最小高度，匹配比例 */
      }
    }

    /* 信息层动画（使用标准CSS过渡） */
    .anime-card .info-overlay {
      height: 0;
      overflow: hidden;
      transition: height 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    .anime-card:hover .info-overlay {
      height: 100px; /* 自定义合适高度 */
    }

    @media (max-width: 1023px) {
      .anime-card,
      .music-card {
        min-width: calc(50% - 1rem); /* 双列宽度计算（配合gap-6） */
      }
    }

    /* 响应式调整 */
    @media (max-width: 767px) {
      .time-capsule-container {
        padding: 0 4px;
      }
      .anime-card {
        min-height: 200px; /* 移动端最小高度 */
      }
    }

    @media (min-width: 768px) {
      .anime-card {
        min-height: 350px; /* 平板端最小高度 */
      }
    }

    /* 移除调试边框 */
    .grid,
    .capsule-card {
      border: none;
    }
    
  </style>
</MainGridLayout>