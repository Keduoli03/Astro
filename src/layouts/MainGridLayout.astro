---
// 注释掉原来的两个按钮
// import BackToTop from "@components/control/BackToTop.astro";
// import ScrollToBottom from "@components/control/ScrollToBottom.astro";
import SmartScrollButton from "@components/control/SmartScrollButton.astro";
import Footer from "@components/Footer.astro";
import Search from "@components/Search.svelte"; // 添加这行导入
import SideNavbar from "@components/SideNavbar.astro"; // 新增
import SideBar from "@components/widget/SideBar.astro";
import type { MarkdownHeading } from "astro";
import { Icon } from "astro-icon/components";
import ImageWrapper from "../components/misc/ImageWrapper.astro";
import TOC from "../components/widget/TOC.astro";
import { siteConfig } from "../config";
import {
	BANNER_HEIGHT,
	BANNER_HEIGHT_EXTEND,
	MAIN_PANEL_OVERLAPS_BANNER_HEIGHT,
} from "../constants/constants";
import Layout from "./Layout.astro";

interface Props {
	title?: string;
	banner?: string;
	description?: string;
	lang?: string;
	setOGTypeArticle?: boolean;
	headings?: MarkdownHeading[];
	series?: string;
}

const {
	title,
	banner,
	description,
	lang,
	setOGTypeArticle,
	headings = [],
	series,
} = Astro.props;
const hasBannerCredit =
	siteConfig.banner.enable && siteConfig.banner.credit.enable;
const hasBannerLink = !!siteConfig.banner.credit.url;

const mainPanelTop = siteConfig.banner.enable
	? `calc(${BANNER_HEIGHT}vh - ${MAIN_PANEL_OVERLAPS_BANNER_HEIGHT}rem)`
	: "0";
---

<Layout title={title} banner={banner} description={description} lang={lang} setOGTypeArticle={setOGTypeArticle}>

<slot slot="head" name="head"></slot>

<!-- 侧边导航栏 -->
<SideNavbar />

<!-- Banner -->
{siteConfig.banner.enable && <div id="banner-wrapper" class={`absolute z-10 w-[calc(100%-2rem)] transition duration-700 overflow-hidden lg:ml-8`} style={`top: -${BANNER_HEIGHT_EXTEND}vh`}>
    <ImageWrapper id="banner" alt="Banner image of the blog" class:list={["object-cover h-full transition duration-700 opacity-0 scale-105"]}
                  src={siteConfig.banner.src} position={siteConfig.banner.position}
    >
    </ImageWrapper>
</div>}

<!-- Main content -->
<div class="absolute w-[calc(100%-2rem)] z-30 pointer-events-none lg:ml-8 pt-14 lg:pt-0" style={`top: ${mainPanelTop}`}>
    <div class="relative max-w-[calc(var(--page-width)+1rem)] mx-auto pointer-events-auto">
        <div id="main-grid" class="transition duration-700 w-full left-0 right-0 grid grid-cols-1 grid-rows-[auto_1fr_auto] lg:grid-rows-[auto] mx-auto gap-4 px-4 pt-4 lg:pt-8">
            
            <!-- Banner image credit -->
            {hasBannerCredit && <a href={siteConfig.banner.credit.url} id="banner-credit" target="_blank" rel="noopener" aria-label="Visit image source"
                                   class:list={["group onload-animation transition-all absolute flex justify-center items-center rounded-full " +
                                   "px-3 right-4 -top-[3.25rem] bg-black/60 hover:bg-black/70 h-9", {"hover:pr-9 active:bg-black/80": hasBannerLink}]}
            >
                <Icon class="text-white/75 text-[1.25rem] mr-1" name="material-symbols:copyright-outline-rounded" ></Icon>
                <div class="text-white/75 text-xs">{siteConfig.banner.credit.text}</div>
                <Icon class:list={["transition absolute text-[oklch(0.75_0.14_var(--hue))] right-4 text-[0.75rem] opacity-0",
                    {"group-hover:opacity-100": hasBannerLink}]}
                      name="fa6-solid:arrow-up-right-from-square">
                </Icon>
            </a>}

            <!-- 注释掉原本的左侧边栏 -->
            <!-- <SideBar class="mb-4 row-start-2 row-end-3 col-span-2 lg:row-start-1 lg:row-end-2 lg:col-span-1 lg:max-w-[17.5rem] onload-animation" headings={headings} series={series}></SideBar> -->

            <main id="swup-container" class="transition-swup-fade col-span-1 overflow-hidden">
                <div id="content-wrapper" class="onload-animation">
                    <slot></slot>
                    <div class="footer onload-animation hidden lg:block">
                        <Footer></Footer>
                    </div>
                </div>
            </main>

            <div class="footer onload-animation block lg:hidden">
                <Footer></Footer>
            </div>
        </div>

        <!-- TOC -->
        <div class="absolute w-[calc(100%-2rem)] z-0 hidden 2xl:block lg:ml-8">
            <div class="relative max-w-[calc(var(--page-width)+1rem)] mx-auto">
                {siteConfig.toc.enable && <div id="toc-wrapper" class:list={["hidden lg:block transition absolute top-0 -right-[var(--toc-width)] w-[var(--toc-width)] items-center",
                    {"toc-hide": siteConfig.banner.enable}]}
                >
                    <div id="toc-inner-wrapper" class="fixed top-14 w-[var(--toc-width)] h-[calc(100vh_-_20rem)] overflow-y-scroll overflow-x-hidden hide-scrollbar">
                        <div id="toc" class="w-full h-full transition-swup-fade ">
                            <div class="h-8 w-full"></div>
                            <TOC headings={headings}></TOC>
                            <div class="h-8 w-full"></div>
                        </div>
                    </div>
                </div>}

                {!siteConfig.toc.enable && <div id="toc"></div>}
            </div>
        </div>

        {!siteConfig.toc.enable && <div id="toc"></div>}
        <SmartScrollButton></SmartScrollButton>
    </div>
</div>

<!-- 右下角悬浮搜索按钮 - 只在主页显示 -->
<div id="floating-search-wrapper" class="fixed bottom-6 right-6 z-50 hidden">
    <div id="floating-search-container" class="relative">
        <!-- 搜索按钮 -->
        <button 
            id="floating-search-btn" 
            class="w-14 h-14 bg-[var(--primary)] text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-200 flex items-center justify-center hover:scale-105 active:scale-95"
            aria-label="搜索"
        >
            <Icon name="material-symbols:search" class="text-2xl" />
        </button>
    </div>
</div>

<!-- 屏幕中央搜索面板 -->
<div id="floating-search-panel" class="fixed inset-0 z-[60] flex items-center justify-center p-4 bg-black/20 dark:bg-black/40 backdrop-blur-sm opacity-0 pointer-events-none transition-all duration-300">
    <div class="w-full max-w-2xl bg-[var(--card-bg)] border border-[var(--line-divider)] rounded-xl shadow-2xl p-6 transform scale-95 transition-all duration-300">
        <!-- 搜索输入框 -->
        <div class="flex relative transition-all items-center h-12 rounded-xl mb-4
            bg-black/[0.04] hover:bg-black/[0.06] focus-within:bg-black/[0.06]
            dark:bg-white/5 dark:hover:bg-white/10 dark:focus-within:bg-white/10
            border-2 border-transparent focus-within:border-[var(--primary)]
        ">
            <Icon name="material-symbols:search" class="absolute text-xl pointer-events-none ml-4 transition my-auto text-black/30 dark:text-white/30" />
            <input 
                id="floating-search-input"
                placeholder="搜索文章..."
                class="pl-12 pr-4 absolute inset-0 text-base bg-transparent outline-0 text-black/70 dark:text-white/70 placeholder:text-black/40 dark:placeholder:text-white/40"
                autocomplete="off"
            >
        </div>
        
        <!-- 搜索结果容器 -->
        <div id="floating-search-results" class="max-h-80 overflow-y-auto">
            <!-- 搜索结果将通过JavaScript动态插入 -->
        </div>
        
        <!-- 搜索提示 -->
        <div class="text-sm text-black/50 dark:text-white/50 mt-3 text-center">
            输入关键词开始搜索 • 按 ESC 关闭
        </div>
    </div>
</div>

<script>
    // 悬浮搜索功能
    document.addEventListener('DOMContentLoaded', () => {
        const searchWrapper = document.getElementById('floating-search-wrapper');
        const searchBtn = document.getElementById('floating-search-btn');
        const searchPanel = document.getElementById('floating-search-panel');
        const searchInput = document.getElementById('floating-search-input');
        const searchResults = document.getElementById('floating-search-results');
        let isSearchOpen = false;
        let searchTimeout: ReturnType<typeof setTimeout> | undefined;
        
        // 检查是否为主页（包括分页）
        function isHomePage() {
            const path = window.location.pathname;
            // 主页路径：/ 或 /页码/ (如 /2/, /3/ 等)
            return path === '/' || /^\/\d+\/$/.test(path);
        }
        
        // 显示/隐藏搜索按钮
        function toggleSearchButton() {
            if (isHomePage()) {
                searchWrapper?.classList.remove('hidden');
            } else {
                searchWrapper?.classList.add('hidden');
                // 如果搜索面板是打开的，关闭它
                if (isSearchOpen) {
                    isSearchOpen = false;
                    searchPanel?.classList.add('opacity-0', 'pointer-events-none');
                    searchPanel?.classList.remove('opacity-100', 'pointer-events-auto');
                    const panelContent = searchPanel?.querySelector('div');
                    panelContent?.classList.add('scale-95');
                    panelContent?.classList.remove('scale-100');
                }
            }
        }
        
        // 初始化时检查页面
        toggleSearchButton();
        
        // 监听页面变化（用于 swup 导航）
        if (window.swup) {
            window.swup.hooks.on('content:replace', () => {
                toggleSearchButton();
            });
        }
        
        // 打开/关闭搜索面板
        searchBtn?.addEventListener('click', () => {
            isSearchOpen = !isSearchOpen;
            if (isSearchOpen) {
                searchPanel?.classList.remove('opacity-0', 'pointer-events-none');
                searchPanel?.classList.add('opacity-100', 'pointer-events-auto');
                // 搜索面板内容动画
                const panelContent = searchPanel?.querySelector('div');
                panelContent?.classList.remove('scale-95');
                panelContent?.classList.add('scale-100');
                // 自动聚焦到输入框
                setTimeout(() => {
                    searchInput?.focus();
                }, 100);
            } else {
                searchPanel?.classList.add('opacity-0', 'pointer-events-none');
                searchPanel?.classList.remove('opacity-100', 'pointer-events-auto');
                // 搜索面板内容动画
                const panelContent = searchPanel?.querySelector('div');
                panelContent?.classList.add('scale-95');
                panelContent?.classList.remove('scale-100');
                // 清空搜索结果
                if (searchResults) {
                    searchResults.innerHTML = '';
                }
                if (searchInput) {
                    (searchInput as HTMLInputElement).value = '';
                }
            }
        });
        
        // 搜索功能
        searchInput?.addEventListener('input', (e) => {
            const keyword = (e.target as HTMLInputElement)?.value?.trim() ?? '';
            
            // 清除之前的搜索延时
            if (searchTimeout) {
                clearTimeout(searchTimeout);
            }
            
            // 延时搜索，避免频繁请求
            searchTimeout = setTimeout(async () => {
                if (keyword.length > 0) {
                    await performSearch(keyword);
                } else {
                    // 清空搜索结果
                    if (searchResults) {
                        searchResults.innerHTML = '<div class="text-sm text-black/50 dark:text-white/50 text-center py-4">输入关键词开始搜索</div>';
                    }
                }
            }, 300);
        });
        
        // 执行搜索
        async function performSearch(keyword: string) {
            if (!searchResults) return;
            
            // 显示搜索中状态
            searchResults.innerHTML = '<div class="text-sm text-black/50 dark:text-white/50 text-center py-4">搜索中...</div>';
            
            try {
                if (window.pagefind) {
                    const response = await window.pagefind.search(keyword);
                    const results = await Promise.all(
                        response.results.slice(0, 8).map(item => item.data())
                    );
                    
                    if (results.length > 0) {
                        searchResults.innerHTML = results.map(item => `
                            <a href="${item.url}" class="block p-3 rounded-lg hover:bg-black/5 dark:hover:bg-white/5 transition-colors border-b border-black/5 dark:border-white/5 last:border-b-0">
                                <div class="font-medium text-black/80 dark:text-white/80 mb-1">${item.meta.title}</div>
                                <div class="text-sm text-black/60 dark:text-white/60 line-clamp-2">${item.excerpt}</div>
                            </a>
                        `).join('');
                    } else {
                        searchResults.innerHTML = '<div class="text-sm text-black/50 dark:text-white/50 text-center py-4">未找到相关结果</div>';
                    }
                } else {
                    searchResults.innerHTML = '<div class="text-sm text-red-500 text-center py-4">搜索功能暂不可用</div>';
                }
            } catch (error) {
                console.error('搜索出错:', error);
                searchResults.innerHTML = '<div class="text-sm text-red-500 text-center py-4">搜索出错，请稍后重试</div>';
            }
        }
        
        // 按ESC键关闭搜索面板
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && isSearchOpen) {
                isSearchOpen = false;
                searchPanel?.classList.add('opacity-0', 'pointer-events-none');
                searchPanel?.classList.remove('opacity-100', 'pointer-events-auto');
                const panelContent = searchPanel?.querySelector('div');
                panelContent?.classList.add('scale-95');
                panelContent?.classList.remove('scale-100');
            }
        });
        
        // 点击背景关闭搜索面板
        searchPanel?.addEventListener('click', (e) => {
            if (e.target === searchPanel) {
                isSearchOpen = false;
                searchPanel.classList.add('opacity-0', 'pointer-events-none');
                searchPanel.classList.remove('opacity-100', 'pointer-events-auto');
                const panelContent = searchPanel.querySelector('div');
                panelContent?.classList.add('scale-95');
                panelContent?.classList.remove('scale-100');
            }
        });
    });
</script>
</Layout>
