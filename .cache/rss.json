{
  "items": [
    {
      "title": "推荐一些免费部署的小玩意",
      "link": "https://www.blueke.top/posts/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%BA%9B%E5%85%8D%E8%B4%B9%E9%83%A8%E7%BD%B2%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%84%8F/",
      "pubDate": "Wed, 21 May 2025 18:59:00 GMT",
      "content:encoded": "<p>突然想写一写自己折腾过什么有意思的东西，也顺便记录一下，省的以后忘掉了。</p>\n<blockquote>\n<p>PS：白嫖果然是最香的！</p>\n</blockquote>\n<h2>Claw Cloud</h2>\n<p><strong>简介：</strong>\n<a href=\"https://console.run.claw.cloud/signin?link=MBIT8OOU4ZEA\">ClawCloud Run</a> 是一个按时收费的云原生开发平台，具有以下特点：</p>\n<ul>\n<li>注册时间超过 180 天的 Github 账号可获得每月 $5 USD 的<strong>永久免费额度</strong></li>\n<li>部署在阿里云全球骨干网络上，访问速度出色</li>\n<li>支持多种应用的一键部署</li>\n<li>适合开发测试和轻量级应用部署\n由于这些特性，所以我们可以部署一些像 Alist、FreshRSS 等轻量的应用</li>\n</ul>\n<blockquote>\n<p>[!TIP]\n博主提供的是自己的邀请链接，如果你介意，可自行搜索官网。(每邀请五位好友注册，可获得一个月订阅)</p>\n</blockquote>\n<p><strong>注册</strong>：\n用户可直接注册，但需要注意的是，Github未超过 180 天的用户<strong>只有一个月的体验资格</strong>，超过 180 天的用户有每个月 5￥的免费额度。</p>\n<blockquote>\n<p>PS：可能由于人数比较多，我注册后等了好一会才在 Billing 里看到赠送额度。推荐选择新加披或日本地区使用。</p>\n</blockquote>\n<h3>Alist 网盘管理</h3>\n<p><strong>简介</strong>：<a href=\"https://alistgo.com/zh/\">AList</a> 是一个支持多种存储的文件列表程序，支持 Web 界面访问，允许你将多种网盘服务集中管理。</p>\n<h4>安装</h4>\n<p>在首页的 <code>AppStore</code> 中找到 Alist，输入账号密码后直接点击 <code>Deploy App</code>  进行部署。</p>\n<p>耐心等待部署完成后，可在首页的 <code>App launchpad</code> 中查看运行状态，以及分配的链接地址。</p>\n<blockquote>\n<p>PS：若你和我一样，输入密码发现登录不了，没关系!!</p>\n</blockquote>\n<p>在 <code>App launchpad</code> -&gt; <code>Overview</code> 页面滑到最下面，可以看到 <code>Pod List板块</code> <img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/Pasted%20image%2020250521192539.webp\" alt=\"Pasted image 20250521192539\" /></p>\n<p>点开 logs，你就应该能看到 alist 部署后自动生成的账号和密码了。</p>\n<p>实在不行，手动执行 <code>./alist admin set NEW_PASSWORD</code> 设置新密码即可。</p>\n<p>此外，获取管理员账号信息 <code>./alist admin</code></p>\n<p><strong>通过 <code>Network</code> 可以自定义域名。</strong></p>\n<p>更多的使用教程请参阅<a href=\"https://alistgo.com/zh/guide/\">AList文档</a></p>\n<h3>FreshRSS 阅读器</h3>\n<p><strong><a href=\"https://www.freshrss.org/\">FreshRSS</a> 是一个自托管的 RSS 和 Atom 源聚合器。</strong>  它轻量、易于使用、功能强大且可自定义。</p>\n<p>RSS 可以让我们方便地订阅他人的博客以及获取一些网站资讯，及时获取更新。</p>\n<h4>安装</h4>\n<p>在首页的 <code>AppStore</code> 中找到 FreshRSS，直接点击 <code>Deploy App</code>  进行部署。</p>\n<p>随后只要在站点地址进行基础配置即可。<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/%E9%85%8D%E7%BD%AEfreshrss.webp\" alt=\"配置freshrss|950\" /></p>\n<p>个人建议：存储选择 SQLite 即可，常规配置一定要选择网页表单</p>\n<blockquote>\n<p>[!TIP]\n另外，官方给 FreshRSS 的配置貌似有点高，可自行减少以免不必要的开支</p>\n</blockquote>\n<h2>Vercel</h2>\n<p><strong>简介</strong>：Vercel 是一个云服务平台，支持静态网站（纯静态页面，没有接口数据交互）和动态网站的应用部署、预览和上线。\n这里由于部署的年份有点久远，所以引用各位大佬的博客</p>\n<h3>Waline 评论</h3>\n<p><strong>简介</strong>：一款简洁、安全的评论系统</p>\n<p><strong>演示</strong>：参考本站的评论</p>\n<p><strong>安装教程</strong>：官方提供了详细的部署教程<a href=\"https://waline.js.org/guide/get-started/#vercel-%E9%83%A8%E7%BD%B2-%E6%9C%8D%E5%8A%A1%E7%AB%AF\">快速上手 | Waline</a>。但是这里不建议采取官方使用的 LeanCloud 数据库了，因为访问可能会稍慢。</p>\n<p>建议使用 Vercel 免费的数据库 <a href=\"https://vercel.com/marketplace/category/storage\">Vercel Marketplace for Storage</a>。本人使用的是 <code>Neon</code>，使用 SupaBase 不知为什么连不上数据库。环境变量参照：<a href=\"https://waline.js.org/guide/database.html#postgresql\">多数据库服务支持 | Waline</a></p>\n<p>其中你需要将<strong>端口设置为 <code>5432</code> 以及 ssl 设置为 <code>true</code></strong>。</p>\n<h3>Umami 网站监测</h3>\n<p>Umami 是一个更加方便且现代化的网站监测工具，今天发现可以 vercel 可以部署后，也是迫不及待的部署体验了一下。</p>\n<p>因为自带有公共链接，可以让所有人都能看到站点状态：<a href=\"https://umami.blueke.top/share/vtD8GhH5iWtKf6uG/www.blueke.top\">本站站点状态</a></p>\n<p>至于具体的教程，请参考这篇文章<a href=\"https://www.linexic.top/post/vercel-runing-u/\">使用 vercel Neon 搭建 umami 统计</a></p>\n<h2>Github</h2>\n<h3>自建图床 + Piclist</h3>\n<p>如果博客使用本地照片，可能会导致访问速度变得很慢很慢，这时候就需要一个在线的图床。图床是一种用于存储和分享图片的在线服务。用户可以将自己的图片上传到图床，然后通过链接来分享图片。</p>\n<p><a href=\"https://piclist.cn/\">PicList</a>：可以帮助我们在本地更好的上传图片、管理图床、</p>\n<p>简单教程：使用 github 其实蛮简单的，只要新建一个仓库，然后在 piclist 中填写相应信息即可。</p>\n<p>详情参阅：<a href=\"https://piclist.cn/configure.html#github%E5%9B%BE%E5%BA%8A\">文件上传-Github图床 | PicList</a></p>\n<blockquote>\n<p>[!TIP]\nGitHub 本身是不允许这么做的，所以如果你图片存放过多，可能会被封禁仓库(一般不会 )</p>\n</blockquote>\n<p>GitHub 仓库是公开性质的，如果你想要更安全的存储，可参阅其他服务</p>\n<h2>More</h2>\n<p>其实还有一些，但感觉没什么必要进行推荐。此外，如果你再部署以上服务的时候有问题的话，欢迎评论区留言哦！</p>\n",
      "content:encodedSnippet": "突然想写一写自己折腾过什么有意思的东西，也顺便记录一下，省的以后忘掉了。\nPS：白嫖果然是最香的！\nClaw Cloud\n简介：\nClawCloud Run 是一个按时收费的云原生开发平台，具有以下特点：\n注册时间超过 180 天的 Github 账号可获得每月 $5 USD 的永久免费额度\n部署在阿里云全球骨干网络上，访问速度出色\n支持多种应用的一键部署\n适合开发测试和轻量级应用部署\n由于这些特性，所以我们可以部署一些像 Alist、FreshRSS 等轻量的应用\n[!TIP]\n博主提供的是自己的邀请链接，如果你介意，可自行搜索官网。(每邀请五位好友注册，可获得一个月订阅)\n注册：\n用户可直接注册，但需要注意的是，Github未超过 180 天的用户只有一个月的体验资格，超过 180 天的用户有每个月 5￥的免费额度。\nPS：可能由于人数比较多，我注册后等了好一会才在 Billing 里看到赠送额度。推荐选择新加披或日本地区使用。\nAlist 网盘管理\n简介：AList 是一个支持多种存储的文件列表程序，支持 Web 界面访问，允许你将多种网盘服务集中管理。\n安装\n在首页的 AppStore 中找到 Alist，输入账号密码后直接点击 Deploy App  进行部署。\n耐心等待部署完成后，可在首页的 App launchpad 中查看运行状态，以及分配的链接地址。\nPS：若你和我一样，输入密码发现登录不了，没关系!!\n在 App launchpad -> Overview 页面滑到最下面，可以看到 Pod List板块 \n点开 logs，你就应该能看到 alist 部署后自动生成的账号和密码了。\n实在不行，手动执行 ./alist admin set NEW_PASSWORD 设置新密码即可。\n此外，获取管理员账号信息 ./alist admin\n通过 Network 可以自定义域名。\n更多的使用教程请参阅AList文档\nFreshRSS 阅读器\nFreshRSS 是一个自托管的 RSS 和 Atom 源聚合器。  它轻量、易于使用、功能强大且可自定义。\nRSS 可以让我们方便地订阅他人的博客以及获取一些网站资讯，及时获取更新。\n安装\n在首页的 AppStore 中找到 FreshRSS，直接点击 Deploy App  进行部署。\n随后只要在站点地址进行基础配置即可。\n个人建议：存储选择 SQLite 即可，常规配置一定要选择网页表单\n[!TIP]\n另外，官方给 FreshRSS 的配置貌似有点高，可自行减少以免不必要的开支\nVercel\n简介：Vercel 是一个云服务平台，支持静态网站（纯静态页面，没有接口数据交互）和动态网站的应用部署、预览和上线。\n这里由于部署的年份有点久远，所以引用各位大佬的博客\nWaline 评论\n简介：一款简洁、安全的评论系统\n演示：参考本站的评论\n安装教程：官方提供了详细的部署教程快速上手 | Waline。但是这里不建议采取官方使用的 LeanCloud 数据库了，因为访问可能会稍慢。\n建议使用 Vercel 免费的数据库 Vercel Marketplace for Storage。本人使用的是 Neon，使用 SupaBase 不知为什么连不上数据库。环境变量参照：多数据库服务支持 | Waline\n其中你需要将端口设置为 5432 以及 ssl 设置为 true。\nUmami 网站监测\nUmami 是一个更加方便且现代化的网站监测工具，今天发现可以 vercel 可以部署后，也是迫不及待的部署体验了一下。\n因为自带有公共链接，可以让所有人都能看到站点状态：本站站点状态\n至于具体的教程，请参考这篇文章使用 vercel Neon 搭建 umami 统计\nGithub\n自建图床 + Piclist\n如果博客使用本地照片，可能会导致访问速度变得很慢很慢，这时候就需要一个在线的图床。图床是一种用于存储和分享图片的在线服务。用户可以将自己的图片上传到图床，然后通过链接来分享图片。\nPicList：可以帮助我们在本地更好的上传图片、管理图床、\n简单教程：使用 github 其实蛮简单的，只要新建一个仓库，然后在 piclist 中填写相应信息即可。\n详情参阅：文件上传-Github图床 | PicList\n[!TIP]\nGitHub 本身是不允许这么做的，所以如果你图片存放过多，可能会被封禁仓库(一般不会 )\nGitHub 仓库是公开性质的，如果你想要更安全的存储，可参阅其他服务\nMore\n其实还有一些，但感觉没什么必要进行推荐。此外，如果你再部署以上服务的时候有问题的话，欢迎评论区留言哦！",
      "content": "一些觉得还不错的东西，都比较实用",
      "contentSnippet": "一些觉得还不错的东西，都比较实用",
      "guid": "https://www.blueke.top/posts/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%BA%9B%E5%85%8D%E8%B4%B9%E9%83%A8%E7%BD%B2%E7%9A%84%E5%B0%8F%E7%8E%A9%E6%84%8F/",
      "categories": [
        "博客",
        "玩机"
      ],
      "isoDate": "2025-05-21T18:59:00.000Z"
    },
    {
      "title": "【转载】从哲库到玄戒，从造芯之“死”到造芯之生",
      "link": "https://www.blueke.top/posts/%E8%BD%AC%E8%BD%BD%E4%BB%8E%E5%93%B2%E5%BA%93%E5%88%B0%E7%8E%84%E6%88%92%E4%BB%8E%E9%80%A0%E8%8A%AF%E4%B9%8B%E6%AD%BB%E5%88%B0%E9%80%A0%E8%8A%AF%E4%B9%8B%E7%94%9F/",
      "pubDate": "Tue, 20 May 2025 16:25:00 GMT",
      "content:encoded": "<p>:::IMPORTANT[转载声明]\n本文原载于微博，标题为《从哲库到玄戒，从造芯之“死”到造芯之生》，首发于<strong>2025年 05月 16日</strong></p>\n<p>作者为<strong>硅星人Pro</strong>（微博认证账号：@硅星人Pro）。  \n原文链接：<a href=\"https://weibo.com/ttarticle/p/show?id=2309405167006868963380\">点击查看</a>  \n:::</p>\n<p>​​自己研发智能手机芯片，总归要尝到一些苦头。</p>\n<p>2012年，华为开始自研智能手机芯片，2014年，“麒麟”系列处理器问世，2019年，华为首款 5G SoC 芯片麒麟990发布，旋即遭遇美国出口管制，代工麒麟 5G 芯片的全球供应链被截断。</p>\n<p>2017年，小米曾高调发布首款自研手机SoC芯片——澎湃S1，由小米5C首发搭载，这让小米当时成为继苹果、三星、华为之后全球第四家拥有自研手机芯片的智能手机品牌。澎湃S1本身定位中端芯片（不支持联通部分3G/4G网络，也不支持电信网络），作为一款试水之作小米5C卖出了四五十万台，作为试水之作成绩尚可。但后续澎湃S2推进不顺，芯片团队内部出了不少问题，小米按下了手机 SoC 项目的暂停键。</p>\n<p>2019年，智能手机厂商 OPPO 启动造芯计划，3000人豪华研发团队收入彀中，芯片产品线涵盖核心应用处理器、5G Modem、射频、ISP、电源管理等全链路，也在2021年和2022年先后推出了一款影像 NPU 芯片和一款蓝牙音频NPU 单元。然而，就在2022年，OPPO 一夜之间关停了芯片业务，“哲库” 立时夭折。</p>\n<p>除了华为遭遇了众所周知的不可抗力，OPPO 和小米的手机 SoC 自主研发都曾遇到现实的技术问题和商业模式闭环问题。此后，国产智能手机“造芯” 似乎就偃旗息鼓了。加上生成式人工智能（Generative AI ) 的崛起，以 GPU 为代表的高性能计算人工智能处理器——“XPU”们成了“显学”，好像手机 SoC 已经变得不重要了。</p>\n<p>因此，当最近传出小米最新自研的、采用台积电N4P工艺，性能对标苹果A16的手机 SoC 芯片“玄戒” 即将发布的消息，业界一些人的反应是有些迷惑的，这事儿还重要么？为什么小米在 SoC 上非要卷土重来呢？尤其是 OPPO 哲库的轰然倒下，难道还不该给小米留点教训么？人不能两次踏进同一条河流，可小米的一只脚已经伸进去了。</p>\n<p>这是个值得探讨的问题，关乎一个理性的商业决策是如何形成的，在看似相近而实则不同的时空环境之下。</p>\n<p><strong>不一样的商业角色</strong></p>\n<p>对造芯这种大事来说，财务的家底太重要了。</p>\n<p>OPPO 闪电式关停“哲库” 造芯项目的背景，用公司官方的解释是：全球经济和智能手机市场充满不确定性，公司营收低于预期，如此巨大的芯片研发投入已让公司难以为继。据IDC统计，2022年全球智能手机出货量同比下滑11.3%，OPPO更是大跌22.7%，在国内前五大厂商中降幅最大。就这样，一个原本寄托着国产终端厂商“造芯梦”的项目，就这样出师未捷、戛然而止。</p>\n<p>造芯烧钱且试错成本极高，时机选择与资金实力至关重要。设计一颗高端手机SoC的投入远超一般想象：前期研发要烧掉数十亿元资金，每一次流片失败都是上亿级别的损失。“哲库”启动于 OPPO 自身出货量下滑、现金流承压的时期，在全球手机市场下行的背景下持续高投入，无异雪上加霜。据传，OPPO三年时间在哲库烧掉数百亿元（也有业内人士估计实际投入不到150亿元，但对当时的OPPO而言也是不小的负担）。</p>\n<p>更关键的是，OPPO作为一家未上市的民营公司，还要顾及投资人和股东的压力——哲库最后的关停决定就被认为是股东层面 “及时止损”的理性选择。一向对公司业务惜字如金的 OPPO 创始人段永平直言：“改正错误要尽快，多大的代价都要改”，足见耐心耗尽。</p>\n<p>对小米而言，重启造芯是在相对更充裕的窗口期：一方面，小米手机近年一直全球出货前三，营收和市占率都有所提升，也攒下了一定的家底；另一方面，小米彼时启动了造车，AIoT 设备版图也已经成型。2018年以来，小米的现金储备和多线业务支撑，让它财务韧性优于基本靠智能手机输血的OPPO。</p>\n<p>比外界传闻的规模要大得多，过去4年多时间，小米“玄戒”团队据称已秘密组建了近三千人的研发队伍，汇聚了国内外一众芯片大厂出身的资深芯片人才。在资金投入和人才阵容上都不亚于当年的哲库，更重要的，是它有意愿，并且能承受更长的投入周期和更大的试错成本。</p>\n<p><strong>组织架构也是一个重要的问题。</strong></p>\n<p>对智能手机为业务主体的公司来说，芯片研发应深度嵌入整机业务，而不宜完全独立于终端产品线。在这一点上，最佳的例子就是苹果，目标清晰，干净利落。</p>\n<p>手机 SoC 说到底是为自家终端服务的定制化技术，很难脱离整机需求闭门造车。而从资本市场的想象力上，芯片是一个比智能手机“贵”得多的赛道，为了招人研发芯片，尤其是在缺乏股票激励机制的情形下，另起一个炉灶，成立一家完全独立的新公司，给予研发人员更丰厚的激励就成了一个选择。哲库当初采取的就是这种独立法人的模式，在组织结构上，与OPPO 手机业务并行运作。</p>\n<p>在这种模式下，芯片团队虽然旗号上看似跟OPPO关联，但在内部看，更像一家“供应商”在做项目，与手机产品部门之间可能存在信息壁垒或协同鸿沟，也会更加频繁地遭遇来自内部的挑战。甚至，一些关键产品线的负责人可以选择不用哲库研发的芯片。作为一个“外设”部门，哪怕吸收了从华为海思来的大量中国顶级 SoC 芯片研发人才，一旦手机主业下滑，独立芯片公司的日常开销就成了沉重包袱。这种组织结构上的先天问题，或许也是哲库难以为继的隐忧之一。</p>\n<p>如果仔细分析外界流传出来的小米重启“造芯” 计划的信息，就会发现小米在小心翼翼地避免这个问题：尽管”玄戒“注册了独立的法人主体，但是它在内部组织架构上的归属直接在手机部旗下。所有芯片研发人员是标准的小米员工，领小米的工资，拿小米的股票。这也意味着产品需求、芯片设计可以在同一体系内充分磨合，利益完全一致，而且决策链路更短，协同效率更高。</p>\n<p>更重要的，是踩坑和经验。</p>\n<p>在智能手机的全链路上，小米踩过的坑太多了：供应链、线上线下营销、国际化……踩进坑里还能跳出来，经历过大量的前车之鉴，总归是件好事。</p>\n<p>小米2017年经历澎湃S1折戟、S2难产后，选择了战略收缩、保存实力：业务没有解散，而是选择了“保留火种”，转为研发手机周边芯片，在低调中继续积累技术，低调练级。不夸张地说，小米当年的教训给整个行业都上了一课——然而OPPO似乎并没有从中得到足够的启示。</p>\n<p>从结果看，哲库的倒下，几乎是把当年松果犯下的错，都全部犯了一遍：团队架构、核心管理层组成、路径设定、管理方法等等。甚至，一开始的烈火烹油热闹景象中，没有充分考量商业闭环问题：芯片造出来才是万里长征第一步，新玩家一开始肯定没有足够的规模来摊薄成本，而这个芯片世界大浪淘沙剩下的几家巨头，出货价都比新玩家成本低。没有足够的规模和持久的耐心，就会难以忍受持续的亏损。这也就不难理解，为什么在芯片流片的前夜，哲库如此干脆利落地选择了清盘—— 因为在当时完全看不到可以业务打平、实现商业闭环的那一天。</p>\n<p>非常可惜，以 OPPO 彼时造芯势头之猛、大笔投入招兵买马，好像印证了“人类很难从历史中汲取教训”的古训。只要不是自己的教训，似乎就不会成为最切肤的教训。而更深层的原因可能在于，当时国内半导体圈并未对小米遭遇的挫折进行认真复盘总结。小米当然无义务对外分享造芯挫折的经验和教训，而OPPO难免重蹈某些覆辙。</p>\n<p>现在，小米好像更清楚自身的短板和边界在哪。这表现在策略上，更加务实和务虚并举——既“不放弃造芯梦”，又“不再贸然造完全自主的芯”。</p>\n<p>比如，小米玄戒 SoC 据传在5G通信基带上采取了与联发科合作的方案，整合联发科成熟的5G基带技术来规避专利壁垒和技术险滩。毕竟，手机通信基带的复杂度和专利壁垒极高，难度极大，如果新玩家贸然从一开始就强行上自研基带，难度和风险可想而知。</p>\n<p>这一点上，华为海思麒麟芯片当年有自研巴龙基带并拿下专利许可，小米不具备那样的通信业出身的先发优势，索性采取“曲线救国的”策略。而据报道，OPPO 哲库规划的是自研AP+自研基带一体 SoC——难度级别直接拉满，同时挑战CPU架构和基带技术这两座大山。相较之下，小米吸收了前次折戟的经验，在技术路径上更加务实灵活。</p>\n<p><strong>不一样的时空叙事</strong></p>\n<p>那么问题来了，如果“玄戒” 量产了，小米的智能手机、家居设备甚至以后汽车都上新“玄戒”了，它会不会成为下一个华为？</p>\n<p>这是一个关于“大环境”的好问题。我们不得不提中美科技博弈对手机芯片行业的影响。</p>\n<p>2019-2020年间，美国对华为祭出严格出口管制，直接卡住了麒麟系列5G手机芯片的脖子，华为海思一度无芯可用。人们徒唤奈何，一场充满雄心与智慧的远征就这么被扼杀于霸权和非市场理性的干预，无论如何让人意难平。</p>\n<p>我们肯定不能期待霸权主义的网开一面，但事实确实发生了一些变化。</p>\n<p>近两年，美国对中国高科技的发展明显加速了扼制的进程。但其监管的焦点，明显转向了AI高性能计算芯片（如GPU等）领域，或许是，在海思受挫之后，美国当下已认为在SoC芯片领域，中国的芯片厂暂时已不再追求世界先进制程水平。这或许给了我们的芯片设计工业，一个难得的窗口机会。</p>\n<p>而事实也证明，OPPO关停哲库更多是出于商业考量而非制裁所迫，所谓“美国即将制裁OPPO造芯”的传闻并不属实。我们无意于“感激” 美国的“慷慨”，但是既然消费级高制程SoC大芯片，制裁打压当下暂时留有一条“门缝”，小米此时全力投入自研SoC，算是赶上了一个更有意义的窗口期。</p>\n<p>而自研 SoC，当然不是为了自研而自研。</p>\n<p>任何人都看得到：移动终端正迈入“AI手机”时代，这对芯片自主研发提出了新的迫切需求。如今的旗舰手机动辄宣称搭载各种AI功能，从摄像优化、语音助手到生成式AI应用，比比皆是。正如一位OPPO高管所言，AI的多模态融合正在重构手机的系统和交互，对终端侧的传感能力和算力提出了更高要求，未来手机的传感器布局以及芯片平台都需要升级，以支持系统级的AI功能。</p>\n<p>换言之，在 AI 时代，手机厂商越来越不能满足于通用芯片提供的“一刀切”性能，而希望通过自研芯片来深度定制软硬件协同，加速AI体验落地。这股风潮其实已经显现：vivo 有自研影像芯片V系列、OPPO有马里亚纳 X 影像NPU、一加有自研显示芯片、荣耀也发布了通信射频芯片C1等等。这些定制芯片都是为了解决各自产品的瓶颈痛点，以提供差异化的用户体验。</p>\n<p>可以预见，随着 AI 能力成为旗舰机型的标配，顶尖厂商势必要掌握关键芯片的设计主导权，包括ISP、NPU、射频、电源管理乃至 SoC 系统架构层面的深度优化。而小米涉足电动汽车和 AIoT 生态，实际上也为其芯片项目提供了更广阔的用武之地：手机 SoC 研发的成果和技术积累，完全有机会反哺到智能驾驶芯片、IoT芯片等领域。AI时代的手机，不仅比拼终端硬件配置，更比拼底层芯片和算法的融合创新；谁掌握了自研芯片，谁就能真的推动智能手机的 AI 化，以及它作为“端侧AI” 的载体，辐射其它设备的能力。</p>\n<p>“人不能两次踏进同一条河流”。同样是造芯，OPPO哲库和小米玄戒踏入的早已不是同一条河，小米两次踏入的也不是同一条河。哲库之死，更像是败给了一场高调却节奏失误的战役——宏观环境急转直下、战略决策进退失据，让这个本该长期作战的项目过早地鸣金收兵。</p>\n<p>其实，小米和 OPPO 的造芯之路并没有谁对谁错，只有“成”与“不成”的时与势。造芯本就是九死一生的征途。唯一可以肯定的是：一旦小米玄戒 SoC 成功量产商用，小米将成为继苹果、三星、华为之后，全球第四个真正具备高端手机芯片自主研发能力的消费电子厂商。</p>\n<p>这终归是一件好事，对吧。</p>\n",
      "content:encodedSnippet": ":::IMPORTANT[转载声明]\n本文原载于微博，标题为《从哲库到玄戒，从造芯之“死”到造芯之生》，首发于2025年 05月 16日\n作者为硅星人Pro（微博认证账号：@硅星人Pro）。  \n原文链接：点击查看  \n:::\n​​自己研发智能手机芯片，总归要尝到一些苦头。\n2012年，华为开始自研智能手机芯片，2014年，“麒麟”系列处理器问世，2019年，华为首款 5G SoC 芯片麒麟990发布，旋即遭遇美国出口管制，代工麒麟 5G 芯片的全球供应链被截断。\n2017年，小米曾高调发布首款自研手机SoC芯片——澎湃S1，由小米5C首发搭载，这让小米当时成为继苹果、三星、华为之后全球第四家拥有自研手机芯片的智能手机品牌。澎湃S1本身定位中端芯片（不支持联通部分3G/4G网络，也不支持电信网络），作为一款试水之作小米5C卖出了四五十万台，作为试水之作成绩尚可。但后续澎湃S2推进不顺，芯片团队内部出了不少问题，小米按下了手机 SoC 项目的暂停键。\n2019年，智能手机厂商 OPPO 启动造芯计划，3000人豪华研发团队收入彀中，芯片产品线涵盖核心应用处理器、5G Modem、射频、ISP、电源管理等全链路，也在2021年和2022年先后推出了一款影像 NPU 芯片和一款蓝牙音频NPU 单元。然而，就在2022年，OPPO 一夜之间关停了芯片业务，“哲库” 立时夭折。\n除了华为遭遇了众所周知的不可抗力，OPPO 和小米的手机 SoC 自主研发都曾遇到现实的技术问题和商业模式闭环问题。此后，国产智能手机“造芯” 似乎就偃旗息鼓了。加上生成式人工智能（Generative AI ) 的崛起，以 GPU 为代表的高性能计算人工智能处理器——“XPU”们成了“显学”，好像手机 SoC 已经变得不重要了。\n因此，当最近传出小米最新自研的、采用台积电N4P工艺，性能对标苹果A16的手机 SoC 芯片“玄戒” 即将发布的消息，业界一些人的反应是有些迷惑的，这事儿还重要么？为什么小米在 SoC 上非要卷土重来呢？尤其是 OPPO 哲库的轰然倒下，难道还不该给小米留点教训么？人不能两次踏进同一条河流，可小米的一只脚已经伸进去了。\n这是个值得探讨的问题，关乎一个理性的商业决策是如何形成的，在看似相近而实则不同的时空环境之下。\n不一样的商业角色\n对造芯这种大事来说，财务的家底太重要了。\nOPPO 闪电式关停“哲库” 造芯项目的背景，用公司官方的解释是：全球经济和智能手机市场充满不确定性，公司营收低于预期，如此巨大的芯片研发投入已让公司难以为继。据IDC统计，2022年全球智能手机出货量同比下滑11.3%，OPPO更是大跌22.7%，在国内前五大厂商中降幅最大。就这样，一个原本寄托着国产终端厂商“造芯梦”的项目，就这样出师未捷、戛然而止。\n造芯烧钱且试错成本极高，时机选择与资金实力至关重要。设计一颗高端手机SoC的投入远超一般想象：前期研发要烧掉数十亿元资金，每一次流片失败都是上亿级别的损失。“哲库”启动于 OPPO 自身出货量下滑、现金流承压的时期，在全球手机市场下行的背景下持续高投入，无异雪上加霜。据传，OPPO三年时间在哲库烧掉数百亿元（也有业内人士估计实际投入不到150亿元，但对当时的OPPO而言也是不小的负担）。\n更关键的是，OPPO作为一家未上市的民营公司，还要顾及投资人和股东的压力——哲库最后的关停决定就被认为是股东层面 “及时止损”的理性选择。一向对公司业务惜字如金的 OPPO 创始人段永平直言：“改正错误要尽快，多大的代价都要改”，足见耐心耗尽。\n对小米而言，重启造芯是在相对更充裕的窗口期：一方面，小米手机近年一直全球出货前三，营收和市占率都有所提升，也攒下了一定的家底；另一方面，小米彼时启动了造车，AIoT 设备版图也已经成型。2018年以来，小米的现金储备和多线业务支撑，让它财务韧性优于基本靠智能手机输血的OPPO。\n比外界传闻的规模要大得多，过去4年多时间，小米“玄戒”团队据称已秘密组建了近三千人的研发队伍，汇聚了国内外一众芯片大厂出身的资深芯片人才。在资金投入和人才阵容上都不亚于当年的哲库，更重要的，是它有意愿，并且能承受更长的投入周期和更大的试错成本。\n组织架构也是一个重要的问题。\n对智能手机为业务主体的公司来说，芯片研发应深度嵌入整机业务，而不宜完全独立于终端产品线。在这一点上，最佳的例子就是苹果，目标清晰，干净利落。\n手机 SoC 说到底是为自家终端服务的定制化技术，很难脱离整机需求闭门造车。而从资本市场的想象力上，芯片是一个比智能手机“贵”得多的赛道，为了招人研发芯片，尤其是在缺乏股票激励机制的情形下，另起一个炉灶，成立一家完全独立的新公司，给予研发人员更丰厚的激励就成了一个选择。哲库当初采取的就是这种独立法人的模式，在组织结构上，与OPPO 手机业务并行运作。\n在这种模式下，芯片团队虽然旗号上看似跟OPPO关联，但在内部看，更像一家“供应商”在做项目，与手机产品部门之间可能存在信息壁垒或协同鸿沟，也会更加频繁地遭遇来自内部的挑战。甚至，一些关键产品线的负责人可以选择不用哲库研发的芯片。作为一个“外设”部门，哪怕吸收了从华为海思来的大量中国顶级 SoC 芯片研发人才，一旦手机主业下滑，独立芯片公司的日常开销就成了沉重包袱。这种组织结构上的先天问题，或许也是哲库难以为继的隐忧之一。\n如果仔细分析外界流传出来的小米重启“造芯” 计划的信息，就会发现小米在小心翼翼地避免这个问题：尽管”玄戒“注册了独立的法人主体，但是它在内部组织架构上的归属直接在手机部旗下。所有芯片研发人员是标准的小米员工，领小米的工资，拿小米的股票。这也意味着产品需求、芯片设计可以在同一体系内充分磨合，利益完全一致，而且决策链路更短，协同效率更高。\n更重要的，是踩坑和经验。\n在智能手机的全链路上，小米踩过的坑太多了：供应链、线上线下营销、国际化……踩进坑里还能跳出来，经历过大量的前车之鉴，总归是件好事。\n小米2017年经历澎湃S1折戟、S2难产后，选择了战略收缩、保存实力：业务没有解散，而是选择了“保留火种”，转为研发手机周边芯片，在低调中继续积累技术，低调练级。不夸张地说，小米当年的教训给整个行业都上了一课——然而OPPO似乎并没有从中得到足够的启示。\n从结果看，哲库的倒下，几乎是把当年松果犯下的错，都全部犯了一遍：团队架构、核心管理层组成、路径设定、管理方法等等。甚至，一开始的烈火烹油热闹景象中，没有充分考量商业闭环问题：芯片造出来才是万里长征第一步，新玩家一开始肯定没有足够的规模来摊薄成本，而这个芯片世界大浪淘沙剩下的几家巨头，出货价都比新玩家成本低。没有足够的规模和持久的耐心，就会难以忍受持续的亏损。这也就不难理解，为什么在芯片流片的前夜，哲库如此干脆利落地选择了清盘—— 因为在当时完全看不到可以业务打平、实现商业闭环的那一天。\n非常可惜，以 OPPO 彼时造芯势头之猛、大笔投入招兵买马，好像印证了“人类很难从历史中汲取教训”的古训。只要不是自己的教训，似乎就不会成为最切肤的教训。而更深层的原因可能在于，当时国内半导体圈并未对小米遭遇的挫折进行认真复盘总结。小米当然无义务对外分享造芯挫折的经验和教训，而OPPO难免重蹈某些覆辙。\n现在，小米好像更清楚自身的短板和边界在哪。这表现在策略上，更加务实和务虚并举——既“不放弃造芯梦”，又“不再贸然造完全自主的芯”。\n比如，小米玄戒 SoC 据传在5G通信基带上采取了与联发科合作的方案，整合联发科成熟的5G基带技术来规避专利壁垒和技术险滩。毕竟，手机通信基带的复杂度和专利壁垒极高，难度极大，如果新玩家贸然从一开始就强行上自研基带，难度和风险可想而知。\n这一点上，华为海思麒麟芯片当年有自研巴龙基带并拿下专利许可，小米不具备那样的通信业出身的先发优势，索性采取“曲线救国的”策略。而据报道，OPPO 哲库规划的是自研AP+自研基带一体 SoC——难度级别直接拉满，同时挑战CPU架构和基带技术这两座大山。相较之下，小米吸收了前次折戟的经验，在技术路径上更加务实灵活。\n不一样的时空叙事\n那么问题来了，如果“玄戒” 量产了，小米的智能手机、家居设备甚至以后汽车都上新“玄戒”了，它会不会成为下一个华为？\n这是一个关于“大环境”的好问题。我们不得不提中美科技博弈对手机芯片行业的影响。\n2019-2020年间，美国对华为祭出严格出口管制，直接卡住了麒麟系列5G手机芯片的脖子，华为海思一度无芯可用。人们徒唤奈何，一场充满雄心与智慧的远征就这么被扼杀于霸权和非市场理性的干预，无论如何让人意难平。\n我们肯定不能期待霸权主义的网开一面，但事实确实发生了一些变化。\n近两年，美国对中国高科技的发展明显加速了扼制的进程。但其监管的焦点，明显转向了AI高性能计算芯片（如GPU等）领域，或许是，在海思受挫之后，美国当下已认为在SoC芯片领域，中国的芯片厂暂时已不再追求世界先进制程水平。这或许给了我们的芯片设计工业，一个难得的窗口机会。\n而事实也证明，OPPO关停哲库更多是出于商业考量而非制裁所迫，所谓“美国即将制裁OPPO造芯”的传闻并不属实。我们无意于“感激” 美国的“慷慨”，但是既然消费级高制程SoC大芯片，制裁打压当下暂时留有一条“门缝”，小米此时全力投入自研SoC，算是赶上了一个更有意义的窗口期。\n而自研 SoC，当然不是为了自研而自研。\n任何人都看得到：移动终端正迈入“AI手机”时代，这对芯片自主研发提出了新的迫切需求。如今的旗舰手机动辄宣称搭载各种AI功能，从摄像优化、语音助手到生成式AI应用，比比皆是。正如一位OPPO高管所言，AI的多模态融合正在重构手机的系统和交互，对终端侧的传感能力和算力提出了更高要求，未来手机的传感器布局以及芯片平台都需要升级，以支持系统级的AI功能。\n换言之，在 AI 时代，手机厂商越来越不能满足于通用芯片提供的“一刀切”性能，而希望通过自研芯片来深度定制软硬件协同，加速AI体验落地。这股风潮其实已经显现：vivo 有自研影像芯片V系列、OPPO有马里亚纳 X 影像NPU、一加有自研显示芯片、荣耀也发布了通信射频芯片C1等等。这些定制芯片都是为了解决各自产品的瓶颈痛点，以提供差异化的用户体验。\n可以预见，随着 AI 能力成为旗舰机型的标配，顶尖厂商势必要掌握关键芯片的设计主导权，包括ISP、NPU、射频、电源管理乃至 SoC 系统架构层面的深度优化。而小米涉足电动汽车和 AIoT 生态，实际上也为其芯片项目提供了更广阔的用武之地：手机 SoC 研发的成果和技术积累，完全有机会反哺到智能驾驶芯片、IoT芯片等领域。AI时代的手机，不仅比拼终端硬件配置，更比拼底层芯片和算法的融合创新；谁掌握了自研芯片，谁就能真的推动智能手机的 AI 化，以及它作为“端侧AI” 的载体，辐射其它设备的能力。\n“人不能两次踏进同一条河流”。同样是造芯，OPPO哲库和小米玄戒踏入的早已不是同一条河，小米两次踏入的也不是同一条河。哲库之死，更像是败给了一场高调却节奏失误的战役——宏观环境急转直下、战略决策进退失据，让这个本该长期作战的项目过早地鸣金收兵。\n其实，小米和 OPPO 的造芯之路并没有谁对谁错，只有“成”与“不成”的时与势。造芯本就是九死一生的征途。唯一可以肯定的是：一旦小米玄戒 SoC 成功量产商用，小米将成为继苹果、三星、华为之后，全球第四个真正具备高端手机芯片自主研发能力的消费电子厂商。\n这终归是一件好事，对吧。",
      "content": "“人不能两次踏进同一条河流”。",
      "contentSnippet": "“人不能两次踏进同一条河流”。",
      "guid": "https://www.blueke.top/posts/%E8%BD%AC%E8%BD%BD%E4%BB%8E%E5%93%B2%E5%BA%93%E5%88%B0%E7%8E%84%E6%88%92%E4%BB%8E%E9%80%A0%E8%8A%AF%E4%B9%8B%E6%AD%BB%E5%88%B0%E9%80%A0%E8%8A%AF%E4%B9%8B%E7%94%9F/",
      "categories": [
        "数码"
      ],
      "isoDate": "2025-05-20T16:25:00.000Z"
    },
    {
      "title": "博客RSS美化以及部署Umami站点监测",
      "link": "https://www.blueke.top/posts/%E5%8D%9A%E5%AE%A2rss%E7%BE%8E%E5%8C%96%E4%BB%A5%E5%8F%8A%E9%83%A8%E7%BD%B2umami%E7%AB%99%E7%82%B9%E7%9B%91%E6%B5%8B/",
      "pubDate": "Sat, 17 May 2025 19:22:00 GMT",
      "content:encoded": "<blockquote>\n<p>[!TIP]\n故事的起因是我出于好奇，加入了开往的 QQ 群，和群友聊天很有启发，折腾了一些新东西</p>\n</blockquote>\n<h2>RSS</h2>\n<p>老实说，我知道它可以订阅博客以及其他的网站，但真没有深入了解过</p>\n<h2>美化博客RSS</h2>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/RSS%E4%BD%93%E9%AA%8C%E4%BB%A5%E5%8F%8A%E9%83%A8%E7%BD%B2Umami%E7%AB%99%E7%82%B9%E7%9B%91%E6%B5%8B-202505171938.webp\" alt=\"RSS 美化效果图\" /></p>\n<p>原本的 RSS 地址是 xml 格式，看上去跟一团乱码一样，但是可以用 xsl 进行美化。具体的不多叙述，会附上他人的博客教程，这里只记录我具体的实操。</p>\n<h3>新建 <code>rss.xsl</code></h3>\n<p>在 <code>public</code> 目录下新建一个 <code>rss.xsl</code> 的文件，保存具体的样式，作用类似于 CSS。</p>\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;xsl:stylesheet \n  version=\"1.0\"\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n  xmlns:atom=\"http://www.w3.org/2005/Atom\"\n  exclude-result-prefixes=\"atom\"\n&gt;\n  &lt;xsl:output method=\"html\" doctype-system=\"about:legacy-compat\" /&gt;\n\n  &lt;!-- 月份映射模板 --&gt;\n  &lt;xsl:template name=\"month-to-number\"&gt;\n    &lt;xsl:param name=\"month-abbr\" /&gt;\n    &lt;xsl:choose&gt;\n      &lt;xsl:when test=\"$month-abbr = 'Jan'\"&gt;1&lt;/xsl:when&gt;\n      &lt;xsl:when test=\"$month-abbr = 'Feb'\"&gt;2&lt;/xsl:when&gt;\n      &lt;xsl:when test=\"$month-abbr = 'Mar'\"&gt;3&lt;/xsl:when&gt;\n      &lt;xsl:when test=\"$month-abbr = 'Apr'\"&gt;4&lt;/xsl:when&gt;\n      &lt;xsl:when test=\"$month-abbr = 'May'\"&gt;5&lt;/xsl:when&gt;\n      &lt;xsl:when test=\"$month-abbr = 'Jun'\"&gt;6&lt;/xsl:when&gt;\n      &lt;xsl:when test=\"$month-abbr = 'Jul'\"&gt;7&lt;/xsl:when&gt;\n      &lt;xsl:when test=\"$month-abbr = 'Aug'\"&gt;8&lt;/xsl:when&gt;\n      &lt;xsl:when test=\"$month-abbr = 'Sep'\"&gt;9&lt;/xsl:when&gt;\n      &lt;xsl:when test=\"$month-abbr = 'Oct'\"&gt;10&lt;/xsl:when&gt;\n      &lt;xsl:when test=\"$month-abbr = 'Nov'\"&gt;11&lt;/xsl:when&gt;\n      &lt;xsl:when test=\"$month-abbr = 'Dec'\"&gt;12&lt;/xsl:when&gt;\n      &lt;xsl:otherwise&gt;0&lt;/xsl:otherwise&gt;\n    &lt;/xsl:choose&gt;\n  &lt;/xsl:template&gt;\n\n  &lt;xsl:template match=\"/\"&gt;\n    &lt;html lang=\"{rss/channel/language}\"&gt;\n      &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;title&gt;&lt;xsl:value-of select=\"rss/channel/title\" /&gt; RSS 订阅&lt;/title&gt;\n        &lt;style&gt;\n          :root {\n            --primary: #4f46e5;\n            --primary-hover: #4338ca;\n            --text: #1f2937;\n            --light-text: #6b7280;\n            --bg: #ffffff;\n            --card-bg: #f9fafb;\n            --border: #e5e7eb;\n            --radius: 0.5rem;\n            --shadow: 0 1px 3px rgba(0,0,0,0.1);\n            --transition: all 0.2s ease;\n          }\n          \n          @media (prefers-color-scheme: dark) {\n            :root {\n              --primary: #818cf8;\n              --primary-hover: #6366f1;\n              --text: #f3f4f6;\n              --light-text: #9ca3af;\n              --bg: #111827;\n              --card-bg: #1f2937;\n              --border: #374151;\n              --shadow: 0 1px 3px rgba(0,0,0,0.3);\n            }\n          }\n          \n          * {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n          }\n          \n          body {\n            font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \n                         Helvetica, Arial, sans-serif, \"Apple Color Emoji\";\n            line-height: 1.6;\n            color: var(--text);\n            background-color: var(--bg);\n            padding: 2rem 1rem;\n            max-width: 900px;\n            margin: 0 auto;\n          }\n          \n          header {\n            text-align: center;\n            margin-bottom: 3rem;\n            padding-bottom: 1.5rem;\n            border-bottom: 1px solid var(--border);\n          }\n          \n          h1 {\n            color: var(--primary);\n            margin-bottom: 0.5rem;\n            font-size: 2.5rem;\n            font-weight: 700;\n          }\n          \n          .subtitle {\n            color: var(--light-text);\n            font-size: 1.125rem;\n            margin-bottom: 1.5rem;\n            max-width: 600px;\n            margin-left: auto;\n            margin-right: auto;\n          }\n          \n          .article-list {\n            display: grid;\n            gap: 2rem;\n          }\n          \n          article {\n            background: var(--card-bg);\n            border-radius: var(--radius);\n            padding: 2rem;\n            border: 1px solid var(--border);\n            box-shadow: var(--shadow);\n            transition: var(--transition);\n          }\n          \n          article:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n          }\n          \n          h2 {\n            font-size: 1.5rem;\n            margin-bottom: 1rem;\n            font-weight: 600;\n          }\n          \n          h2 a {\n            color: inherit;\n            text-decoration: none;\n            transition: var(--transition);\n          }\n          \n          h2 a:hover {\n            color: var(--primary);\n          }\n          \n          .meta {\n            display: flex;\n            gap: 1.5rem;\n            color: var(--light-text);\n            font-size: 0.875rem;\n            margin-bottom: 1.25rem;\n            flex-wrap: wrap;\n            align-items: center;\n          }\n          \n          .tags-container {\n            display: flex;\n            gap: 0.75rem;\n            flex-wrap: wrap;\n            margin-top: 0.5rem;\n          }\n          \n          .tag {\n            background: rgba(79, 70, 229, 0.1);\n            color: var(--primary);\n            padding: 0.375rem 0.75rem;\n            border-radius: 9999px;\n            font-size: 0.75rem;\n            font-weight: 500;\n            transition: var(--transition);\n            display: inline-flex;\n            align-items: center;\n          }\n          \n          .tag:hover {\n            background: rgba(79, 70, 229, 0.2);\n          }\n          \n          .content {\n            margin-top: 1.5rem;\n            color: var(--text);\n          }\n          \n          .content p {\n            margin-bottom: 1rem;\n          }\n          \n          .content img {\n            max-width: 100%;\n            height: auto;\n            border-radius: var(--radius);\n            margin: 1.5rem 0;\n            box-shadow: var(--shadow);\n          }\n          \n          .content pre {\n            background: rgba(0,0,0,0.05);\n            padding: 1rem;\n            border-radius: var(--radius);\n            overflow-x: auto;\n            margin: 1.5rem 0;\n            font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, monospace;\n            font-size: 0.875rem;\n          }\n          \n          .content code {\n            font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, monospace;\n            font-size: 0.875rem;\n            background: rgba(0,0,0,0.05);\n            padding: 0.2rem 0.4rem;\n            border-radius: 0.25rem;\n          }\n          \n          /* 关键修改：减小阅读更多按钮的上边距 */\n          .read-more {\n            display: inline-flex;\n            align-items: center;\n            gap: 0.5rem;\n            color: var(--primary);\n            font-weight: 500;\n            text-decoration: none;\n            transition: var(--transition);\n          }\n          \n          .read-more:hover {\n            color: var(--primary-hover);\n          }\n          \n          .read-more svg {\n            width: 1em;\n            height: 1em;\n            transition: var(--transition);\n          }\n          \n          .read-more:hover svg {\n            transform: translateX(2px);\n          }\n          \n          @media (max-width: 768px) {\n            body {\n              padding: 1.5rem 1rem;\n            }\n            \n            h1 {\n              font-size: 2rem;\n            }\n            \n            article {\n              padding: 1.5rem;\n            }\n            \n            /* 移动端进一步减小间距 */\n            .read-more {\n              margin-top: 0.5rem;\n            }\n          }\n          \n          @media (max-width: 480px) {\n            .meta {\n              gap: 1rem;\n              flex-direction: column;\n              align-items: flex-start;\n            }\n            \n            article {\n              padding: 1.25rem;\n            }\n          }\n        &lt;/style&gt;\n      &lt;/head&gt;\n      \n      &lt;body&gt;\n        &lt;header&gt;\n          &lt;h1&gt;&lt;xsl:value-of select=\"rss/channel/title\" /&gt;&lt;/h1&gt;\n          &lt;p class=\"subtitle\"&gt;&lt;xsl:value-of select=\"rss/channel/description\" /&gt;&lt;/p&gt;\n          &lt;a href=\"{rss/channel/link}\" class=\"read-more\"&gt;\n            参观站点\n            &lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"&gt;\n              &lt;path fill-rule=\"evenodd\" d=\"M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /&gt;\n            &lt;/svg&gt;\n          &lt;/a&gt;\n        &lt;/header&gt;\n\n        &lt;div class=\"article-list\"&gt;\n          &lt;xsl:for-each select=\"rss/channel/item\"&gt;\n            &lt;article&gt;\n              &lt;h2&gt;\n                &lt;a href=\"{link}\"&gt;\n                  &lt;xsl:value-of select=\"title\" /&gt;\n                &lt;/a&gt;\n              &lt;/h2&gt;\n              \n              &lt;div class=\"meta\"&gt;\n                &lt;time datetime=\"{pubDate}\"&gt;\n                  &lt;xsl:variable name=\"pubDateStr\" select=\"pubDate\" /&gt;\n                  &lt;xsl:variable name=\"year\" select=\"substring($pubDateStr, 13, 4)\" /&gt;\n                  &lt;xsl:variable name=\"month-abbr\" select=\"substring($pubDateStr, 9, 3)\" /&gt;\n                  &lt;xsl:variable name=\"day\" select=\"substring($pubDateStr, 6, 2)\" /&gt;\n                  &lt;xsl:variable name=\"month\"&gt;\n                    &lt;xsl:call-template name=\"month-to-number\"&gt;\n                      &lt;xsl:with-param name=\"month-abbr\" select=\"$month-abbr\" /&gt;\n                    &lt;/xsl:call-template&gt;\n                  &lt;/xsl:variable&gt;\n                  \n                  &lt;xsl:value-of select=\"concat($year, '年', $month, '月', $day, '日')\" /&gt;\n                &lt;/time&gt;\n                \n                &lt;xsl:if test=\"category\"&gt;\n                  &lt;div class=\"tags-container\"&gt;\n                    &lt;xsl:for-each select=\"category\"&gt;\n                      &lt;span class=\"tag\"&gt;\n                        &lt;xsl:value-of select=\".\" /&gt;\n                        &lt;xsl:if test=\"position() != last()\"&gt; &lt;/xsl:if&gt;\n                      &lt;/span&gt;\n                    &lt;/xsl:for-each&gt;\n                  &lt;/div&gt;\n                &lt;/xsl:if&gt;\n              &lt;/div&gt;\n              \n              &lt;xsl:if test=\"description and description != ''\"&gt;\n                &lt;p style=\"color: var(--light-text); margin-bottom: 1rem;\"&gt;\n                  &lt;xsl:value-of select=\"description\" /&gt;\n                &lt;/p&gt;\n              &lt;/xsl:if&gt;\n              \n              &lt;div class=\"content\"&gt;\n                &lt;xsl:value-of select=\"content\" disable-output-escaping=\"yes\" /&gt;\n              &lt;/div&gt;\n              \n              &lt;a href=\"{link}\" class=\"read-more\"&gt;\n                阅读完整文章\n                &lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"&gt;\n                  &lt;path fill-rule=\"evenodd\" d=\"M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z\" clip-rule=\"evenodd\" /&gt;\n                &lt;/svg&gt;\n              &lt;/a&gt;\n            &lt;/article&gt;\n          &lt;/xsl:for-each&gt;\n        &lt;/div&gt;\n      &lt;/body&gt;\n    &lt;/html&gt;\n  &lt;/xsl:template&gt;\n&lt;/xsl:stylesheet&gt;\n</code></pre>\n<h3>引入</h3>\n<pre><code>import { siteConfig } from \"@/config\";\nimport rss from \"@astrojs/rss\";\nimport { getSortedPosts } from \"@utils/content-utils\";\nimport type { APIContext } from \"astro\";\nimport MarkdownIt from \"markdown-it\";\nimport sanitizeHtml from \"sanitize-html\";\n\nconst parser = new MarkdownIt();\n\nexport async function GET(context: APIContext) {\n\tconst blog = await getSortedPosts();\n\n\treturn rss({\n\t\tstylesheet: \"/rss.xsl\", // 确保启用XSLT\n\t\ttitle: siteConfig.title,\n\t\tdescription: siteConfig.subtitle || \"No description\",\n\t\tsite: context.site ?? \"https://www.blueke.top\",\n\t\titems: blog.map((post) =&gt; {\n\t\t\tconst content =\n\t\t\t\ttypeof post.body === \"string\" ? post.body : String(post.body || \"\");\n\n\t\t\treturn {\n\t\t\t\ttitle: post.data.title,\n\t\t\t\tpubDate: post.data.published,\n\t\t\t\tdescription: post.data.description || \"\",\n\t\t\t\tlink: `/posts/${post.slug}/`,\n\t\t\t\tcontent: sanitizeHtml(parser.render(content), {\n\t\t\t\t\tallowedTags: sanitizeHtml.defaults.allowedTags.concat([\"img\"]),\n\t\t\t\t}),\n\t\t\t\tcategories: post.data.tags ?? [],\n\t\t\t};\n\t\t}),\n\t\tcustomData: `&lt;language&gt;${siteConfig.lang}&lt;/language&gt;`,\n\t});\n}\n\n</code></pre>\n<blockquote>\n<p>PS: 为了显示标签，我自己修改了一下，貌似有具体的规范，最好使用 <code>categories</code> 代替 <code>tags</code></p>\n</blockquote>\n<p>如果你不想自己定义样式，也可以用下面的 <code>beauty</code> 进行一键美化</p>\n<h3>参考来源</h3>\n<ul>\n<li><a href=\"https://blog.liushen.fun/posts/caee2d9f/#XSL%E6%96%87%E4%BB%B6\">美化你的RSS订阅地址 | LiuShen's Blog</a></li>\n<li><a href=\"https://rss.beauty/\">RSS.Beauty</a></li>\n</ul>\n<h2>RSS 阅读器</h2>\n<p><s>RSS 还是要通过阅读器来阅读比较方便，考虑到多平台性。我直接在自己的服务器上 docker 部署了一个 <code>FreshRSS</code>，目前体验良好。</s></p>\n<p>现在可以看我更新的帖子实现免费部署了</p>\n<h2>搭建 Umami</h2>\n<p>Umami 是一个更加方便且现代化的网站检测工具，今天发现可以 vercel 可以部署后，也是迫不及待的部署体验了一下。</p>\n<p>因为自带有公共链接，可以让所有人都能看到站点状态：<a href=\"https://umami.blueke.top/share/vtD8GhH5iWtKf6uG/www.blueke.top\">本站站点状态</a></p>\n<p>至于具体的教程，请参考这篇文章<a href=\"https://www.linexic.top/post/vercel-runing-u/\">使用 vercel Neon 搭建 umami 统计</a></p>\n<p>在这里真的很感谢这位博主的分享！</p>\n",
      "content:encodedSnippet": "[!TIP]\n故事的起因是我出于好奇，加入了开往的 QQ 群，和群友聊天很有启发，折腾了一些新东西\nRSS\n老实说，我知道它可以订阅博客以及其他的网站，但真没有深入了解过\n美化博客RSS\n\n原本的 RSS 地址是 xml 格式，看上去跟一团乱码一样，但是可以用 xsl 进行美化。具体的不多叙述，会附上他人的博客教程，这里只记录我具体的实操。\n新建 rss.xsl\n在 public 目录下新建一个 rss.xsl 的文件，保存具体的样式，作用类似于 CSS。\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet \n  version=\"1.0\"\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n  xmlns:atom=\"http://www.w3.org/2005/Atom\"\n  exclude-result-prefixes=\"atom\"\n>\n  <xsl:output method=\"html\" doctype-system=\"about:legacy-compat\" />\n\n  <!-- 月份映射模板 -->\n  <xsl:template name=\"month-to-number\">\n    <xsl:param name=\"month-abbr\" />\n    <xsl:choose>\n      <xsl:when test=\"$month-abbr = 'Jan'\">1</xsl:when>\n      <xsl:when test=\"$month-abbr = 'Feb'\">2</xsl:when>\n      <xsl:when test=\"$month-abbr = 'Mar'\">3</xsl:when>\n      <xsl:when test=\"$month-abbr = 'Apr'\">4</xsl:when>\n      <xsl:when test=\"$month-abbr = 'May'\">5</xsl:when>\n      <xsl:when test=\"$month-abbr = 'Jun'\">6</xsl:when>\n      <xsl:when test=\"$month-abbr = 'Jul'\">7</xsl:when>\n      <xsl:when test=\"$month-abbr = 'Aug'\">8</xsl:when>\n      <xsl:when test=\"$month-abbr = 'Sep'\">9</xsl:when>\n      <xsl:when test=\"$month-abbr = 'Oct'\">10</xsl:when>\n      <xsl:when test=\"$month-abbr = 'Nov'\">11</xsl:when>\n      <xsl:when test=\"$month-abbr = 'Dec'\">12</xsl:when>\n      <xsl:otherwise>0</xsl:otherwise>\n    </xsl:choose>\n  </xsl:template>\n\n  <xsl:template match=\"/\">\n    <html lang=\"{rss/channel/language}\">\n      <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title><xsl:value-of select=\"rss/channel/title\" /> RSS 订阅</title>\n        <style>\n          :root {\n            --primary: #4f46e5;\n            --primary-hover: #4338ca;\n            --text: #1f2937;\n            --light-text: #6b7280;\n            --bg: #ffffff;\n            --card-bg: #f9fafb;\n            --border: #e5e7eb;\n            --radius: 0.5rem;\n            --shadow: 0 1px 3px rgba(0,0,0,0.1);\n            --transition: all 0.2s ease;\n          }\n          \n          @media (prefers-color-scheme: dark) {\n            :root {\n              --primary: #818cf8;\n              --primary-hover: #6366f1;\n              --text: #f3f4f6;\n              --light-text: #9ca3af;\n              --bg: #111827;\n              --card-bg: #1f2937;\n              --border: #374151;\n              --shadow: 0 1px 3px rgba(0,0,0,0.3);\n            }\n          }\n          \n          * {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n          }\n          \n          body {\n            font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \n                         Helvetica, Arial, sans-serif, \"Apple Color Emoji\";\n            line-height: 1.6;\n            color: var(--text);\n            background-color: var(--bg);\n            padding: 2rem 1rem;\n            max-width: 900px;\n            margin: 0 auto;\n          }\n          \n          header {\n            text-align: center;\n            margin-bottom: 3rem;\n            padding-bottom: 1.5rem;\n            border-bottom: 1px solid var(--border);\n          }\n          \n          h1 {\n            color: var(--primary);\n            margin-bottom: 0.5rem;\n            font-size: 2.5rem;\n            font-weight: 700;\n          }\n          \n          .subtitle {\n            color: var(--light-text);\n            font-size: 1.125rem;\n            margin-bottom: 1.5rem;\n            max-width: 600px;\n            margin-left: auto;\n            margin-right: auto;\n          }\n          \n          .article-list {\n            display: grid;\n            gap: 2rem;\n          }\n          \n          article {\n            background: var(--card-bg);\n            border-radius: var(--radius);\n            padding: 2rem;\n            border: 1px solid var(--border);\n            box-shadow: var(--shadow);\n            transition: var(--transition);\n          }\n          \n          article:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n          }\n          \n          h2 {\n            font-size: 1.5rem;\n            margin-bottom: 1rem;\n            font-weight: 600;\n          }\n          \n          h2 a {\n            color: inherit;\n            text-decoration: none;\n            transition: var(--transition);\n          }\n          \n          h2 a:hover {\n            color: var(--primary);\n          }\n          \n          .meta {\n            display: flex;\n            gap: 1.5rem;\n            color: var(--light-text);\n            font-size: 0.875rem;\n            margin-bottom: 1.25rem;\n            flex-wrap: wrap;\n            align-items: center;\n          }\n          \n          .tags-container {\n            display: flex;\n            gap: 0.75rem;\n            flex-wrap: wrap;\n            margin-top: 0.5rem;\n          }\n          \n          .tag {\n            background: rgba(79, 70, 229, 0.1);\n            color: var(--primary);\n            padding: 0.375rem 0.75rem;\n            border-radius: 9999px;\n            font-size: 0.75rem;\n            font-weight: 500;\n            transition: var(--transition);\n            display: inline-flex;\n            align-items: center;\n          }\n          \n          .tag:hover {\n            background: rgba(79, 70, 229, 0.2);\n          }\n          \n          .content {\n            margin-top: 1.5rem;\n            color: var(--text);\n          }\n          \n          .content p {\n            margin-bottom: 1rem;\n          }\n          \n          .content img {\n            max-width: 100%;\n            height: auto;\n            border-radius: var(--radius);\n            margin: 1.5rem 0;\n            box-shadow: var(--shadow);\n          }\n          \n          .content pre {\n            background: rgba(0,0,0,0.05);\n            padding: 1rem;\n            border-radius: var(--radius);\n            overflow-x: auto;\n            margin: 1.5rem 0;\n            font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, monospace;\n            font-size: 0.875rem;\n          }\n          \n          .content code {\n            font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, monospace;\n            font-size: 0.875rem;\n            background: rgba(0,0,0,0.05);\n            padding: 0.2rem 0.4rem;\n            border-radius: 0.25rem;\n          }\n          \n          /* 关键修改：减小阅读更多按钮的上边距 */\n          .read-more {\n            display: inline-flex;\n            align-items: center;\n            gap: 0.5rem;\n            color: var(--primary);\n            font-weight: 500;\n            text-decoration: none;\n            transition: var(--transition);\n          }\n          \n          .read-more:hover {\n            color: var(--primary-hover);\n          }\n          \n          .read-more svg {\n            width: 1em;\n            height: 1em;\n            transition: var(--transition);\n          }\n          \n          .read-more:hover svg {\n            transform: translateX(2px);\n          }\n          \n          @media (max-width: 768px) {\n            body {\n              padding: 1.5rem 1rem;\n            }\n            \n            h1 {\n              font-size: 2rem;\n            }\n            \n            article {\n              padding: 1.5rem;\n            }\n            \n            /* 移动端进一步减小间距 */\n            .read-more {\n              margin-top: 0.5rem;\n            }\n          }\n          \n          @media (max-width: 480px) {\n            .meta {\n              gap: 1rem;\n              flex-direction: column;\n              align-items: flex-start;\n            }\n            \n            article {\n              padding: 1.25rem;\n            }\n          }\n        </style>\n      </head>\n      \n      <body>\n        <header>\n          <h1><xsl:value-of select=\"rss/channel/title\" /></h1>\n          <p class=\"subtitle\"><xsl:value-of select=\"rss/channel/description\" /></p>\n          <a href=\"{rss/channel/link}\" class=\"read-more\">\n            参观站点\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n            </svg>\n          </a>\n        </header>\n\n        <div class=\"article-list\">\n          <xsl:for-each select=\"rss/channel/item\">\n            <article>\n              <h2>\n                <a href=\"{link}\">\n                  <xsl:value-of select=\"title\" />\n                </a>\n              </h2>\n              \n              <div class=\"meta\">\n                <time datetime=\"{pubDate}\">\n                  <xsl:variable name=\"pubDateStr\" select=\"pubDate\" />\n                  <xsl:variable name=\"year\" select=\"substring($pubDateStr, 13, 4)\" />\n                  <xsl:variable name=\"month-abbr\" select=\"substring($pubDateStr, 9, 3)\" />\n                  <xsl:variable name=\"day\" select=\"substring($pubDateStr, 6, 2)\" />\n                  <xsl:variable name=\"month\">\n                    <xsl:call-template name=\"month-to-number\">\n                      <xsl:with-param name=\"month-abbr\" select=\"$month-abbr\" />\n                    </xsl:call-template>\n                  </xsl:variable>\n                  \n                  <xsl:value-of select=\"concat($year, '年', $month, '月', $day, '日')\" />\n                </time>\n                \n                <xsl:if test=\"category\">\n                  <div class=\"tags-container\">\n                    <xsl:for-each select=\"category\">\n                      <span class=\"tag\">\n                        <xsl:value-of select=\".\" />\n                        <xsl:if test=\"position() != last()\"> </xsl:if>\n                      </span>\n                    </xsl:for-each>\n                  </div>\n                </xsl:if>\n              </div>\n              \n              <xsl:if test=\"description and description != ''\">\n                <p style=\"color: var(--light-text); margin-bottom: 1rem;\">\n                  <xsl:value-of select=\"description\" />\n                </p>\n              </xsl:if>\n              \n              <div class=\"content\">\n                <xsl:value-of select=\"content\" disable-output-escaping=\"yes\" />\n              </div>\n              \n              <a href=\"{link}\" class=\"read-more\">\n                阅读完整文章\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n              </a>\n            </article>\n          </xsl:for-each>\n        </div>\n      </body>\n    </html>\n  </xsl:template>\n</xsl:stylesheet>\n\n引入\nimport { siteConfig } from \"@/config\";\nimport rss from \"@astrojs/rss\";\nimport { getSortedPosts } from \"@utils/content-utils\";\nimport type { APIContext } from \"astro\";\nimport MarkdownIt from \"markdown-it\";\nimport sanitizeHtml from \"sanitize-html\";\n\nconst parser = new MarkdownIt();\n\nexport async function GET(context: APIContext) {\n\tconst blog = await getSortedPosts();\n\n\treturn rss({\n\t\tstylesheet: \"/rss.xsl\", // 确保启用XSLT\n\t\ttitle: siteConfig.title,\n\t\tdescription: siteConfig.subtitle || \"No description\",\n\t\tsite: context.site ?? \"https://www.blueke.top\",\n\t\titems: blog.map((post) => {\n\t\t\tconst content =\n\t\t\t\ttypeof post.body === \"string\" ? post.body : String(post.body || \"\");\n\n\t\t\treturn {\n\t\t\t\ttitle: post.data.title,\n\t\t\t\tpubDate: post.data.published,\n\t\t\t\tdescription: post.data.description || \"\",\n\t\t\t\tlink: `/posts/${post.slug}/`,\n\t\t\t\tcontent: sanitizeHtml(parser.render(content), {\n\t\t\t\t\tallowedTags: sanitizeHtml.defaults.allowedTags.concat([\"img\"]),\n\t\t\t\t}),\n\t\t\t\tcategories: post.data.tags ?? [],\n\t\t\t};\n\t\t}),\n\t\tcustomData: `<language>${siteConfig.lang}</language>`,\n\t});\n}\n\n\nPS: 为了显示标签，我自己修改了一下，貌似有具体的规范，最好使用 categories 代替 tags\n如果你不想自己定义样式，也可以用下面的 beauty 进行一键美化\n参考来源\n美化你的RSS订阅地址 | LiuShen's Blog\nRSS.Beauty\nRSS 阅读器\nRSS 还是要通过阅读器来阅读比较方便，考虑到多平台性。我直接在自己的服务器上 docker 部署了一个 FreshRSS，目前体验良好。\n现在可以看我更新的帖子实现免费部署了\n搭建 Umami\nUmami 是一个更加方便且现代化的网站检测工具，今天发现可以 vercel 可以部署后，也是迫不及待的部署体验了一下。\n因为自带有公共链接，可以让所有人都能看到站点状态：本站站点状态\n至于具体的教程，请参考这篇文章使用 vercel Neon 搭建 umami 统计\n在这里真的很感谢这位博主的分享！",
      "content": "跟群友聊了聊，折腾了一些新东西",
      "contentSnippet": "跟群友聊了聊，折腾了一些新东西",
      "guid": "https://www.blueke.top/posts/%E5%8D%9A%E5%AE%A2rss%E7%BE%8E%E5%8C%96%E4%BB%A5%E5%8F%8A%E9%83%A8%E7%BD%B2umami%E7%AB%99%E7%82%B9%E7%9B%91%E6%B5%8B/",
      "categories": [
        "博客"
      ],
      "isoDate": "2025-05-17T19:22:00.000Z"
    },
    {
      "title": "【闲谈】2025年5月16日",
      "link": "https://www.blueke.top/posts/%E9%97%B2%E8%B0%882025%E5%B9%B45%E6%9C%8816%E6%97%A5/",
      "pubDate": "Fri, 16 May 2025 21:09:00 GMT",
      "content:encoded": "<p>今天是周末，但我现在没有什么放松的感觉，因为总有些事情搞得我心烦意乱，索性写一写了</p>\n<blockquote>\n<p>[!TIP]\n写的时候突然想到句名言：\n正经人谁写日记啊！</p>\n</blockquote>\n<h2>1. 借钱</h2>\n<p>前不久，有个相识多年的网友向我借钱，金额不算大，一百元。这不是她第一次问我借钱，只不过前几次恰逢钱包干瘪，实在无能为力，这次想着毕竟是认识七八年了，应该不会不还吧，索性就借了。前者也信誓旦旦地向我保证，周四就一定还我。然而一周过后，依旧了无音讯，我心中不免打鼓，但还是礼貌地问了一句: 我的钱可以还了吗？然后又过了将近一周，直至昨日，我又去问了一下，依旧无果，点开空间，发现不知何时已将我屏蔽，想起前几天问的时候，还瞥见她空间说要美美出席之类的文案，心中也是一阵万马奔腾。说句实话，这一百元对我来说不算很重，但我这一百块钱就能让相识多年的好友翻脸做人，看她平日空间，每次都是打扮精致、配上高 P 高修滤镜，实在不像是一位因百元而纠结的人。虽然痛心，也有庆幸，但如果花一百元便能认清一个人，那人与人之间的联系是否太脆弱了一点？</p>\n<h2>2. 被删</h2>\n<p>春节期间，因为打游戏认识了一个妹子，妹子说话感觉就是那种很可爱的类型，所以也是突然勇敢了一下，加上了联系方式，随后发现她属实是一位沉迷于游戏的网瘾少女，我说实话对游戏只有短暂的热情，尤其是开学之后上号的频率便更加低了，但这不影响我没事喜欢找她聊聊天，毕竟我对可爱的女性自带有“被惑”光圈，但前几天她发了一条打游戏的动态，我还评论了一下，然后不久便发现自己被删除了，一时间不仅愕然，随后便释然。毕竟咱也没有多吸引人之处，只不过对于结交新朋友，估计又添加了新的阴影吧。世界上固然人数很多，但是否能找到爱好相同，且能友好相处下去的，恐怕是很困难的事情，与其在希望中不断失望下去，还不如岁月静好</p>\n<h2>3. 喝酒</h2>\n<p>说实话，我不觉得喝酒是一个多正向的行为，尤其是对于身体健康方面。我对身体健康虽然谈不上十分重视，但也会尽量避免接触这种影响身体的东西，直至大学常常和朋友出去聚餐，我渐渐习惯了酒精的滋味。起初对酒精的喜悦源于和朋友聚餐，觥筹交错、众宾欢乐的多重刺激，当时也不会喝的太多，微醺的感觉能使我更快地进入睡眠，当然第二天带来的宿醉不适感已抛掷脑后。但是近一年来，我不仅在欢快聚餐时喜欢畅饮，更是在心情不好，陷入低谷的时候追寻酒精带来的片刻欢愉，包括此刻正在码字的我。酒已经不能让我更早地陷入睡眠，此刻的它更仅仅像一款经久不衰的麻药，麻痹着我残破的情感。两种情景，一种饮料，这是一种极大的反差，对此，我只能苦笑两句：何不再来一杯？</p>\n<p>:::IMPORTANT</p>\n<p>人生得意须尽欢！莫使金樽空对月？及时行乐，岂不快哉！快哉！</p>\n<p>:::</p>\n<h2>4. 封存 QQ 空间</h2>\n<p>这不是第一次做出这样的决定了，但之前的行动总有些前倨而后恭之感，原因无他，QQ 空间尽管早就没有几人活跃，但终归是有人观看的，尽管人生不是舞台，但偶尔也需要几个观众喝彩，对吧？所以我不像之前那样，发一些尴尬又无趣的语录，偶尔分享生活，偶尔分享感悟，反响竟然还不错，但是，对于上面刚刚经历过的事情，我对 qq 空间的维持实在难以倾注太多热情。事实上，尽管有很多不错的动态，但我还是保有隔两天就删除的习惯。与其继续在 QQ 空间活跃，不如尽早放弃，全身心投入到博客之中，毕竟我还是更喜欢这里的环境。</p>\n<p>更多已是无言，索性留白，等下次再与诸位诉说</p>\n",
      "content:encodedSnippet": "今天是周末，但我现在没有什么放松的感觉，因为总有些事情搞得我心烦意乱，索性写一写了\n[!TIP]\n写的时候突然想到句名言：\n正经人谁写日记啊！\n1. 借钱\n前不久，有个相识多年的网友向我借钱，金额不算大，一百元。这不是她第一次问我借钱，只不过前几次恰逢钱包干瘪，实在无能为力，这次想着毕竟是认识七八年了，应该不会不还吧，索性就借了。前者也信誓旦旦地向我保证，周四就一定还我。然而一周过后，依旧了无音讯，我心中不免打鼓，但还是礼貌地问了一句: 我的钱可以还了吗？然后又过了将近一周，直至昨日，我又去问了一下，依旧无果，点开空间，发现不知何时已将我屏蔽，想起前几天问的时候，还瞥见她空间说要美美出席之类的文案，心中也是一阵万马奔腾。说句实话，这一百元对我来说不算很重，但我这一百块钱就能让相识多年的好友翻脸做人，看她平日空间，每次都是打扮精致、配上高 P 高修滤镜，实在不像是一位因百元而纠结的人。虽然痛心，也有庆幸，但如果花一百元便能认清一个人，那人与人之间的联系是否太脆弱了一点？\n2. 被删\n春节期间，因为打游戏认识了一个妹子，妹子说话感觉就是那种很可爱的类型，所以也是突然勇敢了一下，加上了联系方式，随后发现她属实是一位沉迷于游戏的网瘾少女，我说实话对游戏只有短暂的热情，尤其是开学之后上号的频率便更加低了，但这不影响我没事喜欢找她聊聊天，毕竟我对可爱的女性自带有“被惑”光圈，但前几天她发了一条打游戏的动态，我还评论了一下，然后不久便发现自己被删除了，一时间不仅愕然，随后便释然。毕竟咱也没有多吸引人之处，只不过对于结交新朋友，估计又添加了新的阴影吧。世界上固然人数很多，但是否能找到爱好相同，且能友好相处下去的，恐怕是很困难的事情，与其在希望中不断失望下去，还不如岁月静好\n3. 喝酒\n说实话，我不觉得喝酒是一个多正向的行为，尤其是对于身体健康方面。我对身体健康虽然谈不上十分重视，但也会尽量避免接触这种影响身体的东西，直至大学常常和朋友出去聚餐，我渐渐习惯了酒精的滋味。起初对酒精的喜悦源于和朋友聚餐，觥筹交错、众宾欢乐的多重刺激，当时也不会喝的太多，微醺的感觉能使我更快地进入睡眠，当然第二天带来的宿醉不适感已抛掷脑后。但是近一年来，我不仅在欢快聚餐时喜欢畅饮，更是在心情不好，陷入低谷的时候追寻酒精带来的片刻欢愉，包括此刻正在码字的我。酒已经不能让我更早地陷入睡眠，此刻的它更仅仅像一款经久不衰的麻药，麻痹着我残破的情感。两种情景，一种饮料，这是一种极大的反差，对此，我只能苦笑两句：何不再来一杯？\n:::IMPORTANT\n人生得意须尽欢！莫使金樽空对月？及时行乐，岂不快哉！快哉！\n:::\n4. 封存 QQ 空间\n这不是第一次做出这样的决定了，但之前的行动总有些前倨而后恭之感，原因无他，QQ 空间尽管早就没有几人活跃，但终归是有人观看的，尽管人生不是舞台，但偶尔也需要几个观众喝彩，对吧？所以我不像之前那样，发一些尴尬又无趣的语录，偶尔分享生活，偶尔分享感悟，反响竟然还不错，但是，对于上面刚刚经历过的事情，我对 qq 空间的维持实在难以倾注太多热情。事实上，尽管有很多不错的动态，但我还是保有隔两天就删除的习惯。与其继续在 QQ 空间活跃，不如尽早放弃，全身心投入到博客之中，毕竟我还是更喜欢这里的环境。\n更多已是无言，索性留白，等下次再与诸位诉说",
      "content": "事虽小，不吐不快",
      "contentSnippet": "事虽小，不吐不快",
      "guid": "https://www.blueke.top/posts/%E9%97%B2%E8%B0%882025%E5%B9%B45%E6%9C%8816%E6%97%A5/",
      "categories": [
        "生活",
        "日记"
      ],
      "isoDate": "2025-05-16T21:09:00.000Z"
    },
    {
      "title": "如何制作一份简历",
      "link": "https://www.blueke.top/posts/%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E4%B8%80%E4%BB%BD%E7%AE%80%E5%8E%86/",
      "pubDate": "Thu, 15 May 2025 16:08:00 GMT",
      "content:encoded": "<blockquote>\n<p>由于这学期的就业指导要求制作一份个人简历，想到以后也需要用到，索性记录一下如何书写一份合适的个人简历</p>\n</blockquote>\n<blockquote>\n<p>[!TIP]\n本文参考 B 站以及部分网站检索，可能只适用于计算机专业，其他仅供参考</p>\n</blockquote>\n<h2>1. 个人情况</h2>\n<p>包括姓名、性别、年龄、邮箱、联系方式、学校、专业、籍贯。(学校如果好的话写，否则可以不写)</p>\n<p>照片：建议不要添加照片，如果个人气质好，可以加上，但是一定要五官清晰，证件照。</p>\n<blockquote>\n<p>[!IMPORTANT]\n毕竟程序员还是靠技术吃饭的，只能说行业的需求不一样。</p>\n</blockquote>\n<p>(OS：我觉得放一张高 P 照，面试真的不会尴尬吗？QAQ)</p>\n<blockquote></blockquote>\n<h2>2.技能描述</h2>\n<p><strong>注意：</strong></p>\n<ol>\n<li>个人优势表示你具备而别人不具备的能力，你所罗列的技能不能算作个人优势</li>\n<li>技能描述不能当作单词本，要详细的展示你个人技术的深度和优势，突出自己的价值</li>\n<li>技能描述的时候不要随便写，要按照一定的顺序写，前端技能前置，后端技能后置</li>\n</ol>\n<hr />\n<p>如果已经毕业并具备一定工作经验，可以仿照下文：</p>\n<ol>\n<li>精通 java 核心技术，多年一线开发经验，具备良好的编程习惯，并熟练使用设计模式</li>\n<li>精通 jvm、对类加载机制、垃圾回收算法、垃圾回收算法等有深入了解，并参与过线上项目的 jvm 优化工作</li>\n<li>精通 springboot、mybatis、spring 等核心框架，可以根据需求快速搭建项目</li>\n</ol>\n<p>选择自己熟悉的方向，以及熟悉的算法，一定要会，至于线上的具体项目，实际不可能有人会详细知道你参与并具体做了什么，存在\"吹嘘\"的空间</p>\n<p>下面的项目经历，就可以继续写：</p>\n<p>利用 xxx 设计模式实现业务模块的代码重构，减少了多少代码量，提升了多少执行效率</p>\n<hr />\n<p>像我这种还在校的：</p>\n<p>熟悉 java 核心技术，对集合、线程、IO 等都有深入理解，深入理解面向对象的编程对象，并熟练使用设计模式</p>\n<p>熟悉 mysql，对 mysql 的索引、分库分表等有深入理解，并参与过线上项目的 SQL 优化工作</p>\n<p>可以写一点熟悉但是较为简单的，如果面试官问到的话，不仅仅能回答的出来，还要联系到自己做了什么，证明自己有能力、有技术。</p>\n<h2>3.项目经历</h2>\n<p><strong>项目名称</strong>：写的时候不要写 XX 系统，至少写一个 XXX 平台，如果实在没法写平台的，可以随便起一个英文名字，只要能解释清楚即可：Xditor，XXX 用户平台</p>\n<p><strong>项目描述</strong>：三四行文字即可，切记出现大段的文字堆积，同时突出项目的价值(主要解决了什么问题，提供了什么行业的解决方案，核心的业务功能是什么)</p>\n<p><strong>技术架构</strong>：只需要把用到的技术罗列清楚即可，用 <code>+</code> 或者 <code>、</code> 隔开，不需要作解释</p>\n<p><strong>职责描述</strong>：一定要分条展示，突出你对于项目的贡献，写的时候虚实结合</p>\n<h2>4.工作经历</h2>\n<p>只需要保存公司名称、时间、职位即可</p>\n<h2>5.教育背景</h2>\n<p>只需要保留学校、专业、时间即可</p>\n<h2>6.个人评价</h2>\n<p>不需要分条展示，写成一个段落即可，重点展示的行业背景和技术经验</p>\n<hr />\n<p>对于大学生，重点要突出的是学习能力，成长性</p>\n<p>对技术要热情，深入研究过 XXXX 技术，阅读过 XXX 技术书籍，leetcode 有 XXX 道题的储备，做过 XX 项目并获得什么成长，私下会怎么储备技术，看过哪些 github 的项目，做过哪些博客的积累和沉淀</p>\n<p>注意：</p>\n<ol>\n<li>技术服务于项目，项目加持于技术</li>\n<li>面试中回答问题，不仅仅要回答出这个问题</li>\n</ol>\n<h2>More</h2>\n<p>资料来源于 B 站视频</p>\n<p>&lt;div style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; height: auto;\"&gt;</p>\n<p>&lt;iframe style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\" src=\"//player.bilibili.com/player.html?isOutside=true&amp;aid=113066926672125&amp;bvid=BV1xwHreuEWq&amp;cid=26874809279&amp;p=2\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;</p>\n<p>&lt;/div&gt;</p>\n",
      "content:encodedSnippet": "由于这学期的就业指导要求制作一份个人简历，想到以后也需要用到，索性记录一下如何书写一份合适的个人简历\n[!TIP]\n本文参考 B 站以及部分网站检索，可能只适用于计算机专业，其他仅供参考\n1. 个人情况\n包括姓名、性别、年龄、邮箱、联系方式、学校、专业、籍贯。(学校如果好的话写，否则可以不写)\n照片：建议不要添加照片，如果个人气质好，可以加上，但是一定要五官清晰，证件照。\n[!IMPORTANT]\n毕竟程序员还是靠技术吃饭的，只能说行业的需求不一样。\n(OS：我觉得放一张高 P 照，面试真的不会尴尬吗？QAQ)\n\n2.技能描述\n注意：\n个人优势表示你具备而别人不具备的能力，你所罗列的技能不能算作个人优势\n技能描述不能当作单词本，要详细的展示你个人技术的深度和优势，突出自己的价值\n技能描述的时候不要随便写，要按照一定的顺序写，前端技能前置，后端技能后置\n如果已经毕业并具备一定工作经验，可以仿照下文：\n精通 java 核心技术，多年一线开发经验，具备良好的编程习惯，并熟练使用设计模式\n精通 jvm、对类加载机制、垃圾回收算法、垃圾回收算法等有深入了解，并参与过线上项目的 jvm 优化工作\n精通 springboot、mybatis、spring 等核心框架，可以根据需求快速搭建项目\n选择自己熟悉的方向，以及熟悉的算法，一定要会，至于线上的具体项目，实际不可能有人会详细知道你参与并具体做了什么，存在\"吹嘘\"的空间\n下面的项目经历，就可以继续写：\n利用 xxx 设计模式实现业务模块的代码重构，减少了多少代码量，提升了多少执行效率\n像我这种还在校的：\n熟悉 java 核心技术，对集合、线程、IO 等都有深入理解，深入理解面向对象的编程对象，并熟练使用设计模式\n熟悉 mysql，对 mysql 的索引、分库分表等有深入理解，并参与过线上项目的 SQL 优化工作\n可以写一点熟悉但是较为简单的，如果面试官问到的话，不仅仅能回答的出来，还要联系到自己做了什么，证明自己有能力、有技术。\n3.项目经历\n项目名称：写的时候不要写 XX 系统，至少写一个 XXX 平台，如果实在没法写平台的，可以随便起一个英文名字，只要能解释清楚即可：Xditor，XXX 用户平台\n项目描述：三四行文字即可，切记出现大段的文字堆积，同时突出项目的价值(主要解决了什么问题，提供了什么行业的解决方案，核心的业务功能是什么)\n技术架构：只需要把用到的技术罗列清楚即可，用 + 或者 、 隔开，不需要作解释\n职责描述：一定要分条展示，突出你对于项目的贡献，写的时候虚实结合\n4.工作经历\n只需要保存公司名称、时间、职位即可\n5.教育背景\n只需要保留学校、专业、时间即可\n6.个人评价\n不需要分条展示，写成一个段落即可，重点展示的行业背景和技术经验\n对于大学生，重点要突出的是学习能力，成长性\n对技术要热情，深入研究过 XXXX 技术，阅读过 XXX 技术书籍，leetcode 有 XXX 道题的储备，做过 XX 项目并获得什么成长，私下会怎么储备技术，看过哪些 github 的项目，做过哪些博客的积累和沉淀\n注意：\n技术服务于项目，项目加持于技术\n面试中回答问题，不仅仅要回答出这个问题\nMore\n资料来源于 B 站视频\n<div style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; height: auto;\">\n<iframe style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\" src=\"//player.bilibili.com/player.html?isOutside=true&aid=113066926672125&bvid=BV1xwHreuEWq&cid=26874809279&p=2\" frameborder=\"0\" allowfullscreen></iframe>\n</div>",
      "content": "学习一下如何制作个人简历",
      "contentSnippet": "学习一下如何制作个人简历",
      "guid": "https://www.blueke.top/posts/%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E4%B8%80%E4%BB%BD%E7%AE%80%E5%8E%86/",
      "categories": [
        "笔记",
        "面试"
      ],
      "isoDate": "2025-05-15T16:08:00.000Z"
    },
    {
      "title": "谈谈对Spring IOC的理解，原理与实现",
      "link": "https://www.blueke.top/posts/%E8%B0%88%E8%B0%88%E5%AF%B9spring-ioc%E7%9A%84%E7%90%86%E8%A7%A3%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0/",
      "pubDate": "Mon, 12 May 2025 11:30:00 GMT",
      "content:encoded": "<p>答题技巧：采取总分的形式</p>\n<p>总：当前问题回答的是哪些具体的点</p>\n<p>分：以 1，2... 等的方式分细节描述相关的知识点，如果有哪些点不清楚，直接忽略过去。突出一些技术名词(核心概念、接口、类、关键方法)</p>\n<p>避重就轻：回答自己会的，所以要尽量提到自己会的点</p>\n<p>一个问题能占用面试官多少<strong>时间</strong></p>\n<p>回到本题，IOC 牵涉到两个重要的概念：<strong>控制反转</strong>、<strong>容器</strong></p>\n<p><strong>总：</strong></p>\n<h2>控制反转</h2>\n<blockquote>\n<p>[!NOTE]\n原来对象是由使用者来进行控制，需要手动创建，有了 spring 后，可以把整个对象交给 spring 来帮我们进行管理 DI: 依赖注入，把对应的属性注入到具体的对象中，比如 <code>@Autowired</code>、<code>populateBean</code> 完成属性值的注入</p>\n</blockquote>\n<h2>容器</h2>\n<blockquote>\n<p>[!NOTE]\n存储对象，使用 map 结构来存储，在 spring 一般存在三级缓存，singletonObjects 存放完整的 bean 对象，整个 bean 的生命周期，从创建到使用再到销毁全部都是由容器来管理的(bean 的声明周期)</p>\n</blockquote>\n<blockquote>\n<p>PS：三级缓存：解决循环依赖、bean 的生命周期</p>\n</blockquote>\n<p><strong>分：</strong></p>\n<ol>\n<li>一般聊 ioc 容器要涉及到容器的创建过程(<strong>beanFactory</strong>，<strong>DefaultListableBeanFactory</strong>), 向 bean 工厂中设置一些参数(BeanPostProcessor，Aware 接口的子类) 等等属性</li>\n<li>加载解析 bean 对象，准备要创建的 bean 对象的定义对象 beanDefinition，(xml 或者注解的解析过程)</li>\n<li>BeanPostProcessor 的处理，此处是扩展点(spring 生态好就是因为有很多扩展点)。PlaceHolderConfigurSupport，ConfigurationClassPostProcessor</li>\n<li>BeanPostProcessor 的注册方式，方便后续对 bean 对象完成具体的拓展功能</li>\n<li>通过反射的方式讲 BeanDefinition 对象实例化成具体的 bean 对象</li>\n<li>bean 对象的初始化过程(填充属性，调用 aware 子类的方法，调用 BeanPostProcessor 前置处理方法，调用 init-method 方法，调用 BeanPostProcessor 的后置处理方法)</li>\n<li>生成完整的 bean 对象，通过 getBean 方法可以直接获取</li>\n<li>销毁过程</li>\n</ol>\n<p>如果记不住:</p>\n<p>具体的细节记不太清了，但是 spring 中的 bean 都是通过反射的方式生成的，同时其中包含了很多的拓展点，比如最常用的对象 BeanFactory 的拓展，对 bean 的拓展(对占位符的处理)，除此之外，ioc 最核心的也就是填充具体 bean 的属性和生命周期。(一定要背的点)</p>\n<p>最后记得结束一下: 面试官，这是我对 ioc 的整体理解，您看下还有什么问题，可以指点我一下</p>\n<h2>拓展</h2>\n<blockquote>\n<p>[!TIP]\n涉及到源码... 都不会呀！慢慢学吧</p>\n</blockquote>\n",
      "content:encodedSnippet": "答题技巧：采取总分的形式\n总：当前问题回答的是哪些具体的点\n分：以 1，2... 等的方式分细节描述相关的知识点，如果有哪些点不清楚，直接忽略过去。突出一些技术名词(核心概念、接口、类、关键方法)\n避重就轻：回答自己会的，所以要尽量提到自己会的点\n一个问题能占用面试官多少时间\n回到本题，IOC 牵涉到两个重要的概念：控制反转、容器\n总：\n控制反转\n[!NOTE]\n原来对象是由使用者来进行控制，需要手动创建，有了 spring 后，可以把整个对象交给 spring 来帮我们进行管理 DI: 依赖注入，把对应的属性注入到具体的对象中，比如 @Autowired、populateBean 完成属性值的注入\n容器\n[!NOTE]\n存储对象，使用 map 结构来存储，在 spring 一般存在三级缓存，singletonObjects 存放完整的 bean 对象，整个 bean 的生命周期，从创建到使用再到销毁全部都是由容器来管理的(bean 的声明周期)\nPS：三级缓存：解决循环依赖、bean 的生命周期\n分：\n一般聊 ioc 容器要涉及到容器的创建过程(beanFactory，DefaultListableBeanFactory), 向 bean 工厂中设置一些参数(BeanPostProcessor，Aware 接口的子类) 等等属性\n加载解析 bean 对象，准备要创建的 bean 对象的定义对象 beanDefinition，(xml 或者注解的解析过程)\nBeanPostProcessor 的处理，此处是扩展点(spring 生态好就是因为有很多扩展点)。PlaceHolderConfigurSupport，ConfigurationClassPostProcessor\nBeanPostProcessor 的注册方式，方便后续对 bean 对象完成具体的拓展功能\n通过反射的方式讲 BeanDefinition 对象实例化成具体的 bean 对象\nbean 对象的初始化过程(填充属性，调用 aware 子类的方法，调用 BeanPostProcessor 前置处理方法，调用 init-method 方法，调用 BeanPostProcessor 的后置处理方法)\n生成完整的 bean 对象，通过 getBean 方法可以直接获取\n销毁过程\n如果记不住:\n具体的细节记不太清了，但是 spring 中的 bean 都是通过反射的方式生成的，同时其中包含了很多的拓展点，比如最常用的对象 BeanFactory 的拓展，对 bean 的拓展(对占位符的处理)，除此之外，ioc 最核心的也就是填充具体 bean 的属性和生命周期。(一定要背的点)\n最后记得结束一下: 面试官，这是我对 ioc 的整体理解，您看下还有什么问题，可以指点我一下\n拓展\n[!TIP]\n涉及到源码... 都不会呀！慢慢学吧",
      "content": "第一道",
      "contentSnippet": "第一道",
      "guid": "https://www.blueke.top/posts/%E8%B0%88%E8%B0%88%E5%AF%B9spring-ioc%E7%9A%84%E7%90%86%E8%A7%A3%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0/",
      "categories": [
        "后端",
        "面试",
        "SpringBoot"
      ],
      "isoDate": "2025-05-12T11:30:00.000Z"
    },
    {
      "title": "【闲谈】2025年5月9日",
      "link": "https://www.blueke.top/posts/%E9%97%B2%E8%B0%882025%E5%B9%B45%E6%9C%889%E6%97%A5/",
      "pubDate": "Fri, 09 May 2025 00:07:00 GMT",
      "content:encoded": "<p>好像很久没有更新过文章了，虽然博客一直有所更新...</p>\n<p>正好准备洗澡的时候发现水没有加热(QAQ 舍友三个没一个开电源也是神奇，到我正好没水)</p>\n<p>那就趁此机会，随便闲聊点什么吧</p>\n<p>上次更新时我觉得最有意义的事情就是加入了“开往-友链接力”，这成了我上课摸鱼的好去处，通过一次次地开往，欣赏着各位的小天地，虽然内容或多或少，外观五花八门，但都能看出每个博主对博客的付出。</p>\n<p>相较于技术向博客，个人更喜欢生活博客，看着他们分享日常和随笔，都觉得十分的美好。在又一次的开往中，我看到一个中年大哥在博客中感慨：现在的年轻人太有活力，对未来都充满了信心。看到这让我久久无言，因为“活力”与“自信”真的很难在我身上体现出来，至今为止，感觉自己始终没有做出有意义的事情，看着自己的流水账似的博客，貌似是比过去清楚一些，但感觉未来仍处于一片混沌之中。</p>\n<p>目前我处在大三下学期，不久将跟随学校进行实训。我们班上大多人觉得自己需要考研或者考公，也都在准备着，而本人却继续求学兴致缺缺，对于过去的求学之路，虽然诸多怀念但却不想再度经历，所以我打算争取直接就业。网上对计算机行业持有很多悲观的看法，包括本人也觉得就业之路可能会非常坎坷，所以常常陷入阴郁的状态。一方面，无论是前端还是后端，一入便感觉浩瀚如海，要求扎实的功底和丰厚的知识储备，可我就像沙滩上玩耍的稚童，捡起这片好看的贝壳，丢掉那块怪异的石头。对于剩下的时光，我打算刷刷面试题，扎实下目前学过的框架，希望未来能找到理想的工作吧。</p>\n<p>更多想要感慨的还是自己的生活，作为一个从小内向甚至自卑的人来说，大学确实带给了我很多的改变，变得外向了一点，更喜欢打扮了一点，当然也收获了很多糖果和巴掌。在大一开学前，就加上了班里一位女生的联系方式，然后一起打游戏玩了一个暑假，自然而然的就喜欢上了，但当时很羞涩，自己当时不注意打扮，本身也不好看，尽管提升了一年，但是之后表白还是失败了。当然，虽然颜值占了很大的比重，但我觉得我的性格在与女生交往的时候，也确实不太合适，有很重的控制欲加上依赖性，导致矛盾也不少。再后来啊，她和高中的一个人在一起了，我们之间的联系也就戛然而止了。回顾这些事，说实话遗憾虽有，但却没有更多其他的情绪了，对我的帮助其实也是有的，包括但不限于自己的外貌管理、说话举止、亦或是揣摩他人的心理，感觉与之前的自己都有了很大的进步。</p>\n<p>作为对后来者的建议，我觉得你要是在大学想解决感情问题的话，最好还是在刚入学的时候，多接触些异性。否则像我现在到了大三，就基本上断绝了接触陌生人的可能了。说到这里我就想提起另一位女生了，虽然和这事没啥关系，我和她也是开学前就加上联系方式的，但是很诡异的是她主动加我的，起初还以为碰见发小广告的了，后面开学后还见过，性格说实话真的挺好的，开朗还经常关心别人，说话声音也很好听。什么？你要问我为什么不喜欢，因为她有一点点高，本人 178，她 177，但我喜欢低一点的，嘻嘻。后面在大一大二偶尔也会约出去吃饭看电影，我感觉她可能对我有好感(可能是我自恋了)，但是我就当无事发生了 QAQ，现在觉得还挺不好意思的。后来，她认识了一个对象，但是因为相处不愉快，分了，我还安慰了很久。后面又认识了一个对她很好的，一直到现在感情都很好，我也是默默祝福了。这里就不要探究我的心理了，因为真的谈不上喜欢，只能说还是朋友关系，偶尔朋友圈互评两句这种状态就挺好的。</p>\n<p>还有一个很重要的建议，就是一定要去异性去魅。在大学认识了不少女生，所以也得知了女生很多鸡毛蒜皮的事情。比如，在大一的时候，就我们班上，一个女生和寝室几个女生都能吵到导员那里去，各有各的理。后面那种领地意识，结伴而行的事情就不多说了，各位想想就能明白。当然我说的不是这个，下面为了隐私，我不多叙说，纯发牢骚，有的人没事不找你，经常已读不回，但是一有事第一个麻烦的就是你，还有约人出去玩，但是来回更改计划，最后选择放弃的。然后还有恐怖的就是一些性格比较偏激或者孤僻的，这种更是怎么都拉不回来，传输你各种垃圾的情绪，甚至悲观厌世的思想。你要问我怎么知道的，只能说本人非常“幸运”的都经历过。所以到目前也是逐渐明白了，有的关系该学会切割就切割，否则终究像荆棘一般，稍加触碰便伤及自身。</p>\n<p>哎呀，突然想到个比较好笑的事情，这学期发了上学期比赛的证书，我去拿了我自己的小组和朋友小组的证书。但是我朋友这个人吧，上学期他和班里一个算法比赛很厉害的女生还有其他班一个厉害的男生组队。恰好这个女生和我关系还是稍微好点的，就让我帮忙送一下，我觉得反正顺路的事情，就同意了，但是我刚出门给这个女生发消息发现她在不知何时给我默默删除了，我们的聊天记录还定格在上学期放假前一天，然后我就把证书又丢回去了。现在想想这个事情还是很好笑，另外补充一句，她就是当初和寝室不合的那个女生。至于这个女生的性格... 还是为人处世方面，我不予评判，反正我会记住很久的。</p>\n<p>说了这么久，突然感觉已经偏离原本写作的初衷了，那就先这样吧，权当是自己感情生活的一些回忆。目前个人经历了这些乱七八糟的事情，更加没有对爱情的追求了。我感觉自己看看番剧，打打游戏，要是能养只小猫小狗就更好了，嘻嘻。</p>\n",
      "content:encodedSnippet": "好像很久没有更新过文章了，虽然博客一直有所更新...\n正好准备洗澡的时候发现水没有加热(QAQ 舍友三个没一个开电源也是神奇，到我正好没水)\n那就趁此机会，随便闲聊点什么吧\n上次更新时我觉得最有意义的事情就是加入了“开往-友链接力”，这成了我上课摸鱼的好去处，通过一次次地开往，欣赏着各位的小天地，虽然内容或多或少，外观五花八门，但都能看出每个博主对博客的付出。\n相较于技术向博客，个人更喜欢生活博客，看着他们分享日常和随笔，都觉得十分的美好。在又一次的开往中，我看到一个中年大哥在博客中感慨：现在的年轻人太有活力，对未来都充满了信心。看到这让我久久无言，因为“活力”与“自信”真的很难在我身上体现出来，至今为止，感觉自己始终没有做出有意义的事情，看着自己的流水账似的博客，貌似是比过去清楚一些，但感觉未来仍处于一片混沌之中。\n目前我处在大三下学期，不久将跟随学校进行实训。我们班上大多人觉得自己需要考研或者考公，也都在准备着，而本人却继续求学兴致缺缺，对于过去的求学之路，虽然诸多怀念但却不想再度经历，所以我打算争取直接就业。网上对计算机行业持有很多悲观的看法，包括本人也觉得就业之路可能会非常坎坷，所以常常陷入阴郁的状态。一方面，无论是前端还是后端，一入便感觉浩瀚如海，要求扎实的功底和丰厚的知识储备，可我就像沙滩上玩耍的稚童，捡起这片好看的贝壳，丢掉那块怪异的石头。对于剩下的时光，我打算刷刷面试题，扎实下目前学过的框架，希望未来能找到理想的工作吧。\n更多想要感慨的还是自己的生活，作为一个从小内向甚至自卑的人来说，大学确实带给了我很多的改变，变得外向了一点，更喜欢打扮了一点，当然也收获了很多糖果和巴掌。在大一开学前，就加上了班里一位女生的联系方式，然后一起打游戏玩了一个暑假，自然而然的就喜欢上了，但当时很羞涩，自己当时不注意打扮，本身也不好看，尽管提升了一年，但是之后表白还是失败了。当然，虽然颜值占了很大的比重，但我觉得我的性格在与女生交往的时候，也确实不太合适，有很重的控制欲加上依赖性，导致矛盾也不少。再后来啊，她和高中的一个人在一起了，我们之间的联系也就戛然而止了。回顾这些事，说实话遗憾虽有，但却没有更多其他的情绪了，对我的帮助其实也是有的，包括但不限于自己的外貌管理、说话举止、亦或是揣摩他人的心理，感觉与之前的自己都有了很大的进步。\n作为对后来者的建议，我觉得你要是在大学想解决感情问题的话，最好还是在刚入学的时候，多接触些异性。否则像我现在到了大三，就基本上断绝了接触陌生人的可能了。说到这里我就想提起另一位女生了，虽然和这事没啥关系，我和她也是开学前就加上联系方式的，但是很诡异的是她主动加我的，起初还以为碰见发小广告的了，后面开学后还见过，性格说实话真的挺好的，开朗还经常关心别人，说话声音也很好听。什么？你要问我为什么不喜欢，因为她有一点点高，本人 178，她 177，但我喜欢低一点的，嘻嘻。后面在大一大二偶尔也会约出去吃饭看电影，我感觉她可能对我有好感(可能是我自恋了)，但是我就当无事发生了 QAQ，现在觉得还挺不好意思的。后来，她认识了一个对象，但是因为相处不愉快，分了，我还安慰了很久。后面又认识了一个对她很好的，一直到现在感情都很好，我也是默默祝福了。这里就不要探究我的心理了，因为真的谈不上喜欢，只能说还是朋友关系，偶尔朋友圈互评两句这种状态就挺好的。\n还有一个很重要的建议，就是一定要去异性去魅。在大学认识了不少女生，所以也得知了女生很多鸡毛蒜皮的事情。比如，在大一的时候，就我们班上，一个女生和寝室几个女生都能吵到导员那里去，各有各的理。后面那种领地意识，结伴而行的事情就不多说了，各位想想就能明白。当然我说的不是这个，下面为了隐私，我不多叙说，纯发牢骚，有的人没事不找你，经常已读不回，但是一有事第一个麻烦的就是你，还有约人出去玩，但是来回更改计划，最后选择放弃的。然后还有恐怖的就是一些性格比较偏激或者孤僻的，这种更是怎么都拉不回来，传输你各种垃圾的情绪，甚至悲观厌世的思想。你要问我怎么知道的，只能说本人非常“幸运”的都经历过。所以到目前也是逐渐明白了，有的关系该学会切割就切割，否则终究像荆棘一般，稍加触碰便伤及自身。\n哎呀，突然想到个比较好笑的事情，这学期发了上学期比赛的证书，我去拿了我自己的小组和朋友小组的证书。但是我朋友这个人吧，上学期他和班里一个算法比赛很厉害的女生还有其他班一个厉害的男生组队。恰好这个女生和我关系还是稍微好点的，就让我帮忙送一下，我觉得反正顺路的事情，就同意了，但是我刚出门给这个女生发消息发现她在不知何时给我默默删除了，我们的聊天记录还定格在上学期放假前一天，然后我就把证书又丢回去了。现在想想这个事情还是很好笑，另外补充一句，她就是当初和寝室不合的那个女生。至于这个女生的性格... 还是为人处世方面，我不予评判，反正我会记住很久的。\n说了这么久，突然感觉已经偏离原本写作的初衷了，那就先这样吧，权当是自己感情生活的一些回忆。目前个人经历了这些乱七八糟的事情，更加没有对爱情的追求了。我感觉自己看看番剧，打打游戏，要是能养只小猫小狗就更好了，嘻嘻。",
      "content": "随便谈谈这三年的学校生活",
      "contentSnippet": "随便谈谈这三年的学校生活",
      "guid": "https://www.blueke.top/posts/%E9%97%B2%E8%B0%882025%E5%B9%B45%E6%9C%889%E6%97%A5/",
      "categories": [
        "生活",
        "日记"
      ],
      "isoDate": "2025-05-09T00:07:00.000Z"
    },
    {
      "title": "在Astro新增一个时间盒子页面",
      "link": "https://www.blueke.top/posts/%E5%9C%A8astro%E6%96%B0%E5%A2%9E%E4%B8%80%E4%B8%AA%E6%97%B6%E9%97%B4%E7%9B%92%E5%AD%90%E9%A1%B5%E9%9D%A2/",
      "pubDate": "Tue, 29 Apr 2025 17:41:00 GMT",
      "content:encoded": "<p>想着既然选择 Astro，就得写一些有自己风格的东西，思来想去，写个时间盒子吧！</p>\n<p>其实就是一个展示页面啦，在本站你可以看到展示效果。</p>\n<blockquote>\n<p>[!NOTE]<br />\n参考于友链页面，借鉴了一下写法</p>\n</blockquote>\n<h2>具体步骤</h2>\n<p>在 <code>src\\content\\spec</code> 目录下新建文件 <code>chronobox.md</code>。名字随意哈\n在 <code>src\\types\\config.ts</code> 文件内添加以下内容</p>\n<pre><code>export enum LinkPreset {\n\tHome = 0,\n\tArchive = 1,\n\tAbout = 2,\n\tFriends = 3,\n\tSeries = 4,\n\tChronoBox = 5,\n}\n</code></pre>\n<p>在 <code>src\\i18n\\i18nKey.ts</code> 文件内添加以下内容</p>\n<pre><code>author = \"author\",\npublishedAt = \"publishedAt\",\nlicense = \"license\",\nfriends = \"friends\",\nseries = \"series\",\nchronobox = \"chronobox\",\n</code></pre>\n<p>然后在对应的语言文件里继续添加 key，不多赘述\n在 <code>src\\constants\\link-presets.ts</code> 文件内添加以下内容</p>\n<pre><code>[LinkPreset.Series]: {\n\tname: i18n(I18nKey.series),\n\turl: \"/series/\",\n\t},\n[LinkPreset.ChronoBox]: {\n\tname: i18n(I18nKey.chronobox),\n\turl: \"/chronobox/\",\n},\n</code></pre>\n<p>在 <code>src\\components</code> 目录下，选择合适的位置，新建三个卡片组件</p>\n<h3>AnimeList. astro 组件</h3>\n<p>新建 <code>AnimeList.astro</code> 组件</p>\n<pre><code>---\n// AnimeList.astro\nexport interface Props {\n\ttimelineItems: {\n\t\ttype: string;\n\t\ttitle: string;\n\t\tcover: string;\n\t\tdate: string;\n\t\tdesc?: string;\n\t\turl: string;\n\t\tepisodes: string | number;\n\t\trating: number;\n\t\ttags: string[];\n\t}[];\n}\n\nconst { timelineItems } = Astro.props;\n---\n\n&lt;div class=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-6\"&gt;\n  {timelineItems\n    .filter(item =&gt; item.type === 'anime')\n    .map((item) =&gt; (\n      &lt;div class=\"anime-card group relative overflow-hidden rounded-lg shadow-md transition-shadow\"&gt;\n        &lt;!-- 封面展示 --&gt;\n        &lt;div class=\"anime-cover-container w-full bg-gray-200\"&gt;\n          &lt;img src={item.cover} alt={item.title} class=\"w-full h-full object-fill transition-transform group-hover:scale-105\" /&gt;\n        &lt;/div&gt;\n\n        &lt;!-- 亚克力蒙版 --&gt;\n        &lt;div class=\"absolute bottom-0 left-0 right-0 h-0 overflow-hidden transition-all group-hover:h-40\"&gt;\n          &lt;div class=\"bg-gray-500/20 dark:bg-gray-800/40 p-4 flex flex-col justify-end h-full rounded-t-lg backdrop-blur-[3px]\"&gt;\n            &lt;!-- 标题与日期 --&gt;\n            &lt;h3 class=\"title text-white text-base font-semibold mb-1 line-clamp-2\"&gt;\n              {item.title}\n            &lt;/h3&gt;\n            &lt;time class=\"date text-white/90 text-xs mb-2\"&gt;\n              {new Date(item.date).toLocaleDateString()}\n            &lt;/time&gt;\n\n            &lt;!-- 核心信息栏 --&gt;\n            &lt;div class=\"flex justify-between items-center\"&gt;\n              &lt;!-- 集数信息 --&gt;\n              &lt;div class=\"flex items-center gap-1.5 text-white/90\"&gt;\n                &lt;svg class=\"w-3.5 h-3.5 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"&gt;\n                  &lt;path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"&gt;&lt;/path&gt;\n                &lt;/svg&gt;\n                &lt;span class=\"text-xs font-medium\"&gt;{item.episodes}&lt;/span&gt;\n              &lt;/div&gt;\n\n              &lt;!-- 评分展示 --&gt;\n              &lt;div class=\"flex items-center gap-1 text-white/90\"&gt;\n                ⭐\n                &lt;span class=\"text-xs font-medium\"&gt;{item.rating.toFixed(1)}分&lt;/span&gt;\n              &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;!-- 椭圆标签 --&gt;\n            &lt;div class=\"tag-cloud flex flex-wrap gap-1.5 mt-2\"&gt;\n              {item.tags.map(tag =&gt; (\n                &lt;span class=\"tag bg-white/25 dark:bg-black/25 px-3 py-1 rounded-full text-xs font-medium\"&gt;\n                  {tag}\n                &lt;/span&gt;\n              ))}\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;!-- 点击穿透层 --&gt;\n        &lt;a href={item.url} class=\"absolute inset-0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;/a&gt;\n      &lt;/div&gt;\n    ))}\n&lt;/div&gt;\n&lt;style&gt;\n/* 动漫卡片核心样式 */\n.anime-card {\n      @apply transition-shadow duration-300;\n      transform: perspective(1000px);\n      will-change: transform, box-shadow;\n    }\n\n    .anime-card:hover {\n      @apply shadow-2xl;\n      transform: scale(1.02);\n    }\n\n    .anime-cover-container {\n      aspect-ratio: 3/4; /* 保持3:4比例 */\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .tag{\n        color: white;\n    }\n&lt;/style&gt;\n</code></pre>\n<h3>MusicList. astro 组件</h3>\n<p>新建 <code>MusicList.astro</code> 组件</p>\n<pre><code>---\n// MusicList.astro\nexport interface Props {\n\ttimelineItems: {\n\t\ttype: string;\n\t\ttitle: string;\n\t\tartist: string;\n\t\tcover: string;\n\t\talbum: string;\n\t\tdate: string;\n\t\tplatform: {\n\t\t\t[key: string]: string;\n\t\t};\n\t}[];\n}\n\nconst { timelineItems } = Astro.props;\n---\n\n&lt;div class=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-6\"&gt;\n  {timelineItems\n    .filter(item =&gt; item.type ==='music')\n    .map((item) =&gt; (\n      &lt;div class=\"music-card group relative overflow-hidden rounded-2xl shadow-md transition-transform duration-300 hover:shadow-lg\"&gt;\n        &lt;div class=\"aspect-[1/1] w-full bg-gray-200 relative\"&gt;\n          &lt;img\n            src={item.cover}\n            alt={`${item.title} - ${item.artist}`}\n            class=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-105\"\n          /&gt;\n          &lt;div class=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 bg-black/30\"&gt;\n            &lt;svg class=\"w-12 h-12 text-white/90 drop-shadow-lg\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"&gt;\n              &lt;path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"/&gt;\n            &lt;/svg&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"absolute bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-black/80 to-transparent transition-all duration-300\"&gt;\n          &lt;h3 class=\"text-white font-semibold truncate\"&gt;{item.title}&lt;/h3&gt;\n          &lt;p class=\"text-white font-semibold truncate \"&gt;{item.artist}&lt;/p&gt;\n          &lt;div class=\"hidden group-hover:block\"&gt; &lt;!-- 这里控制专辑和其他信息的显示 --&gt;\n            &lt;p class=\"text-gray-300 text-250 mt-1\"&gt;{item.album} • {new Date(item.date).getFullYear()}&lt;/p&gt;\n            &lt;div class=\"flex gap-2 mt-3\"&gt;\n              {Object.entries(item.platform).map(([platform, link]) =&gt; (\n                link &amp;&amp; (\n                  &lt;a\n                    href={link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    class=\"flex items-center gap-1.5 px-3 py-1.5 rounded-full bg-white/10 hover:bg-white/20 transition-colors\"\n                  &gt;\n                    {/* 内联Spotify图标 */}\n                    {platform ==='spotify' &amp;&amp; (\n                      &lt;svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"&gt;\n                        &lt;path d=\"M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.6 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.56 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.419 1.56-.299.421-1.02.599-1.559.3z\"/&gt;\n                      &lt;/svg&gt;\n                    )}\n                    {/* 内联网易云图标 */}\n                    {platform === 'netease' &amp;&amp; (\n                      &lt;svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"&gt;\n                        &lt;path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8zm3.5-11.5h-7c-.276 0-.5.224-.5.5v7c0 .276.224.5.5.5h7c.276 0 .5-.224.5-.5v-7c0-.276-.224-.5-.5-.5z\"/&gt;\n                      &lt;/svg&gt;\n                    )}\n                    {/* 内联QQ音乐图标 */}\n                    {platform === 'qqmusic' &amp;&amp; (\n                      &lt;svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"&gt;\n                        &lt;path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8zm-2.5-8h5c.276 0 .5-.224.5-.5v-4c0-.276-.224-.5-.5-.5h-5c-.276 0-.5.224-.5.5v4c0 .276.224.5.5.5z\"/&gt;\n                      &lt;/svg&gt;\n                    )}\n                    &lt;span class=\"text-white/90 text-xs\"&gt;\n                      {platform ==='spotify' ? 'Spotify' : platform === 'netease' ? '网易云音乐' : 'QQ音乐'}\n                    &lt;/span&gt;\n                  &lt;/a&gt;\n                )\n              ))}\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    ))}\n&lt;/div&gt;\n</code></pre>\n<h3>PhotoList.astro组件</h3>\n<p>新建 <code>PhotoList.astro</code> 组件</p>\n<pre><code>---\n// PhotoList.astro\nexport interface Props {\n\ttimelineItems: {\n\t\ttype: string;\n\t\ttitle: string;\n\t\timage: string;\n\t\tdate: string;\n\t\tlocation: string;\n\t\tcamera: string;\n\t\ttags: string[];\n\t}[];\n}\nconst { timelineItems } = Astro.props;\n---\n&lt;div class=\"grid grid-cols-2 gap-4 md:grid-cols-3 lg:grid-cols-4\"&gt;\n    {timelineItems\n      .filter(item =&gt; item.type === 'photo')\n      .map((item) =&gt; (\n            &lt;div \n                class=\"photo-card relative overflow-hidden rounded-xl shadow-lg transition-shadow duration-300 group cursor-pointer\"\n                data-image={item.image}\n                data-title={item.title}\n                data-camera={item.camera}\n                data-tags={JSON.stringify(item.tags)}\n            &gt;\n                &lt;div class=\"aspect-w-2 aspect-h-3 w-full\"&gt;\n                    &lt;img \n                        src={item.image} \n                        alt={item.title} \n                        class=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\"\n                    /&gt;\n                &lt;/div&gt;\n                &lt;!-- 信息蒙版 --&gt;\n                &lt;div class=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent p-4\"&gt;\n                    &lt;!-- 左侧基础信息 --&gt;\n                    &lt;div class=\"flex flex-col justify-end h-full\"&gt;\n                        &lt;h3 class=\"text-white text-sm font-semibold mb-1\"&gt;{item.title}&lt;/h3&gt;\n                        &lt;div class=\"flex items-center gap-1 text-gray-300 text-xs\"&gt;\n                            &lt;svg class=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"&gt;\n                                &lt;path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"&gt;&lt;/path&gt;\n                                &lt;path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"&gt;&lt;/path&gt;\n                            &lt;/svg&gt;\n                            &lt;span&gt;{item.location}&lt;/span&gt;\n                        &lt;/div&gt;\n                        &lt;time class=\"text-gray-400 text-xs\"&gt;{new Date(item.date).toLocaleDateString()}&lt;/time&gt;\n                    &lt;/div&gt;\n\n                    &lt;!-- 右侧信息（悬浮显示） --&gt;\n                    &lt;div class=\"absolute bottom-4 right-4 flex flex-col items-end space-y-2 opacity-0 pointer-events-none transition-opacity duration-300 group-hover:opacity-100 group-hover:pointer-events-auto\"&gt;\n                        &lt;!-- 相机信息 --&gt;\n                        &lt;div class=\"flex items-center gap-1.5 text-white/80 text-xs\"&gt;\n                            &lt;svg class=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"&gt;\n                                &lt;path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"&gt;&lt;/path&gt;\n                                &lt;path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"&gt;&lt;/path&gt;\n                            &lt;/svg&gt;\n                            &lt;span&gt;{item.camera}&lt;/span&gt;\n                        &lt;/div&gt;\n\n                        &lt;!-- 标签组 --&gt;\n                        &lt;div class=\"flex flex-wrap gap-2 justify-end\"&gt;\n                            {item.tags.map(tag =&gt; (\n                                &lt;span class=\"px-2 py-1 bg-white/10 backdrop-blur-sm rounded-full text-white/90 text-xs font-medium transition-colors hover:bg-white/20\"&gt;\n                                    {tag}\n                                &lt;/span&gt;\n                            ))}\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        ))}\n&lt;/div&gt;\n\n&lt;script is:inline&gt;\n// 使用立即执行函数封装代码，避免全局污染\n(function() {\n  // 模态框操作函数\n  function openModal(imageUrl, title, camera, tags) {\n    let modal = document.getElementById('modal');\n    \n    // 如果模态框不存在则创建\n    if (!modal) {\n      modal = createModalElement();\n      document.body.appendChild(modal);\n      \n      // 添加全局事件监听（只需一次）\n      setupGlobalListeners();\n    }\n\n    // 更新模态框内容\n    document.getElementById('modal-image').src = imageUrl;\n    document.getElementById('modal-title').textContent = title;\n    document.getElementById('modal-camera').textContent = camera;\n    \n    // 渲染标签\n    const tagsContainer = document.getElementById('modal-tags');\n    tagsContainer.innerHTML = tags.map(tag =&gt; `\n      &lt;span class=\"px-3 py-1 bg-white rounded-full text-sm shadow-sm border\" style=\"background:var(--btn-regular-bg-active);\"&gt;\n        ${tag}\n      &lt;/span&gt;\n    `).join('');\n    \n    // 显示模态框\n    modal.classList.remove('hidden');\n    document.body.style.overflow = 'hidden'; // 防止背景滚动\n  }\n\n  function createModalElement() {\n    const modal = document.createElement('div');\n    modal.id = 'modal';\n    modal.className = 'fixed inset-0 bg-black/80 backdrop-blur-sm hidden flex items-center justify-center z-50';\n    \n    // 获取主题色\n    const rootStyles = getComputedStyle(document.documentElement);\n    const primaryColor = rootStyles.getPropertyValue('--primary').trim();\n\n    modal.innerHTML = `\n      &lt;div class=\"rounded-xl max-w-6xl w-full md:max-w-5xl lg:max-w-4xl max-h-[90vh] overflow-y-auto overflow-x-hidden shadow-2xl relative\" style=\"background:var(--page-bg);\"&gt;\n        &lt;button \n          id=\"modal-close-btn\"\n          class=\"absolute top-4 right-4 text-white bg-black/20 hover:bg-black/30 rounded-full p-2 transition-colors backdrop-blur-sm z-10\"\n        &gt;\n          &lt;svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"&gt;\n            &lt;path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" /&gt;\n          &lt;/svg&gt;\n        &lt;/button&gt;\n        &lt;div class=\"p-6 border-b border-gray-200\"&gt;\n          &lt;h2 id=\"modal-title\" class=\"text-2xl font-bold text-gray-900 mb-2\" style=\"color: ${primaryColor};\"&gt;&lt;/h2&gt;\n          &lt;div class=\"flex items-center gap-4 text-gray-600\"&gt;\n            &lt;div class=\"flex items-center gap-1\"&gt;\n              &lt;svg class=\"w-5 h-5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"&gt;\n                &lt;path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" /&gt;\n              &lt;/svg&gt;\n              &lt;span id=\"modal-camera\"&gt;&lt;/span&gt;\n            &lt;/div&gt;\n            &lt;div id=\"modal-tags\" class=\"flex flex-wrap gap-2\"&gt;&lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"relative p-4\"&gt;\n          &lt;img \n            id=\"modal-image\"\n            class=\"w-full h-auto max-h-[70vh] object-contain\"\n            loading=\"lazy\"\n          /&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    `;\n    return modal;\n  }\n\n  function closeModal() {\n    const modal = document.getElementById('modal');\n    if (modal) {\n      modal.classList.add('hidden');\n      document.body.style.overflow = ''; // 恢复滚动\n    }\n  }\n\n  function setupGlobalListeners() {\n    // 点击关闭按钮\n    document.getElementById('modal-close-btn')?.addEventListener('click', closeModal);\n    \n    // 点击模态框背景关闭\n    document.getElementById('modal')?.addEventListener('click', (e) =&gt; {\n      if (e.target === document.getElementById('modal')) {\n        closeModal();\n      }\n    });\n    \n    // ESC键关闭\n    document.addEventListener('keydown', (e) =&gt; {\n      if (e.key === 'Escape' &amp;&amp; !document.getElementById('modal')?.classList.contains('hidden')) {\n        closeModal();\n      }\n    });\n  }\n\n  document.addEventListener('click', (e) =&gt; {\n    const card = e.target.closest('.photo-card');\n    if (card) {\n      e.preventDefault();\n      openModal(\n        card.dataset.image,\n        card.dataset.title,\n        card.dataset.camera,\n        JSON.parse(card.dataset.tags)\n      );\n    }\n  });\n\n})();\n&lt;/script&gt;\n\n&lt;style&gt;\n    .photo-card {\n        @apply relative overflow-hidden rounded-xl shadow-lg transition-shadow duration-300;\n        /* 移除所有宽度计算，完全依赖网格系统 */\n    }\n\n    .photo-card img {\n        @apply w-full h-full object-cover transition-transform duration-300 group-hover:scale-105;\n    }\n\n    /* 右侧信息悬浮效果 */\n    .photo-card .right-info {\n        opacity: 0;\n        pointer-events: none;\n        transition: opacity 0.3s ease;\n    }\n\n    .photo-card:hover .right-info {\n        opacity: 1;\n        pointer-events: auto;\n    }\n\n    /* 强制小屏幕单栏，中屏幕双栏，大屏幕三栏（可按需调整） */\n    @media (min-width: 640px) {\n        .grid-cols-2 { grid-template-columns: repeat(2, 1fr); }\n        .md:grid-cols-3 { grid-template-columns: repeat(3, 1fr); }\n        .lg:grid-cols-4 { grid-template-columns: repeat(4, 1fr); }\n    }\n\n    /* 仅在模态框非隐藏时应用居中样式 */\n    #modal:not(.hidden) {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    /* 确保隐藏时完全隐藏（覆盖可能的样式冲突） */\n    #modal.hidden {\n        display: none !important;\n    }\n\n    #modal-title {\n        color: var(--primary)!important; /* 使用主题主色 */\n        /* 响应式调整（可选） */\n        @media (max-width: 768px) {\n            font-size: 1.25rem !important; /* 小屏幕缩小字体 */\n        }\n    }\n\n    /* 模态内容居中（保持不变） */\n    #modal &gt; div {\n        margin: auto;\n    }\n&lt;/style&gt;\n</code></pre>\n<h3>父组件</h3>\n<p>在 <code>src\\pages</code> 目录下，新建一个 <code>chronobox.astro</code> 文件</p>\n<pre><code>---\nimport { getEntry } from \"astro:content\";\nimport AnimeList from \"@/components/mine/Lists/AnimeList.astro\";\nimport MusicList from \"@/components/mine/Lists/MusicList.astro\";\nimport PhotoList from \"@/components/mine/Lists/PhotoList.astro\";\nimport I18nKey from \"@/i18n/i18nKey\";\nimport { i18n } from \"@/i18n/translation\";\nimport MainGridLayout from \"@/layouts/MainGridLayout.astro\";\n\nimport Markdown from \"@components/misc/Markdown.astro\";\nconst chronoboxPost = await getEntry(\"spec\", \"chronobox\");\nconst { Content } = await chronoboxPost.render();\n\n// 数据结构改造\nconst timelineItems = [\n\t{\n\t\ttype: \"anime\",\n\t\ttitle: \"Re:从零开始的异世界生活\",\n\t\tcover:\n\t\t\t\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/从零开始的异世界生活webp.webp\",\n\t\tdate: \"2016-04-04\",\n\t\turl: \"https://mzh.moegirl.org.cn/Re:%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%BC%82%E4%B8%96%E7%95%8C%E7%94%9F%E6%B4%BB\", // 建议替换为实际官网或播放页链接\n\t\tepisodes: \"更新至第三季下半\", // 补充具体集数信息\n\t\trating: 4.9, // 提升至合理评分区间\n\t\ttags: [\"奇幻\", \"冒险\", \"剧情\", \"成长\"], // 补充更精准标签\n\t},\n\t{\n\t\ttype: \"anime\",\n\t\ttitle: \"进击的巨人\",\n\t\tcover:\n\t\t\t\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/进击的巨人.jpg\",\n\t\tdate: \"2023-09-15\",\n\t\turl: \"https://mzh.moegirl.org.cn/%E8%BF%9B%E5%87%BB%E7%9A%84%E5%B7%A8%E4%BA%BA\",\n\t\tepisodes: 25,\n\t\trating: 4.8,\n\t\ttags: [\"热血\", \"奇幻\"],\n\t},\n\t{\n\t\ttype: \"anime\",\n\t\ttitle: \"龙与虎\",\n\t\tcover: \"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/龙与虎.webp\",\n\t\tdate: \"2008-10-01\",\n\t\turl: \"https://mzh.moegirl.org.cn/%E9%BE%99%E4%B8%8E%E8%99%8E\",\n\t\tepisodes: 25,\n\t\trating: 4.8,\n\t\ttags: [\"爱情\", \"校园\"],\n\t},\n\t{\n\t\ttype: \"anime\",\n\t\ttitle: \"间谍过家家\",\n\t\tcover:\n\t\t\t\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/间谍过家家.webp\",\n\t\tdate: \"2022-10-01\",\n\t\tdesc: \"震撼结局，自由的定义引发深思\",\n\t\turl: \"https://example.com/aot\",\n\t\tepisodes: 25,\n\t\trating: 4.8,\n\t\ttags: [\"爱情\", \"喜剧\"],\n\t},\n\t{\n\t\ttype: \"music\",\n\t\ttitle: \"爱在西元前\",\n\t\tartist: \"周杰伦\",\n\t\tcover:\n\t\t\t\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/%E4%BE%9D%E7%84%B6%E8%8C%83%E7%89%B9%E8%A5%BF.jpg\",\n\t\talbum: \"BOOTLEG\",\n\t\tdate: \"2023-08-02\",\n\t\tplatform: {\n\t\t\t// spotify: \"https://spotify.com/lemon\",\n\t\t\t// netease: \"https://music.163.com/lemon\",\n\t\t\tqqmusic:\n\t\t\t\t\"https://i.y.qq.com/v8/playsong.html?songid=97740#webchat_redirect\", // QQ音乐链接\n\t\t},\n\t},\n\t{\n\t\ttype: \"music\",\n\t\ttitle: \"一生所爱\",\n\t\tartist: \"卢冠廷/莫文蔚\",\n\t\tcover:\n\t\t\t\"https://y.qq.com/music/photo_new/T002R300x300M000001UAAKE4QJguW_3.jpg?max_age=2592000\",\n\t\talbum: \"大话西游\",\n\t\tdate: \"1995-05-01\",\n\t\tplatform: {\n\t\t\t// spotify: \"https://spotify.com/lemon\",\n\t\t\t// netease: \"https://music.163.com/lemon\",\n\t\t\tqqmusic:\n\t\t\t\t\"https://i.y.qq.com/v8/playsong.html?songid=1727258#webchat_redirect\",\n\t\t},\n\t},\n\t{\n\t\ttype: \"photo\",\n\t\ttitle: \"京都红叶\",\n\t\timage:\n\t\t\t\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/FYwAUt5aQAU07-a.jpg\",\n\t\tdate: \"2023-11-22\",\n\t\tlocation: \"清水寺\",\n\t\tcamera: \"Sony A7IV\",\n\t\ttags: [\"旅行\", \"秋天\"],\n\t},\n\t{\n\t\ttype: \"photo\",\n\t\ttitle: \"依蕾娜\",\n\t\timage: \"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/yileina.png\",\n\t\tdate: \"2023-11-22\",\n\t\tlocation: \"日本\",\n\t\tcamera: \"Sony A7IV\",\n\t\ttags: [\"动漫\", \"魔女\"],\n\t},\n];\n---\n\n&lt;MainGridLayout title={i18n(I18nKey.chronobox)} description={i18n(I18nKey.chronobox)}&gt;\n  &lt;Markdown class=\"mt-8 prose max-w-none\"&gt;\n      &lt;Content /&gt;\n  &lt;/Markdown&gt;\n\n  &lt;!-- 选项卡容器 --&gt;\n  &lt;div class=\"time-capsule-container\"&gt;\n      &lt;div class=\"card-base z-10 px-9 py-6 relative w-full\"&gt;\n          &lt;!-- 选项卡导航 --&gt;\n          &lt;div class=\"tabs-header flex gap-4 mb-8 border-b border-gray-200 dark:border-gray-700\"&gt;\n              &lt;button\n              data-tab=\"anime\"\n              class=\"tab-button active px-4 py-2 rounded-t-lg transition-colors duration-200 font-medium relative\"\n            &gt;\n              动漫\n              &lt;span class=\"active-indicator absolute bottom-0 left-0 right-0 h-0.5 transition-opacity\"&gt;&lt;/span&gt;\n            &lt;/button&gt;\n            &lt;button\n            data-tab=\"music\"\n            class=\"tab-button px-4 py-2 rounded-t-lg transition-colors duration-200 font-medium relative\"\n          &gt;\n            音乐\n            &lt;span class=\"active-indicator absolute bottom-0 left-0 right-0 h-0.5 transition-opacity\"&gt;&lt;/span&gt;\n          &lt;/button&gt;\n          &lt;button\n          data-tab=\"photo\"\n          class=\"tab-button px-4 py-2 rounded-t-lg transition-colors duration-200 font-medium relative\"\n        &gt;\n        照片\n          &lt;span class=\"active-indicator absolute bottom-0 left-0 right-0 h-0.5 transition-opacity\"&gt;&lt;/span&gt;\n        &lt;/button&gt;\n          &lt;/div&gt;\n          &lt;div id=\"anime-content\" class=\"tab-content\"&gt;\n  &lt;AnimeList timelineItems={timelineItems} /&gt;\n&lt;/div&gt;\n&lt;div id=\"music-content\" class=\"tab-content hidden\"&gt;\n  &lt;MusicList timelineItems={timelineItems} /&gt;\n&lt;/div&gt;\n&lt;div id=\"photo-content\" class=\"tab-content hidden\"&gt;\n  &lt;PhotoList timelineItems={timelineItems} /&gt;\n&lt;/div&gt;\n      &lt;/div&gt;\n  &lt;/div&gt;\n\n  &lt;!-- 选项卡交互脚本 --&gt;\n  &lt;script is:inline&gt;\n(function() {\n  const tabs = document.querySelectorAll('.tab-button');\n  const contents = document.querySelectorAll('.tab-content');\n  \n  tabs.forEach(tab =&gt; {\n    tab.addEventListener('click', () =&gt; {\n      // 移除所有标签的激活状态\n      tabs.forEach(t =&gt; {\n        t.classList.remove('active');\n        t.querySelector('.active-indicator').style.opacity = '0';\n      });\n      \n      // 隐藏所有内容\n      contents.forEach(c =&gt; {\n        c.classList.add('hidden');\n      });\n      // 添加当前标签的激活状态\n      tab.classList.add('active');\n      tab.querySelector('.active-indicator').style.opacity = '1';\n      // 显示对应内容\n      const targetContentId = `${tab.dataset.tab}-content`;\n      document.getElementById(targetContentId).classList.remove('hidden');\n    });\n  });\n})();\n&lt;/script&gt;\n\n  &lt;style is:global&gt;\n    /* 新增选项卡样式 */\n    .tabs-header {\n      @apply border-b border-gray-200 dark:border-gray-700;\n    }\n\n    .tab-button {\n      @apply transition-colors duration-200 text-gray-600 dark:text-gray-300;\n    }\n    \n\n    .tab-button.active {\n      color: var(--primary); /* 使用Tailwind内置颜色 */\n    }\n\n    .tab-button.active .active-indicator {\n      @apply opacity-100;\n    }\n\n    .tab-content {\n    @apply hidden;\n  }\n  \n  .tab-content:not(.hidden) {\n    display: block;\n    animation: fadeIn 0.3s ease-out;\n  }\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n        transform: translateY(10px);\n      }\n      to {\n        opacity: 1;\n        transform: translateY(0);\n      }\n    }\n\n    \n\n    /* 电脑端额外优化（新增） */\n    @media (min-width: 1024px) {\n      .grid-cols-3 &gt; * {\n        width: calc((100% - 1.5rem) / 3); /* 精确计算列宽，避免间隙影响 */\n      }\n      .anime-card {\n        min-height: 500px; /* 增大桌面端最小高度，匹配比例 */\n      }\n    }\n\n    /* 信息层动画（使用标准CSS过渡） */\n    .anime-card .info-overlay {\n      height: 0;\n      overflow: hidden;\n      transition: height 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n    }\n\n    .anime-card:hover .info-overlay {\n      height: 100px; /* 自定义合适高度 */\n    }\n\n    @media (max-width: 1023px) {\n      .anime-card,\n      .music-card {\n        min-width: calc(50% - 1rem); /* 双列宽度计算（配合gap-6） */\n      }\n    }\n\n    /* 响应式调整 */\n    @media (max-width: 767px) {\n      .time-capsule-container {\n        padding: 0 4px;\n      }\n      .anime-card {\n        min-height: 200px; /* 移动端最小高度 */\n      }\n    }\n\n    @media (min-width: 768px) {\n      .anime-card {\n        min-height: 350px; /* 平板端最小高度 */\n      }\n    }\n\n    /* 移除调试边框 */\n    .grid,\n    .capsule-card {\n      border: none;\n    }\n    \n  &lt;/style&gt;\n&lt;/MainGridLayout&gt;</code></pre>\n",
      "content:encodedSnippet": "想着既然选择 Astro，就得写一些有自己风格的东西，思来想去，写个时间盒子吧！\n其实就是一个展示页面啦，在本站你可以看到展示效果。\n[!NOTE]\n具体步骤\n在 src\\content\\spec 目录下新建文件 chronobox.md。名字随意哈\n在 src\\types\\config.ts 文件内添加以下内容\nexport enum LinkPreset {\n\tHome = 0,\n\tArchive = 1,\n\tAbout = 2,\n\tFriends = 3,\n\tSeries = 4,\n\tChronoBox = 5,\n}\n\n在 src\\i18n\\i18nKey.ts 文件内添加以下内容\nauthor = \"author\",\npublishedAt = \"publishedAt\",\nlicense = \"license\",\nfriends = \"friends\",\nseries = \"series\",\nchronobox = \"chronobox\",\n\n然后在对应的语言文件里继续添加 key，不多赘述\n在 src\\constants\\link-presets.ts 文件内添加以下内容\n[LinkPreset.Series]: {\n\tname: i18n(I18nKey.series),\n\turl: \"/series/\",\n\t},\n[LinkPreset.ChronoBox]: {\n\tname: i18n(I18nKey.chronobox),\n\turl: \"/chronobox/\",\n},\n\n在 src\\components 目录下，选择合适的位置，新建三个卡片组件\nAnimeList. astro 组件\n新建 AnimeList.astro 组件\n---\n// AnimeList.astro\nexport interface Props {\n\ttimelineItems: {\n\t\ttype: string;\n\t\ttitle: string;\n\t\tcover: string;\n\t\tdate: string;\n\t\tdesc?: string;\n\t\turl: string;\n\t\tepisodes: string | number;\n\t\trating: number;\n\t\ttags: string[];\n\t}[];\n}\n\nconst { timelineItems } = Astro.props;\n---\n\n<div class=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n  {timelineItems\n    .filter(item => item.type === 'anime')\n    .map((item) => (\n      <div class=\"anime-card group relative overflow-hidden rounded-lg shadow-md transition-shadow\">\n        <!-- 封面展示 -->\n        <div class=\"anime-cover-container w-full bg-gray-200\">\n          <img src={item.cover} alt={item.title} class=\"w-full h-full object-fill transition-transform group-hover:scale-105\" />\n        </div>\n\n        <!-- 亚克力蒙版 -->\n        <div class=\"absolute bottom-0 left-0 right-0 h-0 overflow-hidden transition-all group-hover:h-40\">\n          <div class=\"bg-gray-500/20 dark:bg-gray-800/40 p-4 flex flex-col justify-end h-full rounded-t-lg backdrop-blur-[3px]\">\n            <!-- 标题与日期 -->\n            <h3 class=\"title text-white text-base font-semibold mb-1 line-clamp-2\">\n              {item.title}\n            </h3>\n            <time class=\"date text-white/90 text-xs mb-2\">\n              {new Date(item.date).toLocaleDateString()}\n            </time>\n\n            <!-- 核心信息栏 -->\n            <div class=\"flex justify-between items-center\">\n              <!-- 集数信息 -->\n              <div class=\"flex items-center gap-1.5 text-white/90\">\n                <svg class=\"w-3.5 h-3.5 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n                </svg>\n                <span class=\"text-xs font-medium\">{item.episodes}</span>\n              </div>\n\n              <!-- 评分展示 -->\n              <div class=\"flex items-center gap-1 text-white/90\">\n                ⭐\n                <span class=\"text-xs font-medium\">{item.rating.toFixed(1)}分</span>\n              </div>\n            </div>\n\n            <!-- 椭圆标签 -->\n            <div class=\"tag-cloud flex flex-wrap gap-1.5 mt-2\">\n              {item.tags.map(tag => (\n                <span class=\"tag bg-white/25 dark:bg-black/25 px-3 py-1 rounded-full text-xs font-medium\">\n                  {tag}\n                </span>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <!-- 点击穿透层 -->\n        <a href={item.url} class=\"absolute inset-0\" target=\"_blank\" rel=\"noopener noreferrer\"></a>\n      </div>\n    ))}\n</div>\n<style>\n/* 动漫卡片核心样式 */\n.anime-card {\n      @apply transition-shadow duration-300;\n      transform: perspective(1000px);\n      will-change: transform, box-shadow;\n    }\n\n    .anime-card:hover {\n      @apply shadow-2xl;\n      transform: scale(1.02);\n    }\n\n    .anime-cover-container {\n      aspect-ratio: 3/4; /* 保持3:4比例 */\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .tag{\n        color: white;\n    }\n</style>\n\nMusicList. astro 组件\n新建 MusicList.astro 组件\n---\n// MusicList.astro\nexport interface Props {\n\ttimelineItems: {\n\t\ttype: string;\n\t\ttitle: string;\n\t\tartist: string;\n\t\tcover: string;\n\t\talbum: string;\n\t\tdate: string;\n\t\tplatform: {\n\t\t\t[key: string]: string;\n\t\t};\n\t}[];\n}\n\nconst { timelineItems } = Astro.props;\n---\n\n<div class=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n  {timelineItems\n    .filter(item => item.type ==='music')\n    .map((item) => (\n      <div class=\"music-card group relative overflow-hidden rounded-2xl shadow-md transition-transform duration-300 hover:shadow-lg\">\n        <div class=\"aspect-[1/1] w-full bg-gray-200 relative\">\n          <img\n            src={item.cover}\n            alt={`${item.title} - ${item.artist}`}\n            class=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-105\"\n          />\n          <div class=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 bg-black/30\">\n            <svg class=\"w-12 h-12 text-white/90 drop-shadow-lg\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"/>\n            </svg>\n          </div>\n        </div>\n        <div class=\"absolute bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-black/80 to-transparent transition-all duration-300\">\n          <h3 class=\"text-white font-semibold truncate\">{item.title}</h3>\n          <p class=\"text-white font-semibold truncate \">{item.artist}</p>\n          <div class=\"hidden group-hover:block\"> <!-- 这里控制专辑和其他信息的显示 -->\n            <p class=\"text-gray-300 text-250 mt-1\">{item.album} • {new Date(item.date).getFullYear()}</p>\n            <div class=\"flex gap-2 mt-3\">\n              {Object.entries(item.platform).map(([platform, link]) => (\n                link && (\n                  <a\n                    href={link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    class=\"flex items-center gap-1.5 px-3 py-1.5 rounded-full bg-white/10 hover:bg-white/20 transition-colors\"\n                  >\n                    {/* 内联Spotify图标 */}\n                    {platform ==='spotify' && (\n                      <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.6 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.56 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.419 1.56-.299.421-1.02.599-1.559.3z\"/>\n                      </svg>\n                    )}\n                    {/* 内联网易云图标 */}\n                    {platform === 'netease' && (\n                      <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8zm3.5-11.5h-7c-.276 0-.5.224-.5.5v7c0 .276.224.5.5.5h7c.276 0 .5-.224.5-.5v-7c0-.276-.224-.5-.5-.5z\"/>\n                      </svg>\n                    )}\n                    {/* 内联QQ音乐图标 */}\n                    {platform === 'qqmusic' && (\n                      <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8zm-2.5-8h5c.276 0 .5-.224.5-.5v-4c0-.276-.224-.5-.5-.5h-5c-.276 0-.5.224-.5.5v4c0 .276.224.5.5.5z\"/>\n                      </svg>\n                    )}\n                    <span class=\"text-white/90 text-xs\">\n                      {platform ==='spotify' ? 'Spotify' : platform === 'netease' ? '网易云音乐' : 'QQ音乐'}\n                    </span>\n                  </a>\n                )\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    ))}\n</div>\n\nPhotoList.astro组件\n新建 PhotoList.astro 组件\n---\n// PhotoList.astro\nexport interface Props {\n\ttimelineItems: {\n\t\ttype: string;\n\t\ttitle: string;\n\t\timage: string;\n\t\tdate: string;\n\t\tlocation: string;\n\t\tcamera: string;\n\t\ttags: string[];\n\t}[];\n}\nconst { timelineItems } = Astro.props;\n---\n<div class=\"grid grid-cols-2 gap-4 md:grid-cols-3 lg:grid-cols-4\">\n    {timelineItems\n      .filter(item => item.type === 'photo')\n      .map((item) => (\n            <div \n                class=\"photo-card relative overflow-hidden rounded-xl shadow-lg transition-shadow duration-300 group cursor-pointer\"\n                data-image={item.image}\n                data-title={item.title}\n                data-camera={item.camera}\n                data-tags={JSON.stringify(item.tags)}\n            >\n                <div class=\"aspect-w-2 aspect-h-3 w-full\">\n                    <img \n                        src={item.image} \n                        alt={item.title} \n                        class=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\"\n                    />\n                </div>\n                <!-- 信息蒙版 -->\n                <div class=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent p-4\">\n                    <!-- 左侧基础信息 -->\n                    <div class=\"flex flex-col justify-end h-full\">\n                        <h3 class=\"text-white text-sm font-semibold mb-1\">{item.title}</h3>\n                        <div class=\"flex items-center gap-1 text-gray-300 text-xs\">\n                            <svg class=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path>\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                            </svg>\n                            <span>{item.location}</span>\n                        </div>\n                        <time class=\"text-gray-400 text-xs\">{new Date(item.date).toLocaleDateString()}</time>\n                    </div>\n\n                    <!-- 右侧信息（悬浮显示） -->\n                    <div class=\"absolute bottom-4 right-4 flex flex-col items-end space-y-2 opacity-0 pointer-events-none transition-opacity duration-300 group-hover:opacity-100 group-hover:pointer-events-auto\">\n                        <!-- 相机信息 -->\n                        <div class=\"flex items-center gap-1.5 text-white/80 text-xs\">\n                            <svg class=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\"></path>\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                            </svg>\n                            <span>{item.camera}</span>\n                        </div>\n\n                        <!-- 标签组 -->\n                        <div class=\"flex flex-wrap gap-2 justify-end\">\n                            {item.tags.map(tag => (\n                                <span class=\"px-2 py-1 bg-white/10 backdrop-blur-sm rounded-full text-white/90 text-xs font-medium transition-colors hover:bg-white/20\">\n                                    {tag}\n                                </span>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ))}\n</div>\n\n<script is:inline>\n// 使用立即执行函数封装代码，避免全局污染\n(function() {\n  // 模态框操作函数\n  function openModal(imageUrl, title, camera, tags) {\n    let modal = document.getElementById('modal');\n    \n    // 如果模态框不存在则创建\n    if (!modal) {\n      modal = createModalElement();\n      document.body.appendChild(modal);\n      \n      // 添加全局事件监听（只需一次）\n      setupGlobalListeners();\n    }\n\n    // 更新模态框内容\n    document.getElementById('modal-image').src = imageUrl;\n    document.getElementById('modal-title').textContent = title;\n    document.getElementById('modal-camera').textContent = camera;\n    \n    // 渲染标签\n    const tagsContainer = document.getElementById('modal-tags');\n    tagsContainer.innerHTML = tags.map(tag => `\n      <span class=\"px-3 py-1 bg-white rounded-full text-sm shadow-sm border\" style=\"background:var(--btn-regular-bg-active);\">\n        ${tag}\n      </span>\n    `).join('');\n    \n    // 显示模态框\n    modal.classList.remove('hidden');\n    document.body.style.overflow = 'hidden'; // 防止背景滚动\n  }\n\n  function createModalElement() {\n    const modal = document.createElement('div');\n    modal.id = 'modal';\n    modal.className = 'fixed inset-0 bg-black/80 backdrop-blur-sm hidden flex items-center justify-center z-50';\n    \n    // 获取主题色\n    const rootStyles = getComputedStyle(document.documentElement);\n    const primaryColor = rootStyles.getPropertyValue('--primary').trim();\n\n    modal.innerHTML = `\n      <div class=\"rounded-xl max-w-6xl w-full md:max-w-5xl lg:max-w-4xl max-h-[90vh] overflow-y-auto overflow-x-hidden shadow-2xl relative\" style=\"background:var(--page-bg);\">\n        <button \n          id=\"modal-close-btn\"\n          class=\"absolute top-4 right-4 text-white bg-black/20 hover:bg-black/30 rounded-full p-2 transition-colors backdrop-blur-sm z-10\"\n        >\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n        <div class=\"p-6 border-b border-gray-200\">\n          <h2 id=\"modal-title\" class=\"text-2xl font-bold text-gray-900 mb-2\" style=\"color: ${primaryColor};\"></h2>\n          <div class=\"flex items-center gap-4 text-gray-600\">\n            <div class=\"flex items-center gap-1\">\n              <svg class=\"w-5 h-5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" />\n              </svg>\n              <span id=\"modal-camera\"></span>\n            </div>\n            <div id=\"modal-tags\" class=\"flex flex-wrap gap-2\"></div>\n          </div>\n        </div>\n        <div class=\"relative p-4\">\n          <img \n            id=\"modal-image\"\n            class=\"w-full h-auto max-h-[70vh] object-contain\"\n            loading=\"lazy\"\n          />\n        </div>\n      </div>\n    `;\n    return modal;\n  }\n\n  function closeModal() {\n    const modal = document.getElementById('modal');\n    if (modal) {\n      modal.classList.add('hidden');\n      document.body.style.overflow = ''; // 恢复滚动\n    }\n  }\n\n  function setupGlobalListeners() {\n    // 点击关闭按钮\n    document.getElementById('modal-close-btn')?.addEventListener('click', closeModal);\n    \n    // 点击模态框背景关闭\n    document.getElementById('modal')?.addEventListener('click', (e) => {\n      if (e.target === document.getElementById('modal')) {\n        closeModal();\n      }\n    });\n    \n    // ESC键关闭\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && !document.getElementById('modal')?.classList.contains('hidden')) {\n        closeModal();\n      }\n    });\n  }\n\n  document.addEventListener('click', (e) => {\n    const card = e.target.closest('.photo-card');\n    if (card) {\n      e.preventDefault();\n      openModal(\n        card.dataset.image,\n        card.dataset.title,\n        card.dataset.camera,\n        JSON.parse(card.dataset.tags)\n      );\n    }\n  });\n\n})();\n</script>\n\n<style>\n    .photo-card {\n        @apply relative overflow-hidden rounded-xl shadow-lg transition-shadow duration-300;\n        /* 移除所有宽度计算，完全依赖网格系统 */\n    }\n\n    .photo-card img {\n        @apply w-full h-full object-cover transition-transform duration-300 group-hover:scale-105;\n    }\n\n    /* 右侧信息悬浮效果 */\n    .photo-card .right-info {\n        opacity: 0;\n        pointer-events: none;\n        transition: opacity 0.3s ease;\n    }\n\n    .photo-card:hover .right-info {\n        opacity: 1;\n        pointer-events: auto;\n    }\n\n    /* 强制小屏幕单栏，中屏幕双栏，大屏幕三栏（可按需调整） */\n    @media (min-width: 640px) {\n        .grid-cols-2 { grid-template-columns: repeat(2, 1fr); }\n        .md:grid-cols-3 { grid-template-columns: repeat(3, 1fr); }\n        .lg:grid-cols-4 { grid-template-columns: repeat(4, 1fr); }\n    }\n\n    /* 仅在模态框非隐藏时应用居中样式 */\n    #modal:not(.hidden) {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    /* 确保隐藏时完全隐藏（覆盖可能的样式冲突） */\n    #modal.hidden {\n        display: none !important;\n    }\n\n    #modal-title {\n        color: var(--primary)!important; /* 使用主题主色 */\n        /* 响应式调整（可选） */\n        @media (max-width: 768px) {\n            font-size: 1.25rem !important; /* 小屏幕缩小字体 */\n        }\n    }\n\n    /* 模态内容居中（保持不变） */\n    #modal > div {\n        margin: auto;\n    }\n</style>\n\n父组件\n在 src\\pages 目录下，新建一个 chronobox.astro 文件\n---\nimport { getEntry } from \"astro:content\";\nimport AnimeList from \"@/components/mine/Lists/AnimeList.astro\";\nimport MusicList from \"@/components/mine/Lists/MusicList.astro\";\nimport PhotoList from \"@/components/mine/Lists/PhotoList.astro\";\nimport I18nKey from \"@/i18n/i18nKey\";\nimport { i18n } from \"@/i18n/translation\";\nimport MainGridLayout from \"@/layouts/MainGridLayout.astro\";\n\nimport Markdown from \"@components/misc/Markdown.astro\";\nconst chronoboxPost = await getEntry(\"spec\", \"chronobox\");\nconst { Content } = await chronoboxPost.render();\n\n// 数据结构改造\nconst timelineItems = [\n\t{\n\t\ttype: \"anime\",\n\t\ttitle: \"Re:从零开始的异世界生活\",\n\t\tcover:\n\t\t\t\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/从零开始的异世界生活webp.webp\",\n\t\tdate: \"2016-04-04\",\n\t\turl: \"https://mzh.moegirl.org.cn/Re:%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%BC%82%E4%B8%96%E7%95%8C%E7%94%9F%E6%B4%BB\", // 建议替换为实际官网或播放页链接\n\t\tepisodes: \"更新至第三季下半\", // 补充具体集数信息\n\t\trating: 4.9, // 提升至合理评分区间\n\t\ttags: [\"奇幻\", \"冒险\", \"剧情\", \"成长\"], // 补充更精准标签\n\t},\n\t{\n\t\ttype: \"anime\",\n\t\ttitle: \"进击的巨人\",\n\t\tcover:\n\t\t\t\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/进击的巨人.jpg\",\n\t\tdate: \"2023-09-15\",\n\t\turl: \"https://mzh.moegirl.org.cn/%E8%BF%9B%E5%87%BB%E7%9A%84%E5%B7%A8%E4%BA%BA\",\n\t\tepisodes: 25,\n\t\trating: 4.8,\n\t\ttags: [\"热血\", \"奇幻\"],\n\t},\n\t{\n\t\ttype: \"anime\",\n\t\ttitle: \"龙与虎\",\n\t\tcover: \"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/龙与虎.webp\",\n\t\tdate: \"2008-10-01\",\n\t\turl: \"https://mzh.moegirl.org.cn/%E9%BE%99%E4%B8%8E%E8%99%8E\",\n\t\tepisodes: 25,\n\t\trating: 4.8,\n\t\ttags: [\"爱情\", \"校园\"],\n\t},\n\t{\n\t\ttype: \"anime\",\n\t\ttitle: \"间谍过家家\",\n\t\tcover:\n\t\t\t\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/间谍过家家.webp\",\n\t\tdate: \"2022-10-01\",\n\t\tdesc: \"震撼结局，自由的定义引发深思\",\n\t\turl: \"https://example.com/aot\",\n\t\tepisodes: 25,\n\t\trating: 4.8,\n\t\ttags: [\"爱情\", \"喜剧\"],\n\t},\n\t{\n\t\ttype: \"music\",\n\t\ttitle: \"爱在西元前\",\n\t\tartist: \"周杰伦\",\n\t\tcover:\n\t\t\t\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/%E4%BE%9D%E7%84%B6%E8%8C%83%E7%89%B9%E8%A5%BF.jpg\",\n\t\talbum: \"BOOTLEG\",\n\t\tdate: \"2023-08-02\",\n\t\tplatform: {\n\t\t\t// spotify: \"https://spotify.com/lemon\",\n\t\t\t// netease: \"https://music.163.com/lemon\",\n\t\t\tqqmusic:\n\t\t\t\t\"https://i.y.qq.com/v8/playsong.html?songid=97740#webchat_redirect\", // QQ音乐链接\n\t\t},\n\t},\n\t{\n\t\ttype: \"music\",\n\t\ttitle: \"一生所爱\",\n\t\tartist: \"卢冠廷/莫文蔚\",\n\t\tcover:\n\t\t\t\"https://y.qq.com/music/photo_new/T002R300x300M000001UAAKE4QJguW_3.jpg?max_age=2592000\",\n\t\talbum: \"大话西游\",\n\t\tdate: \"1995-05-01\",\n\t\tplatform: {\n\t\t\t// spotify: \"https://spotify.com/lemon\",\n\t\t\t// netease: \"https://music.163.com/lemon\",\n\t\t\tqqmusic:\n\t\t\t\t\"https://i.y.qq.com/v8/playsong.html?songid=1727258#webchat_redirect\",\n\t\t},\n\t},\n\t{\n\t\ttype: \"photo\",\n\t\ttitle: \"京都红叶\",\n\t\timage:\n\t\t\t\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/FYwAUt5aQAU07-a.jpg\",\n\t\tdate: \"2023-11-22\",\n\t\tlocation: \"清水寺\",\n\t\tcamera: \"Sony A7IV\",\n\t\ttags: [\"旅行\", \"秋天\"],\n\t},\n\t{\n\t\ttype: \"photo\",\n\t\ttitle: \"依蕾娜\",\n\t\timage: \"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/yileina.png\",\n\t\tdate: \"2023-11-22\",\n\t\tlocation: \"日本\",\n\t\tcamera: \"Sony A7IV\",\n\t\ttags: [\"动漫\", \"魔女\"],\n\t},\n];\n---\n\n<MainGridLayout title={i18n(I18nKey.chronobox)} description={i18n(I18nKey.chronobox)}>\n  <Markdown class=\"mt-8 prose max-w-none\">\n      <Content />\n  </Markdown>\n\n  <!-- 选项卡容器 -->\n  <div class=\"time-capsule-container\">\n      <div class=\"card-base z-10 px-9 py-6 relative w-full\">\n          <!-- 选项卡导航 -->\n          <div class=\"tabs-header flex gap-4 mb-8 border-b border-gray-200 dark:border-gray-700\">\n              <button\n              data-tab=\"anime\"\n              class=\"tab-button active px-4 py-2 rounded-t-lg transition-colors duration-200 font-medium relative\"\n            >\n              动漫\n              <span class=\"active-indicator absolute bottom-0 left-0 right-0 h-0.5 transition-opacity\"></span>\n            </button>\n            <button\n            data-tab=\"music\"\n            class=\"tab-button px-4 py-2 rounded-t-lg transition-colors duration-200 font-medium relative\"\n          >\n            音乐\n            <span class=\"active-indicator absolute bottom-0 left-0 right-0 h-0.5 transition-opacity\"></span>\n          </button>\n          <button\n          data-tab=\"photo\"\n          class=\"tab-button px-4 py-2 rounded-t-lg transition-colors duration-200 font-medium relative\"\n        >\n        照片\n          <span class=\"active-indicator absolute bottom-0 left-0 right-0 h-0.5 transition-opacity\"></span>\n        </button>\n          </div>\n          <div id=\"anime-content\" class=\"tab-content\">\n  <AnimeList timelineItems={timelineItems} />\n</div>\n<div id=\"music-content\" class=\"tab-content hidden\">\n  <MusicList timelineItems={timelineItems} />\n</div>\n<div id=\"photo-content\" class=\"tab-content hidden\">\n  <PhotoList timelineItems={timelineItems} />\n</div>\n      </div>\n  </div>\n\n  <!-- 选项卡交互脚本 -->\n  <script is:inline>\n(function() {\n  const tabs = document.querySelectorAll('.tab-button');\n  const contents = document.querySelectorAll('.tab-content');\n  \n  tabs.forEach(tab => {\n    tab.addEventListener('click', () => {\n      // 移除所有标签的激活状态\n      tabs.forEach(t => {\n        t.classList.remove('active');\n        t.querySelector('.active-indicator').style.opacity = '0';\n      });\n      \n      // 隐藏所有内容\n      contents.forEach(c => {\n        c.classList.add('hidden');\n      });\n      // 添加当前标签的激活状态\n      tab.classList.add('active');\n      tab.querySelector('.active-indicator').style.opacity = '1';\n      // 显示对应内容\n      const targetContentId = `${tab.dataset.tab}-content`;\n      document.getElementById(targetContentId).classList.remove('hidden');\n    });\n  });\n})();\n</script>\n\n  <style is:global>\n    /* 新增选项卡样式 */\n    .tabs-header {\n      @apply border-b border-gray-200 dark:border-gray-700;\n    }\n\n    .tab-button {\n      @apply transition-colors duration-200 text-gray-600 dark:text-gray-300;\n    }\n    \n\n    .tab-button.active {\n      color: var(--primary); /* 使用Tailwind内置颜色 */\n    }\n\n    .tab-button.active .active-indicator {\n      @apply opacity-100;\n    }\n\n    .tab-content {\n    @apply hidden;\n  }\n  \n  .tab-content:not(.hidden) {\n    display: block;\n    animation: fadeIn 0.3s ease-out;\n  }\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n        transform: translateY(10px);\n      }\n      to {\n        opacity: 1;\n        transform: translateY(0);\n      }\n    }\n\n    \n\n    /* 电脑端额外优化（新增） */\n    @media (min-width: 1024px) {\n      .grid-cols-3 > * {\n        width: calc((100% - 1.5rem) / 3); /* 精确计算列宽，避免间隙影响 */\n      }\n      .anime-card {\n        min-height: 500px; /* 增大桌面端最小高度，匹配比例 */\n      }\n    }\n\n    /* 信息层动画（使用标准CSS过渡） */\n    .anime-card .info-overlay {\n      height: 0;\n      overflow: hidden;\n      transition: height 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n    }\n\n    .anime-card:hover .info-overlay {\n      height: 100px; /* 自定义合适高度 */\n    }\n\n    @media (max-width: 1023px) {\n      .anime-card,\n      .music-card {\n        min-width: calc(50% - 1rem); /* 双列宽度计算（配合gap-6） */\n      }\n    }\n\n    /* 响应式调整 */\n    @media (max-width: 767px) {\n      .time-capsule-container {\n        padding: 0 4px;\n      }\n      .anime-card {\n        min-height: 200px; /* 移动端最小高度 */\n      }\n    }\n\n    @media (min-width: 768px) {\n      .anime-card {\n        min-height: 350px; /* 平板端最小高度 */\n      }\n    }\n\n    /* 移除调试边框 */\n    .grid,\n    .capsule-card {\n      border: none;\n    }\n    \n  </style>\n</MainGridLayout>",
      "content": "自己写了一个页面，可以记录动漫、音乐、照片等",
      "contentSnippet": "自己写了一个页面，可以记录动漫、音乐、照片等",
      "guid": "https://www.blueke.top/posts/%E5%9C%A8astro%E6%96%B0%E5%A2%9E%E4%B8%80%E4%B8%AA%E6%97%B6%E9%97%B4%E7%9B%92%E5%AD%90%E9%A1%B5%E9%9D%A2/",
      "categories": [
        "大杂烩"
      ],
      "isoDate": "2025-04-29T17:41:00.000Z"
    },
    {
      "title": "Astro常用书写格式记录",
      "link": "https://www.blueke.top/posts/astro%E5%B8%B8%E7%94%A8%E4%B9%A6%E5%86%99%E6%A0%BC%E5%BC%8F%E8%AE%B0%E5%BD%95/",
      "pubDate": "Wed, 23 Apr 2025 00:47:00 GMT",
      "content:encoded": "<h2>标注</h2>\n<p>一个合适的标注可以吸引读者注意，给予更好的阅读体验</p>\n<p>由于笔者本身使用 Obsidian 进行本地书写，所以这里的标注有点五花八门的意思，先直接上写法吧</p>\n<p>Astro 主题支持两种写法，推荐第一种</p>\n<h3>写法一</h3>\n<pre><code>:::NOTE\n强调用户在浏览时应考虑的信息。\n:::\n\n:::TIP\n可选信息，可帮助用户更成功。\n:::\n\n:::IMPORTANT\n用户成功所必需的关键信息。\n:::\n\n:::WARNING\n由于潜在风险，需要用户立即注意的关键内容。\n:::\n\n:::CAUTION\n行动的负面潜在后果。\n:::\n</code></pre>\n<p><strong>示例：</strong>\n:::NOTE\n强调用户在浏览时应考虑的信息。\n:::</p>\n<p>:::TIP\n可选信息，可帮助用户更成功。\n:::</p>\n<p>:::IMPORTANT\n用户成功所必需的关键信息。\n:::</p>\n<p>:::WARNING\n由于潜在风险，需要用户立即注意的关键内容。\n:::</p>\n<p>:::CAUTION\n行动的负面潜在后果。\n:::</p>\n<h4>自定义标题</h4>\n<p>在标注类型后面的方括号中指定旁白的自定义标题，例如 <code>:::NOTE[你知道吗？]</code>。</p>\n<p>:::NOTE[你知道吗]\n我喜欢橘子\n:::</p>\n<hr />\n<h3>写法二</h3>\n<p>这是部分 markdown 支持的格式，但是 astro 我实际测试不支持 <code>CAUTION</code> 的标注，也不支持自定义标题</p>\n<pre><code>&gt; [!NOTE]  \n&gt; 强调用户在浏览时应考虑的信息。\n\n&gt; [!TIP]\n&gt; 可选信息，可帮助用户更成功。\n\n&gt; [!IMPORTANT]  \n&gt; 用户成功所必需的关键信息。\n\n&gt; [!WARNING]  \n&gt; 由于潜在风险，需要用户立即注意的关键内容。\n\n&gt; [!CAUTION]\n&gt; 行动的负面潜在后果。\n</code></pre>\n<p><strong>示例</strong></p>\n<blockquote>\n<p>[!NOTE]<br />\n强调用户在浏览时应考虑的信息。</p>\n</blockquote>\n<blockquote>\n<p>[!TIP]\n可选信息，可帮助用户更成功。</p>\n</blockquote>\n<blockquote>\n<p>[!IMPORTANT]<br />\n用户成功所必需的关键信息。</p>\n</blockquote>\n<blockquote>\n<p>[!WARNING]<br />\n由于潜在风险，需要用户立即注意的关键内容。</p>\n</blockquote>\n<blockquote>\n<p>[!CAUTION]\n行动的负面潜在后果。</p>\n</blockquote>\n<hr />\n<h3>探索 Obsidian</h3>\n<blockquote>\n<p>[!TIP]\n如果你没有使用 Obsidian，可以跳过本节</p>\n</blockquote>\n<p>经过网上资料(<a href=\"https://help.obsidian.md/callouts\">标注 - Obsidian帮助</a>)查找，Obsidian 本身貌似支持了很多 callout 的写法，大概如下</p>\n<ul>\n<li>note</li>\n<li>abstract, summary, tldr</li>\n<li>info, todo</li>\n<li>tip, hint, important</li>\n<li>success, check, done</li>\n<li>question, help, faq</li>\n<li>warning, caution, attention</li>\n<li>failure, fail, missing</li>\n<li>danger, error</li>\n<li>bug</li>\n<li>example</li>\n<li>quote, cite</li>\n</ul>\n<h4>标题</h4>\n<p>直接在后面添加即可，示例如下</p>\n<blockquote>\n<p>[!TIP] 这是一个标题\ntest</p>\n</blockquote>\n<h4>折叠</h4>\n<p>可以使用 <code>+</code> 默认展开或者 <code>-</code> 默认折叠正文部分。</p>\n<pre><code>&gt; [!FAQ]- Are callouts foldable?\n&gt; Yes! In a foldable callout, the contents are hidden until it is expanded.\n</code></pre>\n<hr />\n<h2>代码块</h2>\n<p>通过安装 <a href=\"https://expressive-code.com/installation/#astro\">Expressive Cod</a> 增强 Astro 的代码块\n折叠</p>\n<h2>html 实现</h2>\n<h3>选项卡</h3>\n<pre><code>&lt;!-- 将此代码块直接粘贴到你的Markdown文件中 --&gt;\n&lt;div class=\"md-tabs\"&gt;\n  &lt;div class=\"md-tab-labels\"&gt;\n    &lt;button class=\"md-tab-label active\" data-tab=\"tab1\"&gt;Tab1&lt;/button&gt;\n    &lt;button class=\"md-tab-label\" data-tab=\"tab2\"&gt;Tab2&lt;/button&gt;\n    &lt;button class=\"md-tab-label\" data-tab=\"tab3\"&gt;Tab3&lt;/button&gt;\n    &lt;!-- 添加更多标签只需复制button行 --&gt;\n  &lt;/div&gt;\n  &lt;div class=\"md-tab-contents\"&gt;\n    &lt;div id=\"tab1\" class=\"md-tab-content active\"&gt;\n      **这里是Tab1的内容**  \n      支持Markdown语法：\n      - 列表项\n      - `代码高亮`\n      ```python\n      print(\"Hello Tabs!\")\n      ```\n    &lt;/div&gt;\n    &lt;div id=\"tab2\" class=\"md-tab-content\"&gt;\n      ## Tab2标题  \n      表格示例：\n      | 名称 | 值 |\n      |---|---|\n      | A | 1 |\n    &lt;/div&gt;\n    &lt;div id=\"tab3\" class=\"md-tab-content\"&gt;\n      &gt; 引用块也能正常显示  \n      图片示例：  \n      ![示例](https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/E8uWFJnVcAIMcOB.jpg)\n    &lt;/div&gt;\n    &lt;!-- 添加更多内容需保持id与data-tab对应 --&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;style&gt;\n.md-tabs {\n  margin: 1em 0;\n  border: 1px solid #e1e4e8;\n  border-radius: 6px;\n}\n.md-tab-labels {\n  display: flex;\n  background: #f6f8fa;\n  border-bottom: 1px solid #e1e4e8;\n}\n.md-tab-label {\n  padding: 8px 16px;\n  background: none;\n  border: none;\n  border-bottom: 2px solid transparent;\n  cursor: pointer;\n  font-family: inherit;\n}\n.md-tab-label.active {\n  border-bottom-color: #f9826c;\n  font-weight: 600;\n}\n.md-tab-content {\n  display: none;\n  padding: 16px;\n}\n.md-tab-content.active {\n  display: block;\n}\n&lt;/style&gt;\n\n&lt;script&gt;\ndocument.querySelectorAll('.md-tab-label').forEach(label =&gt; {\n  label.addEventListener('click', () =&gt; {\n    document.querySelectorAll('.md-tab-label, .md-tab-content').forEach(el =&gt; {\n      el.classList.remove('active');\n    });\n    label.classList.add('active');\n    document.getElementById(label.dataset.tab).classList.add('active');\n  });\n});\n&lt;/script&gt;\n</code></pre>\n<p><strong>效果</strong></p>\n<p>&lt;!-- 将此代码块直接粘贴到你的Markdown文件中 --&gt;\n&lt;div class=\"md-tabs\"&gt;\n&lt;div class=\"md-tab-labels\"&gt;\n&lt;button class=\"md-tab-label active\" data-tab=\"tab1\"&gt;Tab1&lt;/button&gt;\n&lt;button class=\"md-tab-label\" data-tab=\"tab2\"&gt;Tab2&lt;/button&gt;\n&lt;button class=\"md-tab-label\" data-tab=\"tab3\"&gt;Tab3&lt;/button&gt;\n&lt;!-- 添加更多标签只需复制button行 --&gt;\n&lt;/div&gt;\n&lt;div class=\"md-tab-contents\"&gt;\n&lt;div id=\"tab1\" class=\"md-tab-content active\"&gt;\n<strong>这里是Tab1的内容</strong>\n支持Markdown语法：</p>\n<ul>\n<li>列表项</li>\n<li><code>代码高亮</code></li>\n</ul>\n<pre><code>print(\"Hello Tabs!\")\n</code></pre>\n<p>&lt;/div&gt;\n&lt;div id=\"tab2\" class=\"md-tab-content\"&gt;</p>\n<h2>Tab2标题</h2>\n<p>表格示例：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>1</td>\n</tr>\n<tr>\n<td>&lt;/div&gt;</td>\n<td></td>\n</tr>\n<tr>\n<td>&lt;div id=\"tab3\" class=\"md-tab-content\"&gt;</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>引用块也能正常显示\n图片示例：\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/E8uWFJnVcAIMcOB.jpg\" alt=\"示例\" />\n&lt;/div&gt;\n&lt;!-- 添加更多内容需保持id与data-tab对应 --&gt;\n&lt;/div&gt;\n&lt;/div&gt;</p>\n</blockquote>\n<p>&lt;style&gt;\n.md-tabs {\nmargin: 1em 0;\nborder: 1px solid #e1e4e8;\nborder-radius: 6px;\n}\n.md-tab-labels {\ndisplay: flex;\nbackground: #f6f8fa;\nborder-bottom: 1px solid #e1e4e8;\n}\n.md-tab-label {\npadding: 8px 16px;\nbackground: none;\nborder: none;\nborder-bottom: 2px solid transparent;\ncursor: pointer;\nfont-family: inherit;\n}\n.md-tab-label.active {\nborder-bottom-color: #f9826c;\nfont-weight: 600;\n}\n.md-tab-content {\ndisplay: none;\npadding: 16px;\n}\n.md-tab-content.active {\ndisplay: block;\n}\n&lt;/style&gt;</p>\n<p>&lt;script&gt;\ndocument.querySelectorAll('.md-tab-label').forEach(label =&gt; {\nlabel.addEventListener('click', () =&gt; {\ndocument.querySelectorAll('.md-tab-label, .md-tab-content').forEach(el =&gt; {\nel.classList.remove('active');\n});\nlabel.classList.add('active');\ndocument.getElementById(label.dataset.tab).classList.add('active');\n});\n});\n&lt;/script&gt;</p>\n<p>备选二</p>\n<pre><code>&lt;div class=\"tab-container\"&gt; &lt;!-- 添加container类 --&gt;\n  &lt;input type=\"radio\" id=\"tab1\" name=\"tabs\" checked&gt;\n  &lt;label for=\"tab1\"&gt;选项卡 1&lt;/label&gt;\n\n  &lt;input type=\"radio\" id=\"tab2\" name=\"tabs\"&gt;\n  &lt;label for=\"tab2\"&gt;选项卡 2&lt;/label&gt;\n\n  &lt;input type=\"radio\" id=\"tab3\" name=\"tabs\"&gt;\n  &lt;label for=\"tab3\"&gt;选项卡 3&lt;/label&gt;\n\n   &lt;input type=\"radio\" id=\"4\" name=\"tabs\"&gt;\n  &lt;label for=\"4\"&gt;选项卡 4&lt;/label&gt;\n  &lt;!-- 内容区域必须放在所有radio之后 --&gt;\n  &lt;div class=\"tab-content\" data-tab=\"tab1\"&gt;\n &lt;p&gt;这是选项卡 1 的内容。&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;div class=\"tab-content\" data-tab=\"tab2\"&gt;\n &lt;p&gt;这是选项卡 2 的内容。&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;div class=\"tab-content\" data-tab=\"tab3\"&gt;\n &lt;p&gt;这是选项卡 3 的内容。&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;div class=\"tab-content\" data-tab=\"tab4\"&gt;\n &lt;p&gt;这是选项卡 4 的内容。&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;style&gt;\n    /* 基础样式保持不变 */\n    input[type=\"radio\"] {\n  display: none;\n    }\n    /* 灰色配色 */\n    /* label {\n  display: inline-block;\n  padding: 12px 24px;\n  background: #e9e9e9;\n  cursor: pointer;\n  border-radius: 8px 8px 0 0;\n  transition: background 0.3s;\n    }\n\n    input[type=\"radio\"]:checked + label {\n  background: #f3f3f3;\n  box-shadow: 0 -2px 4px rgba(0,0,0,0.1);\n    }\n\n    .tab-content {\n  display: none;\n  padding: 20px;\n  background: #f3f3f3;\n  border-radius: 0 8px 8px 8px;\n    } */\n\n  /* 柔和渐变 */\n  /* 柔白 */\n  /*\n  label {\n    display: inline-block;\n    padding: 12px 24px;\n    margin-right: 8px;  \n    background: #f7f7f7;\n    color: #484848;\n    border-radius: 8px 8px 0 0;\n    border: 1px solid #ebebeb;\n    border-bottom: none;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    font-size: 15px;\n  }\n\n  label:hover {\n    background: #f0f0f0;\n  }\n\n  input[type=\"radio\"]:checked + label {\n    background: white;\n    color: #ff5a5f;\n    box-shadow: 0 -3px 0 #ff5a5f inset;\n    border-color: #ddd;\n    font-weight: 500;\n  }\n\n  .tab-content {\n    padding: 24px;\n    background: white;\n    border: 1px solid #ebebeb;\n    border-top: none;\n    border-radius: 0 0 8px 8px;\n    margin-top: -1px;\n  }\n  */\n  /* 浅蓝 */\n  /* label {\n    padding: 12px 24px;\n    margin-right: 6px;\n    background: #f5f8ff;\n    color: #4a6baf;\n    border-radius: 8px 8px 0 0;\n    transition: all 0.2s;\n  }\n\n  input[type=\"radio\"]:checked + label {\n    background: white;\n    color: #1a56db;\n    box-shadow: 0 0 0 1px #e0e7ff,\n    0 2px 4px rgba(0,0,0,0.05);\n  }\n\n  .tab-content {\n    padding: 24px;\n    background: white;\n    border-radius: 0 8px 8px 8px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n  } */\n\n  /*浅色Material You*/\n  label {\n    padding: 12px 24px;\n    margin-right: 4px;\n    background: #f3edf7;\n    color: #49454f;\n    border-radius: 16px 16px 0 0;\n    font-family: 'Roboto', sans-serif;\n    transition: all 0.2s;\n  }\n\n  input[type=\"radio\"]:checked + label {\n    background: #e8def8;\n    color: #6750a4;\n    box-shadow: 0 -2px 0 #6750a4 inset;\n  }\n\n  .tab-content {\n    padding: 24px;\n    background: #f3edf7;\n    border-radius: 0 0 16px 16px;\n    margin-top: 4px;\n  }\n\n    .tab-container input[type=\"radio\"]:checked ~ .tab-content {\n  display: none;\n    }\n\n    #tab1:checked ~ [data-tab=\"tab1\"],\n    #tab2:checked ~ [data-tab=\"tab2\"],\n    #tab3:checked ~ [data-tab=\"tab3\"] {\n  display: block;\n  animation: fadeIn 0.3s;\n    }\n\n    @keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n    }\n  &lt;/style&gt;\n\n</code></pre>\n<p>示例</p>\n<p>不知道为啥，上面会影响下面这个选项卡，无法点击切换\n&lt;div class=\"tab-container\"&gt;\n&lt;input type=\"radio\" id=\"tab1\" name=\"tabs\" checked&gt;\n&lt;label for=\"tab1\"&gt;选项卡 1&lt;/label&gt;\n&lt;input type=\"radio\" id=\"tab2\" name=\"tabs\"&gt;\n&lt;label for=\"tab2\"&gt;选项卡 2&lt;/label&gt;\n&lt;input type=\"radio\" id=\"tab3\" name=\"tabs\"&gt;\n&lt;label for=\"tab3\"&gt;选项卡 3&lt;/label&gt;\n&lt;input type=\"radio\" id=\"tab4\" name=\"tabs\"&gt;\n&lt;label for=\"tab4\"&gt;选项卡 4&lt;/label&gt;\n&lt;div class=\"tab-content\" data-tab=\"tab1\"&gt;\n&lt;p&gt;这是选项卡 1 的内容。&lt;/p&gt;\n&lt;/div&gt;\n&lt;div class=\"tab-content\" data-tab=\"tab2\"&gt;\n&lt;p&gt;这是选项卡 2 的内容。&lt;/p&gt;\n&lt;/div&gt;\n&lt;div class=\"tab-content\" data-tab=\"tab3\"&gt;\n&lt;p&gt;这是选项卡 3 的内容。&lt;/p&gt;\n&lt;/div&gt;\n&lt;div class=\"tab-content\" data-tab=\"tab4\"&gt;\n&lt;p&gt; <img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/E8uWFJnVcAIMcOB.jpg\" alt=\"示例\" />&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;style&gt;\ninput[type=\"radio\"] {\ndisplay: none;\n}\nlabel {\ndisplay: inline-block;\npadding: 12px 24px;\nmargin-right: 8px;\nbackground: #f7f7f7;\ncolor: #484848;\nborder-radius: 8px 8px 0 0;\nborder: 1px solid #ebebeb;\nborder-bottom: none;\ncursor: pointer;\ntransition: all 0.2s ease;\nfont-size: 15px;\n}\nlabel:hover {\nbackground: #f0f0f0;\n}\ninput[type=\"radio\"]:checked + label {\nbackground: white;\ncolor: #ff5a5f;\nbox-shadow: 0 -3px 0 #ff5a5f inset;\nborder-color: #ddd;\nfont-weight: 500;\n}\n.tab-content {\ndisplay: none;\npadding: 24px;\nbackground: #f3edf7;\nborder-radius: 0 0 16px 16px;\nmargin-top: 4px;\n}\n.tab-container input[type=\"radio\"]:checked ~ .tab-content {\ndisplay: none;\n}\n#tab1:checked ~ [data-tab=\"tab1\"],\n#tab2:checked ~ [data-tab=\"tab2\"],\n#tab3:checked ~ [data-tab=\"tab3\"],\n#tab4:checked ~ [data-tab=\"tab4\"] {\ndisplay: block;\nanimation: fadeIn 0.3s;\n}\n@keyframes fadeIn {\nfrom {\nopacity: 0;\n}\nto {\nopacity: 1;\n}\n}\n&lt;/style&gt;</p>\n<h3>分栏</h3>\n<pre><code>&lt;!-- 分栏 --&gt;\n&lt;!-- &lt;div style=\"display: flex; justify-content: space-between;\"&gt;\n\n&lt;div style=\"width: 48%;\"&gt;\n\n  &lt;/div&gt;\n&lt;div style=\"width: 48%;\"&gt;\n\n&lt;/div&gt;\n&lt;/div&gt; --&gt;\n</code></pre>\n",
      "content:encodedSnippet": "标注\n一个合适的标注可以吸引读者注意，给予更好的阅读体验\n由于笔者本身使用 Obsidian 进行本地书写，所以这里的标注有点五花八门的意思，先直接上写法吧\nAstro 主题支持两种写法，推荐第一种\n写法一\n:::NOTE\n强调用户在浏览时应考虑的信息。\n:::\n\n:::TIP\n可选信息，可帮助用户更成功。\n:::\n\n:::IMPORTANT\n用户成功所必需的关键信息。\n:::\n\n:::WARNING\n由于潜在风险，需要用户立即注意的关键内容。\n:::\n\n:::CAUTION\n行动的负面潜在后果。\n:::\n\n示例：\n:::NOTE\n强调用户在浏览时应考虑的信息。\n:::\n:::TIP\n可选信息，可帮助用户更成功。\n:::\n:::IMPORTANT\n用户成功所必需的关键信息。\n:::\n:::WARNING\n由于潜在风险，需要用户立即注意的关键内容。\n:::\n:::CAUTION\n行动的负面潜在后果。\n:::\n自定义标题\n在标注类型后面的方括号中指定旁白的自定义标题，例如 :::NOTE[你知道吗？]。\n:::NOTE[你知道吗]\n我喜欢橘子\n:::\n写法二\n这是部分 markdown 支持的格式，但是 astro 我实际测试不支持 CAUTION 的标注，也不支持自定义标题\n> [!NOTE]  \n> 强调用户在浏览时应考虑的信息。\n\n> [!TIP]\n> 可选信息，可帮助用户更成功。\n\n> [!IMPORTANT]  \n> 用户成功所必需的关键信息。\n\n> [!WARNING]  \n> 由于潜在风险，需要用户立即注意的关键内容。\n\n> [!CAUTION]\n> 行动的负面潜在后果。\n\n示例\n[!NOTE]\n[!TIP]\n可选信息，可帮助用户更成功。\n[!IMPORTANT]\n[!WARNING]\n[!CAUTION]\n行动的负面潜在后果。\n探索 Obsidian\n[!TIP]\n如果你没有使用 Obsidian，可以跳过本节\n经过网上资料(标注 - Obsidian帮助)查找，Obsidian 本身貌似支持了很多 callout 的写法，大概如下\nnote\nabstract, summary, tldr\ninfo, todo\ntip, hint, important\nsuccess, check, done\nquestion, help, faq\nwarning, caution, attention\nfailure, fail, missing\ndanger, error\nbug\nexample\nquote, cite\n标题\n直接在后面添加即可，示例如下\n[!TIP] 这是一个标题\ntest\n折叠\n可以使用 + 默认展开或者 - 默认折叠正文部分。\n> [!FAQ]- Are callouts foldable?\n> Yes! In a foldable callout, the contents are hidden until it is expanded.\n\n代码块\n通过安装 Expressive Cod 增强 Astro 的代码块\n折叠\nhtml 实现\n选项卡\n<!-- 将此代码块直接粘贴到你的Markdown文件中 -->\n<div class=\"md-tabs\">\n  <div class=\"md-tab-labels\">\n    <button class=\"md-tab-label active\" data-tab=\"tab1\">Tab1</button>\n    <button class=\"md-tab-label\" data-tab=\"tab2\">Tab2</button>\n    <button class=\"md-tab-label\" data-tab=\"tab3\">Tab3</button>\n    <!-- 添加更多标签只需复制button行 -->\n  </div>\n  <div class=\"md-tab-contents\">\n    <div id=\"tab1\" class=\"md-tab-content active\">\n      **这里是Tab1的内容**  \n      支持Markdown语法：\n      - 列表项\n      - `代码高亮`\n      ```python\n      print(\"Hello Tabs!\")\n      ```\n    </div>\n    <div id=\"tab2\" class=\"md-tab-content\">\n      ## Tab2标题  \n      表格示例：\n      | 名称 | 值 |\n      |---|---|\n      | A | 1 |\n    </div>\n    <div id=\"tab3\" class=\"md-tab-content\">\n      > 引用块也能正常显示  \n      图片示例：  \n      ![示例](https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/E8uWFJnVcAIMcOB.jpg)\n    </div>\n    <!-- 添加更多内容需保持id与data-tab对应 -->\n  </div>\n</div>\n\n<style>\n.md-tabs {\n  margin: 1em 0;\n  border: 1px solid #e1e4e8;\n  border-radius: 6px;\n}\n.md-tab-labels {\n  display: flex;\n  background: #f6f8fa;\n  border-bottom: 1px solid #e1e4e8;\n}\n.md-tab-label {\n  padding: 8px 16px;\n  background: none;\n  border: none;\n  border-bottom: 2px solid transparent;\n  cursor: pointer;\n  font-family: inherit;\n}\n.md-tab-label.active {\n  border-bottom-color: #f9826c;\n  font-weight: 600;\n}\n.md-tab-content {\n  display: none;\n  padding: 16px;\n}\n.md-tab-content.active {\n  display: block;\n}\n</style>\n\n<script>\ndocument.querySelectorAll('.md-tab-label').forEach(label => {\n  label.addEventListener('click', () => {\n    document.querySelectorAll('.md-tab-label, .md-tab-content').forEach(el => {\n      el.classList.remove('active');\n    });\n    label.classList.add('active');\n    document.getElementById(label.dataset.tab).classList.add('active');\n  });\n});\n</script>\n\n效果\n<!-- 将此代码块直接粘贴到你的Markdown文件中 -->\n<div class=\"md-tabs\">\n<div class=\"md-tab-labels\">\n<button class=\"md-tab-label active\" data-tab=\"tab1\">Tab1</button>\n<button class=\"md-tab-label\" data-tab=\"tab2\">Tab2</button>\n<button class=\"md-tab-label\" data-tab=\"tab3\">Tab3</button>\n<!-- 添加更多标签只需复制button行 -->\n</div>\n<div class=\"md-tab-contents\">\n<div id=\"tab1\" class=\"md-tab-content active\">\n这里是Tab1的内容\n支持Markdown语法：\n列表项\n代码高亮\nprint(\"Hello Tabs!\")\n\n</div>\n<div id=\"tab2\" class=\"md-tab-content\">\nTab2标题\n表格示例：\n名称\n值\n\n\n\n\nA\n1\n\n\n</div>\n\n\n\n<div id=\"tab3\" class=\"md-tab-content\">\n\n\n\n\n\n引用块也能正常显示\n图片示例：\n\n</div>\n<!-- 添加更多内容需保持id与data-tab对应 -->\n</div>\n</div>\n<style>\n.md-tabs {\nmargin: 1em 0;\nborder: 1px solid #e1e4e8;\nborder-radius: 6px;\n}\n.md-tab-labels {\ndisplay: flex;\nbackground: #f6f8fa;\nborder-bottom: 1px solid #e1e4e8;\n}\n.md-tab-label {\npadding: 8px 16px;\nbackground: none;\nborder: none;\nborder-bottom: 2px solid transparent;\ncursor: pointer;\nfont-family: inherit;\n}\n.md-tab-label.active {\nborder-bottom-color: #f9826c;\nfont-weight: 600;\n}\n.md-tab-content {\ndisplay: none;\npadding: 16px;\n}\n.md-tab-content.active {\ndisplay: block;\n}\n</style>\n<script>\ndocument.querySelectorAll('.md-tab-label').forEach(label => {\nlabel.addEventListener('click', () => {\ndocument.querySelectorAll('.md-tab-label, .md-tab-content').forEach(el => {\nel.classList.remove('active');\n});\nlabel.classList.add('active');\ndocument.getElementById(label.dataset.tab).classList.add('active');\n});\n});\n</script>\n备选二\n<div class=\"tab-container\"> <!-- 添加container类 -->\n  <input type=\"radio\" id=\"tab1\" name=\"tabs\" checked>\n  <label for=\"tab1\">选项卡 1</label>\n\n  <input type=\"radio\" id=\"tab2\" name=\"tabs\">\n  <label for=\"tab2\">选项卡 2</label>\n\n  <input type=\"radio\" id=\"tab3\" name=\"tabs\">\n  <label for=\"tab3\">选项卡 3</label>\n\n   <input type=\"radio\" id=\"4\" name=\"tabs\">\n  <label for=\"4\">选项卡 4</label>\n  <!-- 内容区域必须放在所有radio之后 -->\n  <div class=\"tab-content\" data-tab=\"tab1\">\n <p>这是选项卡 1 的内容。</p>\n  </div>\n\n  <div class=\"tab-content\" data-tab=\"tab2\">\n <p>这是选项卡 2 的内容。</p>\n  </div>\n\n  <div class=\"tab-content\" data-tab=\"tab3\">\n <p>这是选项卡 3 的内容。</p>\n  </div>\n\n  <div class=\"tab-content\" data-tab=\"tab4\">\n <p>这是选项卡 4 的内容。</p>\n  </div>\n  </div>\n  <style>\n    /* 基础样式保持不变 */\n    input[type=\"radio\"] {\n  display: none;\n    }\n    /* 灰色配色 */\n    /* label {\n  display: inline-block;\n  padding: 12px 24px;\n  background: #e9e9e9;\n  cursor: pointer;\n  border-radius: 8px 8px 0 0;\n  transition: background 0.3s;\n    }\n\n    input[type=\"radio\"]:checked + label {\n  background: #f3f3f3;\n  box-shadow: 0 -2px 4px rgba(0,0,0,0.1);\n    }\n\n    .tab-content {\n  display: none;\n  padding: 20px;\n  background: #f3f3f3;\n  border-radius: 0 8px 8px 8px;\n    } */\n\n  /* 柔和渐变 */\n  /* 柔白 */\n  /*\n  label {\n    display: inline-block;\n    padding: 12px 24px;\n    margin-right: 8px;  \n    background: #f7f7f7;\n    color: #484848;\n    border-radius: 8px 8px 0 0;\n    border: 1px solid #ebebeb;\n    border-bottom: none;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    font-size: 15px;\n  }\n\n  label:hover {\n    background: #f0f0f0;\n  }\n\n  input[type=\"radio\"]:checked + label {\n    background: white;\n    color: #ff5a5f;\n    box-shadow: 0 -3px 0 #ff5a5f inset;\n    border-color: #ddd;\n    font-weight: 500;\n  }\n\n  .tab-content {\n    padding: 24px;\n    background: white;\n    border: 1px solid #ebebeb;\n    border-top: none;\n    border-radius: 0 0 8px 8px;\n    margin-top: -1px;\n  }\n  */\n  /* 浅蓝 */\n  /* label {\n    padding: 12px 24px;\n    margin-right: 6px;\n    background: #f5f8ff;\n    color: #4a6baf;\n    border-radius: 8px 8px 0 0;\n    transition: all 0.2s;\n  }\n\n  input[type=\"radio\"]:checked + label {\n    background: white;\n    color: #1a56db;\n    box-shadow: 0 0 0 1px #e0e7ff,\n    0 2px 4px rgba(0,0,0,0.05);\n  }\n\n  .tab-content {\n    padding: 24px;\n    background: white;\n    border-radius: 0 8px 8px 8px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n  } */\n\n  /*浅色Material You*/\n  label {\n    padding: 12px 24px;\n    margin-right: 4px;\n    background: #f3edf7;\n    color: #49454f;\n    border-radius: 16px 16px 0 0;\n    font-family: 'Roboto', sans-serif;\n    transition: all 0.2s;\n  }\n\n  input[type=\"radio\"]:checked + label {\n    background: #e8def8;\n    color: #6750a4;\n    box-shadow: 0 -2px 0 #6750a4 inset;\n  }\n\n  .tab-content {\n    padding: 24px;\n    background: #f3edf7;\n    border-radius: 0 0 16px 16px;\n    margin-top: 4px;\n  }\n\n    .tab-container input[type=\"radio\"]:checked ~ .tab-content {\n  display: none;\n    }\n\n    #tab1:checked ~ [data-tab=\"tab1\"],\n    #tab2:checked ~ [data-tab=\"tab2\"],\n    #tab3:checked ~ [data-tab=\"tab3\"] {\n  display: block;\n  animation: fadeIn 0.3s;\n    }\n\n    @keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n    }\n  </style>\n\n\n示例\n不知道为啥，上面会影响下面这个选项卡，无法点击切换\n<div class=\"tab-container\">\n<input type=\"radio\" id=\"tab1\" name=\"tabs\" checked>\n<label for=\"tab1\">选项卡 1</label>\n<input type=\"radio\" id=\"tab2\" name=\"tabs\">\n<label for=\"tab2\">选项卡 2</label>\n<input type=\"radio\" id=\"tab3\" name=\"tabs\">\n<label for=\"tab3\">选项卡 3</label>\n<input type=\"radio\" id=\"tab4\" name=\"tabs\">\n<label for=\"tab4\">选项卡 4</label>\n<div class=\"tab-content\" data-tab=\"tab1\">\n<p>这是选项卡 1 的内容。</p>\n</div>\n<div class=\"tab-content\" data-tab=\"tab2\">\n<p>这是选项卡 2 的内容。</p>\n</div>\n<div class=\"tab-content\" data-tab=\"tab3\">\n<p>这是选项卡 3 的内容。</p>\n</div>\n<div class=\"tab-content\" data-tab=\"tab4\">\n<p> </p>\n</div>\n</div>\n<style>\ninput[type=\"radio\"] {\ndisplay: none;\n}\nlabel {\ndisplay: inline-block;\npadding: 12px 24px;\nmargin-right: 8px;\nbackground: #f7f7f7;\ncolor: #484848;\nborder-radius: 8px 8px 0 0;\nborder: 1px solid #ebebeb;\nborder-bottom: none;\ncursor: pointer;\ntransition: all 0.2s ease;\nfont-size: 15px;\n}\nlabel:hover {\nbackground: #f0f0f0;\n}\ninput[type=\"radio\"]:checked + label {\nbackground: white;\ncolor: #ff5a5f;\nbox-shadow: 0 -3px 0 #ff5a5f inset;\nborder-color: #ddd;\nfont-weight: 500;\n}\n.tab-content {\ndisplay: none;\npadding: 24px;\nbackground: #f3edf7;\nborder-radius: 0 0 16px 16px;\nmargin-top: 4px;\n}\n.tab-container input[type=\"radio\"]:checked ~ .tab-content {\ndisplay: none;\n}\n#tab1:checked ~ [data-tab=\"tab1\"],\n#tab2:checked ~ [data-tab=\"tab2\"],\n#tab3:checked ~ [data-tab=\"tab3\"],\n#tab4:checked ~ [data-tab=\"tab4\"] {\ndisplay: block;\nanimation: fadeIn 0.3s;\n}\n@keyframes fadeIn {\nfrom {\nopacity: 0;\n}\nto {\nopacity: 1;\n}\n}\n</style>\n分栏\n<!-- 分栏 -->\n<!-- <div style=\"display: flex; justify-content: space-between;\">\n\n<div style=\"width: 48%;\">\n\n  </div>\n<div style=\"width: 48%;\">\n\n</div>\n</div> -->",
      "content": "简单记录一下个人书写博客常用的各种小技巧",
      "contentSnippet": "简单记录一下个人书写博客常用的各种小技巧",
      "guid": "https://www.blueke.top/posts/astro%E5%B8%B8%E7%94%A8%E4%B9%A6%E5%86%99%E6%A0%BC%E5%BC%8F%E8%AE%B0%E5%BD%95/",
      "categories": [
        "笔记",
        "博客"
      ],
      "isoDate": "2025-04-23T00:47:00.000Z"
    },
    {
      "title": "【吐槽】谁终将声震山谷，必将长久深自缄默",
      "link": "https://www.blueke.top/posts/%E5%90%90%E6%A7%BD%E8%B0%81%E7%BB%88%E5%B0%86%E5%A3%B0%E9%9C%87%E5%B1%B1%E8%B0%B7%E5%BF%85%E5%B0%86%E9%95%BF%E4%B9%85%E6%B7%B1%E8%87%AA%E7%BC%84%E9%BB%98/",
      "pubDate": "Wed, 16 Apr 2025 16:14:00 GMT",
      "content:encoded": "<p>不知道各位对近日网上很火的山西大同订婚案是否有所关注？二审结果依旧维持了原判，男方以强奸罪被判处有期徒刑三年，结果一出，有人觉得理所当然，有人觉得嗤之以鼻，但无论怎么样，这起案件带来的社会影响应该是深远的。</p>\n<p>对我来说，以目前官方给出的证据来看，不足以令我信服。在新华网给出的完整案件梳理中，给出了以下证据：</p>\n<ol>\n<li>女方母亲与男方的通话录音</li>\n<li>被害人和被害人母亲的口供</li>\n<li>警方电话录音</li>\n<li>行车记录仪中女方母亲与男方的录音</li>\n<li>人身检测：女方手腕等处有淤青</li>\n<li>窗帘有被点燃的痕迹</li>\n<li>电梯监控显示受害后，被害人被男方拖拽</li>\n<li>床单检测出男方精斑，两人混合 dna 分型</li>\n</ol>\n<p>PS：其中女方处女膜完整，内裤没有男方 dna，这几个点没有在记录中，这两点未在官方通报中提及，是否刻意回避或者春秋笔法，不得而知</p>\n<p>为什么我要说保留怀疑态度呢\n判断强奸案的核心在于：</p>\n<ul>\n<li>受害者的主观意愿（是否明确拒绝）</li>\n<li>加害者的行为手段（是否胁迫、暴力等）</li>\n<li>证据支持（能否证明违背意愿）</li>\n</ul>\n<p>而问题就出现在了这个证据支持方面，受害者的主观意愿实在难以难辨，不然网上也不会出现“第一下同意不等于第二项同意”的说法了。\n但从物证来说，现有的双方直接证据，也就是双方的 DNA 证据了，那为什么检测出来我还要怀疑呢？先让我们了解一下什么叫 DNA 分型\n根据<strong>中国法院网</strong>发布的文章所描述，现场的生物检材经STR分型检测，在某一基因座发现3个或3个以上等位基因时，可确认为混合斑。\n例如：</p>\n<pre><code>被告人金某某故意杀人案件。金某某找到卖淫女姚某某到姚某某的出租房进行交易。期间二人发生性关系后产生争执，金某某将被害人掐死后逃离现场。公安人员从现场提取了大量生物物证。经鉴定，现场地面上提取的三个烟蒂、一个水杯、两个桔子核均检出混合DNA分型，现场地面上提取的两个避孕套内侧均检出混合DNA分型，上述混合DNA分型均包含金某某与另一男子徐某某的DNA。公安机关将金某某抓获后，其供认在现场有吸烟、喝水、吃桔子等行为，承认现场提取的避孕套是其使用后丢弃，并称自己系单独作案。后经排查，混合DNA分型中涉及的另一男子系现场房间的前承租人，不具备作案时间条件，故排除其参与作案的可能性。\n\n　　如果DNA鉴定意见反映出检材可能受到污染，即涉及其他人员的DNA，就需要解释检材污染的原因，有时还需要排除其他人涉案的可能性。\n\n　　在上述金某某故意杀人案件中，公安机关对现场生物检材得出的混合DNA分型出具说明称，现场地面有多处明显水迹，DNA检材有明显被水浸泡的现象，DNA检材通过地面上的水遭到徐某某此前遗留的生物物质的污染，所以导致混合DNA分型的出现。该案中，因徐某某刚搬离现场出租屋一个月，现场很有可能留有其生物物质，现场的水迹可能导致DNA物质的扩散，当然也不能排除公安人员在取证时操作不规范而造成生物检材污染。该案中徐某某不具备作案时间是排除其参与作案可能性的重要依据。\n</code></pre>\n<p>可以看出，这个 DNA 分型检测只能表示被检测人曾经接触过这里，无法证明其他。\n而最关键的是，实质性行为&lt;--&gt;处女膜破裂和男方 DNA，尽管这俩没有必然联系，但是在这起事件中，凭什么床单上检测到 DNA 就能推导出发生强奸关系了呢？</p>\n<p>归根结底，这场案件最决定性的其实就是一个原则：<strong>是否违背女性意愿</strong>。女方说你违背，那你就是违背，哪怕是过程中。</p>\n<p>所以在讨论这个案件的时候，我就不想多说什么，男方是否真的发生强奸，以及女方是否拒绝，我们作为外人都不得而知，毕竟你不可能亲眼目睹整个过程。\n但对于法院方面，我觉得能评判的就多了，当时被爆出来程序违法，为什么现在却没有热度了呢？\n不仅是在鉴定结果未出来之前提前扣押，还是一审材料的缺失，都反映出法院相关人员对执法的玩忽职守。\n只是不知道这件事情最后会怎样，估计也不会有人在意了。</p>\n<p>目前来看，这场案件将会给男女的婚姻方面带来很大的影响，本来彩礼、房产等经济问题已经是男方娶妻生子的难题了，而现有的法律对这方面也没有保护的措施，更何况又多了一个这个事件，估计又能给人带来很大的恐慌吧！</p>\n",
      "content:encodedSnippet": "不知道各位对近日网上很火的山西大同订婚案是否有所关注？二审结果依旧维持了原判，男方以强奸罪被判处有期徒刑三年，结果一出，有人觉得理所当然，有人觉得嗤之以鼻，但无论怎么样，这起案件带来的社会影响应该是深远的。\n对我来说，以目前官方给出的证据来看，不足以令我信服。在新华网给出的完整案件梳理中，给出了以下证据：\n女方母亲与男方的通话录音\n被害人和被害人母亲的口供\n警方电话录音\n行车记录仪中女方母亲与男方的录音\n人身检测：女方手腕等处有淤青\n窗帘有被点燃的痕迹\n电梯监控显示受害后，被害人被男方拖拽\n床单检测出男方精斑，两人混合 dna 分型\nPS：其中女方处女膜完整，内裤没有男方 dna，这几个点没有在记录中，这两点未在官方通报中提及，是否刻意回避或者春秋笔法，不得而知\n为什么我要说保留怀疑态度呢\n判断强奸案的核心在于：\n受害者的主观意愿（是否明确拒绝）\n加害者的行为手段（是否胁迫、暴力等）\n证据支持（能否证明违背意愿）\n而问题就出现在了这个证据支持方面，受害者的主观意愿实在难以难辨，不然网上也不会出现“第一下同意不等于第二项同意”的说法了。\n但从物证来说，现有的双方直接证据，也就是双方的 DNA 证据了，那为什么检测出来我还要怀疑呢？先让我们了解一下什么叫 DNA 分型\n根据中国法院网发布的文章所描述，现场的生物检材经STR分型检测，在某一基因座发现3个或3个以上等位基因时，可确认为混合斑。\n例如：\n被告人金某某故意杀人案件。金某某找到卖淫女姚某某到姚某某的出租房进行交易。期间二人发生性关系后产生争执，金某某将被害人掐死后逃离现场。公安人员从现场提取了大量生物物证。经鉴定，现场地面上提取的三个烟蒂、一个水杯、两个桔子核均检出混合DNA分型，现场地面上提取的两个避孕套内侧均检出混合DNA分型，上述混合DNA分型均包含金某某与另一男子徐某某的DNA。公安机关将金某某抓获后，其供认在现场有吸烟、喝水、吃桔子等行为，承认现场提取的避孕套是其使用后丢弃，并称自己系单独作案。后经排查，混合DNA分型中涉及的另一男子系现场房间的前承租人，不具备作案时间条件，故排除其参与作案的可能性。\n\n　　如果DNA鉴定意见反映出检材可能受到污染，即涉及其他人员的DNA，就需要解释检材污染的原因，有时还需要排除其他人涉案的可能性。\n\n　　在上述金某某故意杀人案件中，公安机关对现场生物检材得出的混合DNA分型出具说明称，现场地面有多处明显水迹，DNA检材有明显被水浸泡的现象，DNA检材通过地面上的水遭到徐某某此前遗留的生物物质的污染，所以导致混合DNA分型的出现。该案中，因徐某某刚搬离现场出租屋一个月，现场很有可能留有其生物物质，现场的水迹可能导致DNA物质的扩散，当然也不能排除公安人员在取证时操作不规范而造成生物检材污染。该案中徐某某不具备作案时间是排除其参与作案可能性的重要依据。\n\n可以看出，这个 DNA 分型检测只能表示被检测人曾经接触过这里，无法证明其他。\n而最关键的是，实质性行为<-->处女膜破裂和男方 DNA，尽管这俩没有必然联系，但是在这起事件中，凭什么床单上检测到 DNA 就能推导出发生强奸关系了呢？\n归根结底，这场案件最决定性的其实就是一个原则：是否违背女性意愿。女方说你违背，那你就是违背，哪怕是过程中。\n所以在讨论这个案件的时候，我就不想多说什么，男方是否真的发生强奸，以及女方是否拒绝，我们作为外人都不得而知，毕竟你不可能亲眼目睹整个过程。\n但对于法院方面，我觉得能评判的就多了，当时被爆出来程序违法，为什么现在却没有热度了呢？\n不仅是在鉴定结果未出来之前提前扣押，还是一审材料的缺失，都反映出法院相关人员对执法的玩忽职守。\n只是不知道这件事情最后会怎样，估计也不会有人在意了。\n目前来看，这场案件将会给男女的婚姻方面带来很大的影响，本来彩礼、房产等经济问题已经是男方娶妻生子的难题了，而现有的法律对这方面也没有保护的措施，更何况又多了一个这个事件，估计又能给人带来很大的恐慌吧！",
      "guid": "https://www.blueke.top/posts/%E5%90%90%E6%A7%BD%E8%B0%81%E7%BB%88%E5%B0%86%E5%A3%B0%E9%9C%87%E5%B1%B1%E8%B0%B7%E5%BF%85%E5%B0%86%E9%95%BF%E4%B9%85%E6%B7%B1%E8%87%AA%E7%BC%84%E9%BB%98/",
      "categories": [
        "生活"
      ],
      "isoDate": "2025-04-16T16:14:00.000Z"
    },
    {
      "title": "使用Astro搭建博客",
      "link": "https://www.blueke.top/posts/%E4%BD%BF%E7%94%A8astro%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/",
      "pubDate": "Thu, 03 Apr 2025 11:40:00 GMT",
      "content:encoded": "<h2>为什么选择 Astro</h2>\n<p><strong>Astro</strong> 是一个现代化的静态站点生成框架，其核心目标是帮助开发者创建 <strong>快速、轻量、且以内容为核心</strong> 的网站。它于 2021 年首次发布，由于其独特的设计理念和对性能的极致追求，迅速在开发者社区中崭露头角。</p>\n<h3>推荐什么人适合 Astro</h3>\n<ol>\n<li>想亲手打造独具一格的博客</li>\n<li>对编程有耐心</li>\n<li>能读懂官方文档并原因钻研</li>\n</ol>\n<h2>本章目标</h2>\n<ol>\n<li>本地部署 Astro</li>\n<li>部署到 Vercel 或 GitHub Pages</li>\n<li>配置主题并优化</li>\n</ol>\n<h3>所需环境</h3>\n<ul>\n<li>node &gt;= 18.14.1</li>\n<li>文本编辑器(VsCode)</li>\n</ul>\n<h2>部署基础模板</h2>\n<p>在 Git 中使用命令部署 astro</p>\n<pre><code>npm create astro@latest\n</code></pre>\n<p>第一个选项是命名，可以自己更改\n第二个选项是我们选择使用 blog 模板\n第三个我们选择 yes，安装所需依赖\n第四个选项 git 仓库初始化，可以先不选</p>\n<p>![[使用Astro搭建博客-202504031206.png|500]]</p>\n<h2>使用主题模板部署 Astro 博客</h2>\n<p>如果你不想使用 astro 的模板，GitHub 有许多开发者提供的模板</p>\n<p>这里我选择的是 <a href=\"https://github.com/saicaca/fuwari\">Fuwari.</a>。这个模板真的很好看！\n首先我们先去 fork 或拉取这个仓库\nclone 到本地后依次执行以下命令</p>\n<pre><code># 如果你尚未安装pnpm，执行如下命令\nnpm install -g pnpm\n\n# 执行下面两个，安装依赖\npnpm install\npnpm add sharp\n</code></pre>\n<blockquote>\n<p>PS：如果你 pnpm install 失败，可能是<code>.pnpm - store</code> 目录的权限不允许用户进行读写操作，去把对应的. pnpm-store 文件夹=&gt;属性，将权限全开即可</p>\n</blockquote>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/%E6%9D%83%E9%99%90%E4%B8%8D%E8%B6%B3%E5%AF%BC%E8%87%B4%E4%B8%8B%E8%BD%BD%E5%A4%B1%E8%B4%A5.png\" alt=\"权限不足导致下载失败|575\" /></p>\n<p>安装好所需依赖后，在终端执行 <code>npm run dev</code> 即可本地构建运行</p>\n<h3>Vercel 部署</h3>\n<p>进入 Vercel，选择自己 fork 的仓库，一路确认即可</p>\n<h2>主题配置</h2>\n<p>在 <code>src/config.ts</code> 进行站点配置</p>\n<h3>页面配置</h3>\n<h4>关于页面</h4>\n<p>在 <code>src\\content\\spec\\about.md</code> 进行配置\n由于 Astro 使用的是 MDx，所以你可以一边写 md 一边写 html，感觉挺有意思</p>\n<h4>创建页面</h4>\n<p>不想配图... 参考别人的叭\n<strong>参考文章</strong></p>\n<ul>\n<li><a href=\"https://blog.aulypc0x0.online/posts/add_friendspage_in_fuwari/\">给你的Fuwari添加一个友链页面 - AULyPc</a></li>\n</ul>\n<h4>添加一个系列页面</h4>\n<p><strong>参考文章</strong></p>\n<ul>\n<li><a href=\"https://ikamusume7.org/posts/frontend/add_series_field/\">在Fuwari中添加系列栏 - 伊卡的记事本</a></li>\n</ul>\n<h3>日期修改</h3>\n<p>我 Obsidian使用的日期是 date, 但是主题用的是 published，得替换一下\n修改 <code>src\\content\\config.ts</code></p>\n<pre><code>//src\\content\\config.ts\nimport { defineCollection, z } from \"astro:content\";\n\nconst postsCollection = defineCollection({\n\tschema: z\n\t\t.object({\n\t\t\ttitle: z.string(),\n\t\t\tdate: z.coerce.date().optional(), // 兼容Obsidian date 字段\n\t\t\tpublished: z.coerce.date().optional(), \n\t\t\tupdated: z.coerce.date().optional(),\n\t\t\tdraft: z.boolean().optional().default(false),\n\t\t\tdescription: z.string().optional().default(\"\"),\n\t\t\timage: z.string().optional().default(\"\"),\n\t\t\ttags: z.array(z.string()).optional().default([]),\n\t\t\tcategory: z.string().optional().default(\"\"),\n\t\t\tlang: z.string().optional().default(\"\"),\n\n\t\t\t/* For internal use */\n\t\t\tprevTitle: z.string().default(\"\"),\n\t\t\tprevSlug: z.string().default(\"\"),\n\t\t\tnextTitle: z.string().default(\"\"),\n\t\t\tnextSlug: z.string().default(\"\"),\n\t\t})\n\t\t.transform((data) =&gt; {\n\t\t\t// 自动将 date 赋值给 published（如果 published 不存在）\n\t\t\treturn {\n\t\t\t\t...data,\n\t\t\t\tpublished: data.published ?? data.date, // 使用 ?? 避免 falsy 值问题\n\t\t\t};\n\t\t}),\n});\n\nexport const collections = {\n\tposts: postsCollection,\n};\n\n</code></pre>\n<h3>修改底部信息</h3>\n<p>在 <code>src\\components\\Footer.astro</code>，我们可以看到底部信息并进行编辑。这里我用的是不蒜子加上日期计数器</p>\n<pre><code>&lt;div class=\"framework-info\"&gt;\n         Powered by: 🪐 &lt;a href=\"https://astro.build/\"&gt;Astro&lt;/a&gt; + &lt;a href=\"https://github.com/saicaca/fuwari\"&gt;Fuwari&lt;/a&gt;✨\n        &lt;br&gt;\n        &lt;!--不蒜子计数器--&gt;\n        &lt;script async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"&gt;&lt;/script&gt;\n        &lt;!--添加一个访问量--&gt;\n        &lt;span&gt;本\"&lt;span style=\" color: hsl(192 98% 55%); font-weight: bold; \"&gt;页面&lt;/span&gt;\"访问 &lt;span id=\"busuanzi_value_page_pv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"&gt;&lt;/span&gt; 次 | 👀总访问 &lt;span id=\"busuanzi_value_site_pv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"&gt;&lt;/span&gt; 次 | 总访客 &lt;span id=\"busuanzi_value_site_uv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"&gt;&lt;/span&gt; 人&lt;/span&gt;\n        &lt;br&gt;\n        &lt;!--运行时间 --&gt;\n        &lt;script type=\"text/javascript\"&gt;function runtime(){const t=new Date(\"09/01/2024 08:00:00\"),n=new Date,s=n-t,e=Math.floor(s/1e3),o=Math.floor(e/86400),i=Math.floor(e%86400/3600),a=Math.floor(e%3600/60),r=e%60;document.getElementById(\"runningtime\").innerHTML=`⏱️本站已运行: ${o}天${i}小时${a}分${r}秒 ☁️`}setInterval(runtime,1e3)&lt;/script&gt;\n        &lt;div class=\"transition text-50 text-sm text-center hidden md:block\"&gt;&lt;p id=\"runningtime\"&gt; &lt;/p&gt;&lt;/div&gt;\n        &lt;/div&gt;\n</code></pre>\n<h3>自定义字体</h3>\n<p>我们可以根据官方文档<a href=\"https://docs.astro.build/zh-cn/guides/fonts/\">使用自定义字体 | Docs</a> 进行本地安装，更加具体地请参照这篇文章<a href=\"https://blog.aulypc0x0.online/posts/use_custom_fonts_in_fuwari/\">在Fuwari使用自定义字体 - AULyPc</a></p>\n<p>这里我选择取巧进行外部文件注入\n在 <code>src\\components\\Navbar.astro</code> 的末尾或合适位置注入你想使用的字体资源，以落霞孤鹜为例</p>\n<pre><code>&lt;link rel=\"stylesheet\" href=\"https://cdn.bootcdn.net/ajax/libs/lxgw-wenkai-screen-webfont/1.7.0/style.min.css\" /&gt;\n      &lt;style&gt;\n        body {\n          /* 屏幕优化版 */\n          font-family: \"LXGW WenKai Screen\", sans-serif;\n        }\n      &lt;/style&gt;\n</code></pre>\n<p>然后保存，就能看见站点字体已发生改变</p>\n<h3>修改代码块样式</h3>\n<p>教程来源<a href=\"https://ikamusume7.org/\">伊卡</a>大佬\n参考于<a href=\"https://ikamusume7.org/posts/frontend/code_block_ex/\">伊卡-增强Fuwari的代码块功能</a></p>\n<h3>添加 Waline 评论</h3>\n<p>根据官方指南进行修改，为了适配主题的夜间模式，所以多写了几个方法</p>\n<pre><code>&lt;!-- 引入Waline评论 --&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" /&gt;\n&lt;div id=\"waline\"&gt;&lt;/div&gt;\n&lt;script type=\"module\"&gt;\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n  // 监听主题变化\n  function initWaline() {\n    const isDark = document.documentElement.classList.contains('dark');\n    \n    init({\n      el: '#waline',\n      serverURL: 'your serverURL',\n      dark: isDark ? 'html.dark' : false, // 关键配置\n      comment: true, // 评论数统计\n      reaction: [ // 反馈表情，使用默认的也可以\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatheart.png',//比心\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatalt.png',   //可爱\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatwave.png',//打招呼\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatthink.png',//思考\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatheartbroken.png',//心碎\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatgay.png',//难平\n     ],\n      emoji: [\n        // 必须使用有效的CDN地址\n        'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs',\n        'https://cdn.jsdelivr.net/npm/@waline/emojis@1.3.0/qq',\n\n      ],\n\n    });\n  }\n  // 初始化\n  initWaline();\n\n  // 监听主题切换（根据你的主题实现方式调整）\n  const observer = new MutationObserver(() =&gt; {\n    const container = document.getElementById('waline');\n    if (container &amp;&amp; container.innerHTML) {\n      container.innerHTML = ''; // 清空重新初始化\n      initWaline();\n    }\n  });\n  observer.observe(document.documentElement, {\n    attributes: true,\n    attributeFilter: ['class']\n  });\n&lt;/script&gt;\n</code></pre>\n<h4>使用方法</h4>\n<p>在想要加入的页面，比如文章页面 <code>src\\pages\\posts\\[...slug].astro</code> 倒数第二行加入</p>\n<pre><code>//你的代码\n&lt;/MainGridLayout&gt;\n</code></pre>\n<p>更推荐将这这些代码单独弄到一个组件里，然后进行调用，不然不好管理</p>\n<p>组件完整代码</p>\n<pre><code>&lt;link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" /&gt;\n&lt;div id=\"waline-info\"&gt;\n  &lt;!--阅读量 --&gt;\n  &lt;div style=\"display: flex; align-items: center;\"&gt;\n      阅读量: &lt;span class=\"waline-pageview-count\" style=\"margin-left: 5px;\"&gt;&lt;/span&gt;\n  &lt;/div&gt;\n  &lt;!--评论数 --&gt;\n  &lt;div style=\"display: flex; align-items: center;\"&gt;\n      评论数：&lt;span class=\"waline-comment-count\" style=\"margin-left: 5px;\"&gt;&lt;/span&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"waline\"&gt;&lt;/div&gt;\n&lt;script is:inline type=\"module\"&gt;\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n  // 监听主题变化\n  function initWaline() {\n    const isDark = document.documentElement.classList.contains('dark');\n    \n    \n    init({\n      el: '#waline',\n      serverURL: 'https://waline.blueke.top/',\n      dark: isDark ? 'html.dark' : false, // 适配夜间模式\n      pageview: true, // 浏览量统计,可选项\n      comment: true, // 评论数统计,可选项\n    //   reaction: [\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatheart.png',//比心\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatalt.png',   //可爱\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatwave.png',//打招呼\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatthink.png',//思考\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatheartbroken.png',//心碎\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatgay.png',//难平\n    //  ],\n      emoji: [\n        // 必须使用有效的CDN地址\n        'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs',\n        'https://cdn.jsdelivr.net/npm/@waline/emojis@1.3.0/qq',\n\n      ],\n\n    });\n  }\n  // 初始化\n  initWaline();\n\n  // 监听主题切换（根据你的主题实现方式调整）\n  const observer = new MutationObserver(() =&gt; {\n    const container = document.getElementById('waline');\n    if (container &amp;&amp; container.innerHTML) {\n      container.innerHTML = ''; // 清空重新初始化\n      initWaline();\n    }\n  });\n  observer.observe(document.documentElement, {\n    attributes: true,\n    attributeFilter: ['class']\n  });\n&lt;/script&gt;\n\n&lt;style&gt;\n  /* 为了确保waline-info和waline之间有间隔，添加margin-bottom */\n  #waline-info {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 10px;\n  }\n  /* 确保waline独占一行 */\n  #waline {\n      clear: both;\n  }\n&lt;/style&gt;\n</code></pre>\n<h3><strong>参考文章</strong></h3>\n<p>官方网站 <a href=\"https://astro.build/\">Astro</a>\n指南：<a href=\"https://docs.astro.build/zh-cn/concepts/why-astro/\">为什么是 Astro? | Docs</a>\n<a href=\"https://www.lapis.cafe/posts/technicaltutorials/%E6%96%B0%E4%B8%80%E4%BB%A3%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6astro%E7%9A%84%E9%83%A8%E7%BD%B2%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%97%E4%B8%8E%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/#1%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\">新一代静态博客框架Astro的部署优化指南与使用体验 - 时歌的博客</a></p>\n",
      "content:encodedSnippet": "为什么选择 Astro\nAstro 是一个现代化的静态站点生成框架，其核心目标是帮助开发者创建 快速、轻量、且以内容为核心 的网站。它于 2021 年首次发布，由于其独特的设计理念和对性能的极致追求，迅速在开发者社区中崭露头角。\n推荐什么人适合 Astro\n想亲手打造独具一格的博客\n对编程有耐心\n能读懂官方文档并原因钻研\n本章目标\n本地部署 Astro\n部署到 Vercel 或 GitHub Pages\n配置主题并优化\n所需环境\nnode >= 18.14.1\n文本编辑器(VsCode)\n部署基础模板\n在 Git 中使用命令部署 astro\nnpm create astro@latest\n\n第一个选项是命名，可以自己更改\n第二个选项是我们选择使用 blog 模板\n第三个我们选择 yes，安装所需依赖\n第四个选项 git 仓库初始化，可以先不选\n![[使用Astro搭建博客-202504031206.png|500]]\n使用主题模板部署 Astro 博客\n如果你不想使用 astro 的模板，GitHub 有许多开发者提供的模板\n这里我选择的是 Fuwari.。这个模板真的很好看！\n首先我们先去 fork 或拉取这个仓库\nclone 到本地后依次执行以下命令\n# 如果你尚未安装pnpm，执行如下命令\nnpm install -g pnpm\n\n# 执行下面两个，安装依赖\npnpm install\npnpm add sharp\n\nPS：如果你 pnpm install 失败，可能是.pnpm - store 目录的权限不允许用户进行读写操作，去把对应的. pnpm-store 文件夹=>属性，将权限全开即可\n\n安装好所需依赖后，在终端执行 npm run dev 即可本地构建运行\nVercel 部署\n进入 Vercel，选择自己 fork 的仓库，一路确认即可\n主题配置\n在 src/config.ts 进行站点配置\n页面配置\n关于页面\n在 src\\content\\spec\\about.md 进行配置\n由于 Astro 使用的是 MDx，所以你可以一边写 md 一边写 html，感觉挺有意思\n创建页面\n不想配图... 参考别人的叭\n参考文章\n给你的Fuwari添加一个友链页面 - AULyPc\n添加一个系列页面\n参考文章\n在Fuwari中添加系列栏 - 伊卡的记事本\n日期修改\n我 Obsidian使用的日期是 date, 但是主题用的是 published，得替换一下\n修改 src\\content\\config.ts\n//src\\content\\config.ts\nimport { defineCollection, z } from \"astro:content\";\n\nconst postsCollection = defineCollection({\n\tschema: z\n\t\t.object({\n\t\t\ttitle: z.string(),\n\t\t\tdate: z.coerce.date().optional(), // 兼容Obsidian date 字段\n\t\t\tpublished: z.coerce.date().optional(), \n\t\t\tupdated: z.coerce.date().optional(),\n\t\t\tdraft: z.boolean().optional().default(false),\n\t\t\tdescription: z.string().optional().default(\"\"),\n\t\t\timage: z.string().optional().default(\"\"),\n\t\t\ttags: z.array(z.string()).optional().default([]),\n\t\t\tcategory: z.string().optional().default(\"\"),\n\t\t\tlang: z.string().optional().default(\"\"),\n\n\t\t\t/* For internal use */\n\t\t\tprevTitle: z.string().default(\"\"),\n\t\t\tprevSlug: z.string().default(\"\"),\n\t\t\tnextTitle: z.string().default(\"\"),\n\t\t\tnextSlug: z.string().default(\"\"),\n\t\t})\n\t\t.transform((data) => {\n\t\t\t// 自动将 date 赋值给 published（如果 published 不存在）\n\t\t\treturn {\n\t\t\t\t...data,\n\t\t\t\tpublished: data.published ?? data.date, // 使用 ?? 避免 falsy 值问题\n\t\t\t};\n\t\t}),\n});\n\nexport const collections = {\n\tposts: postsCollection,\n};\n\n\n修改底部信息\n在 src\\components\\Footer.astro，我们可以看到底部信息并进行编辑。这里我用的是不蒜子加上日期计数器\n<div class=\"framework-info\">\n         Powered by: 🪐 <a href=\"https://astro.build/\">Astro</a> + <a href=\"https://github.com/saicaca/fuwari\">Fuwari</a>✨\n        <br>\n        <!--不蒜子计数器-->\n        <script async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"></script>\n        <!--添加一个访问量-->\n        <span>本\"<span style=\" color: hsl(192 98% 55%); font-weight: bold; \">页面</span>\"访问 <span id=\"busuanzi_value_page_pv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"></span> 次 | 👀总访问 <span id=\"busuanzi_value_site_pv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"></span> 次 | 总访客 <span id=\"busuanzi_value_site_uv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"></span> 人</span>\n        <br>\n        <!--运行时间 -->\n        <script type=\"text/javascript\">function runtime(){const t=new Date(\"09/01/2024 08:00:00\"),n=new Date,s=n-t,e=Math.floor(s/1e3),o=Math.floor(e/86400),i=Math.floor(e%86400/3600),a=Math.floor(e%3600/60),r=e%60;document.getElementById(\"runningtime\").innerHTML=`⏱️本站已运行: ${o}天${i}小时${a}分${r}秒 ☁️`}setInterval(runtime,1e3)</script>\n        <div class=\"transition text-50 text-sm text-center hidden md:block\"><p id=\"runningtime\"> </p></div>\n        </div>\n\n自定义字体\n我们可以根据官方文档使用自定义字体 | Docs 进行本地安装，更加具体地请参照这篇文章在Fuwari使用自定义字体 - AULyPc\n这里我选择取巧进行外部文件注入\n在 src\\components\\Navbar.astro 的末尾或合适位置注入你想使用的字体资源，以落霞孤鹜为例\n<link rel=\"stylesheet\" href=\"https://cdn.bootcdn.net/ajax/libs/lxgw-wenkai-screen-webfont/1.7.0/style.min.css\" />\n      <style>\n        body {\n          /* 屏幕优化版 */\n          font-family: \"LXGW WenKai Screen\", sans-serif;\n        }\n      </style>\n\n然后保存，就能看见站点字体已发生改变\n修改代码块样式\n教程来源伊卡大佬\n参考于伊卡-增强Fuwari的代码块功能\n添加 Waline 评论\n根据官方指南进行修改，为了适配主题的夜间模式，所以多写了几个方法\n<!-- 引入Waline评论 -->\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" />\n<div id=\"waline\"></div>\n<script type=\"module\">\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n  // 监听主题变化\n  function initWaline() {\n    const isDark = document.documentElement.classList.contains('dark');\n    \n    init({\n      el: '#waline',\n      serverURL: 'your serverURL',\n      dark: isDark ? 'html.dark' : false, // 关键配置\n      comment: true, // 评论数统计\n      reaction: [ // 反馈表情，使用默认的也可以\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatheart.png',//比心\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatalt.png',   //可爱\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatwave.png',//打招呼\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatthink.png',//思考\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatheartbroken.png',//心碎\n    'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatgay.png',//难平\n     ],\n      emoji: [\n        // 必须使用有效的CDN地址\n        'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs',\n        'https://cdn.jsdelivr.net/npm/@waline/emojis@1.3.0/qq',\n\n      ],\n\n    });\n  }\n  // 初始化\n  initWaline();\n\n  // 监听主题切换（根据你的主题实现方式调整）\n  const observer = new MutationObserver(() => {\n    const container = document.getElementById('waline');\n    if (container && container.innerHTML) {\n      container.innerHTML = ''; // 清空重新初始化\n      initWaline();\n    }\n  });\n  observer.observe(document.documentElement, {\n    attributes: true,\n    attributeFilter: ['class']\n  });\n</script>\n\n使用方法\n在想要加入的页面，比如文章页面 src\\pages\\posts\\[...slug].astro 倒数第二行加入\n//你的代码\n</MainGridLayout>\n\n更推荐将这这些代码单独弄到一个组件里，然后进行调用，不然不好管理\n组件完整代码\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" />\n<div id=\"waline-info\">\n  <!--阅读量 -->\n  <div style=\"display: flex; align-items: center;\">\n      阅读量: <span class=\"waline-pageview-count\" style=\"margin-left: 5px;\"></span>\n  </div>\n  <!--评论数 -->\n  <div style=\"display: flex; align-items: center;\">\n      评论数：<span class=\"waline-comment-count\" style=\"margin-left: 5px;\"></span>\n  </div>\n</div>\n<div id=\"waline\"></div>\n<script is:inline type=\"module\">\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n  // 监听主题变化\n  function initWaline() {\n    const isDark = document.documentElement.classList.contains('dark');\n    \n    \n    init({\n      el: '#waline',\n      serverURL: 'https://waline.blueke.top/',\n      dark: isDark ? 'html.dark' : false, // 适配夜间模式\n      pageview: true, // 浏览量统计,可选项\n      comment: true, // 评论数统计,可选项\n    //   reaction: [\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatheart.png',//比心\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatalt.png',   //可爱\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatwave.png',//打招呼\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatthink.png',//思考\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/ablobcatheartbroken.png',//心碎\n    // 'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs/blobcatgay.png',//难平\n    //  ],\n      emoji: [\n        // 必须使用有效的CDN地址\n        'https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs',\n        'https://cdn.jsdelivr.net/npm/@waline/emojis@1.3.0/qq',\n\n      ],\n\n    });\n  }\n  // 初始化\n  initWaline();\n\n  // 监听主题切换（根据你的主题实现方式调整）\n  const observer = new MutationObserver(() => {\n    const container = document.getElementById('waline');\n    if (container && container.innerHTML) {\n      container.innerHTML = ''; // 清空重新初始化\n      initWaline();\n    }\n  });\n  observer.observe(document.documentElement, {\n    attributes: true,\n    attributeFilter: ['class']\n  });\n</script>\n\n<style>\n  /* 为了确保waline-info和waline之间有间隔，添加margin-bottom */\n  #waline-info {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 10px;\n  }\n  /* 确保waline独占一行 */\n  #waline {\n      clear: both;\n  }\n</style>\n\n参考文章\n官方网站 Astro\n指南：为什么是 Astro? | Docs\n新一代静态博客框架Astro的部署优化指南与使用体验 - 时歌的博客",
      "content": "简单记录Astro的部署以及主题自定义配置",
      "contentSnippet": "简单记录Astro的部署以及主题自定义配置",
      "guid": "https://www.blueke.top/posts/%E4%BD%BF%E7%94%A8astro%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/",
      "categories": [
        "博客"
      ],
      "isoDate": "2025-04-03T11:40:00.000Z"
    },
    {
      "title": "前后端跨域问题",
      "link": "https://www.blueke.top/posts/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/",
      "pubDate": "Sun, 23 Mar 2025 15:00:00 GMT",
      "content:encoded": "<p>&lt;!--more--&gt;</p>\n<p>前后端对接的时候，很容易出现跨域问题。从前端和后端都可以解决</p>\n<h2>前端</h2>\n<p>这是典型的跨域（CORS）问题。当浏览器从一个源（Origin）请求资源时，如果目标资源不在同一个源，就会触发 CORS 策略。</p>\n<h3>解决方案</h3>\n<h4><strong>方案一：在 Spring Boot 中添加 CORS 配置</strong></h4>\n<p>创建一个 CORS 配置类：</p>\n<pre><code>package com.lanke.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.CorsRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class CorsConfig implements WebMvcConfigurer {\n\n    @Bean\n    public WebMvcConfigurer corsConfigurer() {\n        return new WebMvcConfigurer() {\n            @Override\n            public void addCorsMappings(CorsRegistry registry) {\n                registry.addMapping(\"/**\")\n                        .allowedOrigins(\"http://localhost:3000\") // 允许的前端源\n                        .allowedMethods(\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\") // 允许的 HTTP 方法\n                        .allowedHeaders(\"Content-Type\", \"Authorization\") // 允许的请求头\n                        .allowCredentials(true) // 允许携带 Cookie\n                        .maxAge(3600); // 预检请求的有效期（秒）\n            }\n        };\n    }\n}\n</code></pre>\n<h4><strong>方案二：使用注解（适用于特定接口）</strong></h4>\n<p>在需要跨域的控制器类或方法上添加 <code>@CrossOrigin</code> 注解：</p>\n<pre><code>@RestController\n@RequestMapping(\"/user\")\n@CrossOrigin(origins = \"http://localhost:3000\", allowedHeaders = \"Authorization\")\npublic class UserController {\n    // 接口方法\n}\n</code></pre>\n<h3><strong>关键配置说明</strong></h3>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>allowedOrigins</code></td>\n<td>允许的前端源（如 <code>http://localhost:3000</code>），支持 <code>*</code> 表示所有源</td>\n</tr>\n<tr>\n<td><code>allowedMethods</code></td>\n<td>允许的 HTTP 方法（如 <code>GET</code>, <code>POST</code>）</td>\n</tr>\n<tr>\n<td><code>allowedHeaders</code></td>\n<td>允许的请求头（如 <code>Content-Type</code>, <code>Authorization</code>）</td>\n</tr>\n<tr>\n<td><code>allowCredentials</code></td>\n<td>是否允许携带 Cookie，设为 <code>true</code> 时 <code>allowedOrigins</code> 不能为 <code>*</code></td>\n</tr>\n<tr>\n<td><code>maxAge</code></td>\n<td>预检请求（OPTIONS）的缓存时间，单位秒</td>\n</tr>\n</tbody>\n</table>\n<h3>前端请求验证</h3>\n<p>确保前端在请求中正确设置跨域相关的头信息（例如携带 <code>Authorization</code>）：</p>\n<pre><code>// JavaScript 示例（Axios）\naxios.post('http://localhost:8080/user/login', {\n    username: 'lanke',\n    password: '123456'\n}, {\n    headers: {\n        'Authorization': 'Bearer YOUR_TOKEN'\n    }\n});\n</code></pre>\n<h3><strong>常见问题</strong></h3>\n<ol>\n<li>\n<p><strong>预检请求（OPTIONS）</strong>：</p>\n<ul>\n<li>浏览器会先发送 <code>OPTIONS</code> 请求进行预检，确保后端正确响应 <code>200 OK</code> 并包含 <code>Access-Control-Allow-*</code> 头。</li>\n<li>如果 <code>OPTIONS</code> 请求失败，检查后端是否拦截了该方法。</li>\n</ul>\n</li>\n<li>\n<p><strong>携带 Cookie</strong>：</p>\n<ul>\n<li>若需携带 Cookie，需同时设置 <code>allowCredentials: true</code> 和 <code>allowedOrigins</code> 为具体源（不能为 <code>*</code>）。</li>\n</ul>\n</li>\n<li>\n<p><strong>路径匹配</strong>：</p>\n<ul>\n<li>确保 <code>addMapping(\"/**\")</code> 覆盖所有需要跨域的接口路径。</li>\n</ul>\n</li>\n</ol>\n<h2>前端与后端的联系</h2>\n<p>前端到底是怎么访问到后端 api 呢？\n主要是依靠我们的 <code>vite.config.ts</code> 中的配置</p>\n<pre><code>server: {\n            host: '0.0.0.0',\n            port: 3000, // 设置默认启动端口为 3000\n            open: true,\n            proxy: {\n                '/api': { \n                    target: env.VITE_APP_BASE_API, \n                    changeOrigin: true,\n                    rewrite: (path) =&gt; path.replace(/^\\/api/, ''), \n                },\n            },\n        }\n</code></pre>\n<p>我们通过代理配置，将有 <code>/api</code> 有关的链接都拼接成后端的地址，这样我们就能访问成功了。</p>\n<p>所以你可以在后端统一使用前缀 <code>/api</code> 也可以自己在前端，把各个接口都进行代理</p>\n",
      "content:encodedSnippet": "<!--more-->\n前后端对接的时候，很容易出现跨域问题。从前端和后端都可以解决\n前端\n这是典型的跨域（CORS）问题。当浏览器从一个源（Origin）请求资源时，如果目标资源不在同一个源，就会触发 CORS 策略。\n解决方案\n方案一：在 Spring Boot 中添加 CORS 配置\n创建一个 CORS 配置类：\npackage com.lanke.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.CorsRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class CorsConfig implements WebMvcConfigurer {\n\n    @Bean\n    public WebMvcConfigurer corsConfigurer() {\n        return new WebMvcConfigurer() {\n            @Override\n            public void addCorsMappings(CorsRegistry registry) {\n                registry.addMapping(\"/**\")\n                        .allowedOrigins(\"http://localhost:3000\") // 允许的前端源\n                        .allowedMethods(\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\") // 允许的 HTTP 方法\n                        .allowedHeaders(\"Content-Type\", \"Authorization\") // 允许的请求头\n                        .allowCredentials(true) // 允许携带 Cookie\n                        .maxAge(3600); // 预检请求的有效期（秒）\n            }\n        };\n    }\n}\n\n方案二：使用注解（适用于特定接口）\n在需要跨域的控制器类或方法上添加 @CrossOrigin 注解：\n@RestController\n@RequestMapping(\"/user\")\n@CrossOrigin(origins = \"http://localhost:3000\", allowedHeaders = \"Authorization\")\npublic class UserController {\n    // 接口方法\n}\n\n关键配置说明\n配置项\n说明\n\n\n\n\nallowedOrigins\n允许的前端源（如 http://localhost:3000），支持 * 表示所有源\n\n\nallowedMethods\n允许的 HTTP 方法（如 GET, POST）\n\n\nallowedHeaders\n允许的请求头（如 Content-Type, Authorization）\n\n\nallowCredentials\n是否允许携带 Cookie，设为 true 时 allowedOrigins 不能为 *\n\n\nmaxAge\n预检请求（OPTIONS）的缓存时间，单位秒\n\n\n\n前端请求验证\n确保前端在请求中正确设置跨域相关的头信息（例如携带 Authorization）：\n// JavaScript 示例（Axios）\naxios.post('http://localhost:8080/user/login', {\n    username: 'lanke',\n    password: '123456'\n}, {\n    headers: {\n        'Authorization': 'Bearer YOUR_TOKEN'\n    }\n});\n\n常见问题\n预检请求（OPTIONS）：\n浏览器会先发送 OPTIONS 请求进行预检，确保后端正确响应 200 OK 并包含 Access-Control-Allow-* 头。\n如果 OPTIONS 请求失败，检查后端是否拦截了该方法。\n携带 Cookie：\n若需携带 Cookie，需同时设置 allowCredentials: true 和 allowedOrigins 为具体源（不能为 *）。\n路径匹配：\n确保 addMapping(\"/**\") 覆盖所有需要跨域的接口路径。\n前端与后端的联系\n前端到底是怎么访问到后端 api 呢？\n主要是依靠我们的 vite.config.ts 中的配置\nserver: {\n            host: '0.0.0.0',\n            port: 3000, // 设置默认启动端口为 3000\n            open: true,\n            proxy: {\n                '/api': { \n                    target: env.VITE_APP_BASE_API, \n                    changeOrigin: true,\n                    rewrite: (path) => path.replace(/^\\/api/, ''), \n                },\n            },\n        }\n\n我们通过代理配置，将有 /api 有关的链接都拼接成后端的地址，这样我们就能访问成功了。\n所以你可以在后端统一使用前缀 /api 也可以自己在前端，把各个接口都进行代理",
      "content": "前后端对接的时候，很容易出现跨域问题。从前端和后端都可以解决",
      "contentSnippet": "前后端对接的时候，很容易出现跨域问题。从前端和后端都可以解决",
      "guid": "https://www.blueke.top/posts/%E5%89%8D%E5%90%8E%E7%AB%AF%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/",
      "categories": [
        "前端",
        "笔记",
        "后端",
        "Vue",
        "SpringBoot"
      ],
      "isoDate": "2025-03-23T15:00:00.000Z"
    },
    {
      "title": "Pinia的使用",
      "link": "https://www.blueke.top/posts/pinia%E7%9A%84%E4%BD%BF%E7%94%A8/",
      "pubDate": "Sun, 23 Mar 2025 14:39:00 GMT",
      "content:encoded": "<h2>一、为什么选择 Pinia？</h2>\n<p>Pinia 是 Vue.js 官方推荐的状态管理库，它基于 Composition API 设计，具有以下核心优势：</p>\n<ul>\n<li><strong>模块化</strong>：支持多个 Store 模块独立管理不同业务状态</li>\n<li><strong>响应式</strong>：基于 Vue3 的响应式系统实现状态自动更新</li>\n<li><strong>轻量</strong>：体积仅有 ~1KB（gzip 后），性能优异</li>\n<li><strong>类型安全</strong>：完美支持 TypeScript，提供完整类型推导</li>\n</ul>\n<p>在电商应用中，我们常需要跨组件共享购物车、用户登录态等数据，Pinia 可以优雅解决这类问题。</p>\n<h2>二、快速入门</h2>\n<h3>1. 安装依赖</h3>\n<pre><code>npm install pinia\n</code></pre>\n<h3>2. 初始化 Pinia</h3>\n<pre><code>// src/main.ts\nimport { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\n\nconst app = createApp(App)\napp.use(createPinia()) // 全局注册 Pinia\napp.mount('#app')\n</code></pre>\n<h3>3. 解决 TypeScript 类型问题</h3>\n<p>如果出现类型错误，需确保 <code>tsconfig.json</code> 包含以下配置：</p>\n<pre><code>{\n  \"compilerOptions\": {\n    \"moduleResolution\": \"Node\",\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true\n  }\n}\n</code></pre>\n<h2>三、Store 模块开发</h2>\n<p>这里我就拿<code>用户管理</code>来说明了</p>\n<h3>1. 用户状态管理模块</h3>\n<pre><code>// src/store/userStore.ts\nimport { defineStore } from 'pinia'\nimport { loginApi, getUserInfoApi } from '@/api/user'\nimport type { LoginParams, UserInfo } from '@/types'\n\nexport const useUserStore = defineStore('user', {\n  state: () =&gt; ({\n    token: localStorage.getItem('token') || '',\n    userInfo: null as UserInfo | null\n  }),\n\n  actions: {\n    // 用户登录流程\n    async login(params: LoginParams) {\n      try {\n        // 1. 调用登录接口\n        const { data } = await loginApi(params)\n        \n        // 2. 持久化存储 token\n        this.setToken(data.token)\n        \n        // 3. 获取用户信息\n        await this.fetchUserInfo()\n        \n        return data\n      } catch (error) {\n        // 登录失败处理\n        this.clearToken()\n        throw new Error('登录失败：' + error.message)\n      }\n    },\n\n    // token 管理\n    setToken(token: string) {\n      this.token = token\n      localStorage.setItem('token', token)\n    },\n\n    clearToken() {\n      this.token = ''\n      this.userInfo = null\n      localStorage.removeItem('token')\n    },\n\n    // 获取用户信息\n    async fetchUserInfo() {\n      const { data } = await getUserInfoApi()\n      this.userInfo = data\n    }\n  }\n})\n</code></pre>\n<h3>2. Store 入口文件</h3>\n<pre><code>// src/store/index.ts\nimport { createPinia } from 'pinia'\n\nexport const pinia = createPinia()\nexport * from './userStore'\n</code></pre>\n<h2>四、与 API 层集成</h2>\n<h3>1. 请求拦截器自动注入 Token</h3>\n<pre><code>// src/utils/request.ts\nimport axios, {\n  type AxiosInstance,\n  type InternalAxiosRequestConfig,\n  type AxiosResponse,\n  type AxiosError,\n} from 'axios';\nimport { useUserStore } from '@/store/modules/user';\n\ntype RequestConfig&lt;T = any&gt; = InternalAxiosRequestConfig&lt;T&gt;;\ntype ResponseData&lt;T = any&gt; = T;\n\nconst http: AxiosInstance = axios.create({\n  baseURL: import.meta.env.VITE_APP_BASE_API,\n  timeout: 10000,\n});\n\n// 增强的请求拦截器\nhttp.interceptors.request.use(\n  (config: RequestConfig): RequestConfig =&gt; {\n    const userStore = useUserStore();\n    if (userStore.token) {\n      config.headers = {\n        ...config.headers,\n        Authorization: `Bearer ${userStore.token}`, // 拿到token\n      } as typeof config.headers;\n    }\n    return config;\n  },\n  (error: AxiosError) =&gt; Promise.reject(error)\n);\n\n// 其他省略... \n</code></pre>\n<h2>五、组件使用示例</h2>\n<h3>登录组件调用</h3>\n<pre><code>// src/views/Login.vue\n&lt;script setup lang=\"ts\"&gt;\nimport { ref, reactive } from 'vue'\nimport message from '@/components/message'\n\n// 登录验证\nimport { useUserStore } from '@/store/modules/user'\nimport router from '@/router'\n\nconst userStore = useUserStore()\n\n// 表单引用\nconst loginFormRef = ref()\n\n// 表单数据\nconst loginForm = reactive({\n  username: '',\n  password: ''\n})\n\n// 登录操作\nconst handleLogin = async () =&gt; {\n  try {\n    // 表单验证\n    const valid = await loginFormRef.value.validate();\n    if (!valid) return;\n\n    loading.value = true;\n\n    // 调用 Pinia Store 的登录方法\n    await userStore.login({\n      username: loginForm.username,\n      password: loginForm.password\n    });\n\n    // 登录成功提示\n    message.success('登录成功！');\n\n    // 跳转到首页\n    router.push('/home');\n\n  } catch (error) {\n    // 登录失败提示\n    message.error('登录失败，请检查用户名和密码！');\n  } finally {\n    loading.value = false;\n  }\n};\n&lt;/script&gt;\n</code></pre>\n<h2>六、项目结构规范</h2>\n<pre><code>src/\n├── api/          # API 接口封装\n│   └── user.ts   # 用户相关接口\n├── store/        # 状态管理\n│   ├── userStore.ts # 用户状态模块\n│   └── index.ts  # Pinia 入口\n├── types/        # 类型定义\n│   └── user.ts   # 用户相关类型\n├── utils/        # 工具函数\n│   └── request.ts  # 封装的 axios 实例\n└── views/        # 页面组件\n    └── Login.vue # 登录页面\n</code></pre>\n<h2>七、完整数据流</h2>\n<pre><code>sequenceDiagram\n    participant 组件\n    participant Store\n    participant API\n    participant 后端\n\n    组件-&gt;&gt;Store: 调用 login()\n    Store-&gt;&gt;API: 执行 loginApi()\n    API-&gt;&gt;后端: POST /user/login\n    后端--&gt;&gt;API: 返回 token\n    API--&gt;&gt;Store: 处理响应\n    Store-&gt;&gt;API: 调用 getUserInfoApi()\n    API-&gt;&gt;后端: GET /user/info\n    后端--&gt;&gt;API: 返回用户信息\n    API--&gt;&gt;Store: 更新状态\n    Store--&gt;&gt;组件: 状态更新\n</code></pre>\n<ol>\n<li><strong>用户输入</strong>：在登录表单填写用户名密码</li>\n<li><strong>发起请求</strong>：点击登录时调用 <code>userStore</code> 的 <code>login</code> 方法，将参数传递给 loginApi</li>\n<li><strong>保存 Token</strong>：登录成功后通过 <code>userStore.setToken()</code> 保存到 Pinia 和 localStorage</li>\n<li><strong>自动注入 Token</strong>：后续请求拦截器会自动携带 Token</li>\n</ol>\n<h2>补充</h2>\n<p>这里只是简单介绍了一下 pinia 的基础使用(貌似也没有讲)\n我是边看 <a href=\"https://juejin.cn/post/7347207466818895911#heading-16\">pinia看这一篇就够了 - 掘金</a> 边自己查阅资料写的，以后用到再补充吧</p>\n<p>还有就是上面数据流图的实现，我还要写一篇来记录一下，因为我对这个规范还不是很熟练。</p>\n",
      "content:encodedSnippet": "一、为什么选择 Pinia？\nPinia 是 Vue.js 官方推荐的状态管理库，它基于 Composition API 设计，具有以下核心优势：\n模块化：支持多个 Store 模块独立管理不同业务状态\n响应式：基于 Vue3 的响应式系统实现状态自动更新\n轻量：体积仅有 ~1KB（gzip 后），性能优异\n类型安全：完美支持 TypeScript，提供完整类型推导\n在电商应用中，我们常需要跨组件共享购物车、用户登录态等数据，Pinia 可以优雅解决这类问题。\n二、快速入门\n1. 安装依赖\nnpm install pinia\n\n2. 初始化 Pinia\n// src/main.ts\nimport { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\n\nconst app = createApp(App)\napp.use(createPinia()) // 全局注册 Pinia\napp.mount('#app')\n\n3. 解决 TypeScript 类型问题\n如果出现类型错误，需确保 tsconfig.json 包含以下配置：\n{\n  \"compilerOptions\": {\n    \"moduleResolution\": \"Node\",\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true\n  }\n}\n\n三、Store 模块开发\n这里我就拿用户管理来说明了\n1. 用户状态管理模块\n// src/store/userStore.ts\nimport { defineStore } from 'pinia'\nimport { loginApi, getUserInfoApi } from '@/api/user'\nimport type { LoginParams, UserInfo } from '@/types'\n\nexport const useUserStore = defineStore('user', {\n  state: () => ({\n    token: localStorage.getItem('token') || '',\n    userInfo: null as UserInfo | null\n  }),\n\n  actions: {\n    // 用户登录流程\n    async login(params: LoginParams) {\n      try {\n        // 1. 调用登录接口\n        const { data } = await loginApi(params)\n        \n        // 2. 持久化存储 token\n        this.setToken(data.token)\n        \n        // 3. 获取用户信息\n        await this.fetchUserInfo()\n        \n        return data\n      } catch (error) {\n        // 登录失败处理\n        this.clearToken()\n        throw new Error('登录失败：' + error.message)\n      }\n    },\n\n    // token 管理\n    setToken(token: string) {\n      this.token = token\n      localStorage.setItem('token', token)\n    },\n\n    clearToken() {\n      this.token = ''\n      this.userInfo = null\n      localStorage.removeItem('token')\n    },\n\n    // 获取用户信息\n    async fetchUserInfo() {\n      const { data } = await getUserInfoApi()\n      this.userInfo = data\n    }\n  }\n})\n\n2. Store 入口文件\n// src/store/index.ts\nimport { createPinia } from 'pinia'\n\nexport const pinia = createPinia()\nexport * from './userStore'\n\n四、与 API 层集成\n1. 请求拦截器自动注入 Token\n// src/utils/request.ts\nimport axios, {\n  type AxiosInstance,\n  type InternalAxiosRequestConfig,\n  type AxiosResponse,\n  type AxiosError,\n} from 'axios';\nimport { useUserStore } from '@/store/modules/user';\n\ntype RequestConfig<T = any> = InternalAxiosRequestConfig<T>;\ntype ResponseData<T = any> = T;\n\nconst http: AxiosInstance = axios.create({\n  baseURL: import.meta.env.VITE_APP_BASE_API,\n  timeout: 10000,\n});\n\n// 增强的请求拦截器\nhttp.interceptors.request.use(\n  (config: RequestConfig): RequestConfig => {\n    const userStore = useUserStore();\n    if (userStore.token) {\n      config.headers = {\n        ...config.headers,\n        Authorization: `Bearer ${userStore.token}`, // 拿到token\n      } as typeof config.headers;\n    }\n    return config;\n  },\n  (error: AxiosError) => Promise.reject(error)\n);\n\n// 其他省略... \n\n五、组件使用示例\n登录组件调用\n// src/views/Login.vue\n<script setup lang=\"ts\">\nimport { ref, reactive } from 'vue'\nimport message from '@/components/message'\n\n// 登录验证\nimport { useUserStore } from '@/store/modules/user'\nimport router from '@/router'\n\nconst userStore = useUserStore()\n\n// 表单引用\nconst loginFormRef = ref()\n\n// 表单数据\nconst loginForm = reactive({\n  username: '',\n  password: ''\n})\n\n// 登录操作\nconst handleLogin = async () => {\n  try {\n    // 表单验证\n    const valid = await loginFormRef.value.validate();\n    if (!valid) return;\n\n    loading.value = true;\n\n    // 调用 Pinia Store 的登录方法\n    await userStore.login({\n      username: loginForm.username,\n      password: loginForm.password\n    });\n\n    // 登录成功提示\n    message.success('登录成功！');\n\n    // 跳转到首页\n    router.push('/home');\n\n  } catch (error) {\n    // 登录失败提示\n    message.error('登录失败，请检查用户名和密码！');\n  } finally {\n    loading.value = false;\n  }\n};\n</script>\n\n六、项目结构规范\nsrc/\n├── api/          # API 接口封装\n│   └── user.ts   # 用户相关接口\n├── store/        # 状态管理\n│   ├── userStore.ts # 用户状态模块\n│   └── index.ts  # Pinia 入口\n├── types/        # 类型定义\n│   └── user.ts   # 用户相关类型\n├── utils/        # 工具函数\n│   └── request.ts  # 封装的 axios 实例\n└── views/        # 页面组件\n    └── Login.vue # 登录页面\n\n七、完整数据流\nsequenceDiagram\n    participant 组件\n    participant Store\n    participant API\n    participant 后端\n\n    组件->>Store: 调用 login()\n    Store->>API: 执行 loginApi()\n    API->>后端: POST /user/login\n    后端-->>API: 返回 token\n    API-->>Store: 处理响应\n    Store->>API: 调用 getUserInfoApi()\n    API->>后端: GET /user/info\n    后端-->>API: 返回用户信息\n    API-->>Store: 更新状态\n    Store-->>组件: 状态更新\n\n用户输入：在登录表单填写用户名密码\n发起请求：点击登录时调用 userStore 的 login 方法，将参数传递给 loginApi\n保存 Token：登录成功后通过 userStore.setToken() 保存到 Pinia 和 localStorage\n自动注入 Token：后续请求拦截器会自动携带 Token\n补充\n这里只是简单介绍了一下 pinia 的基础使用(貌似也没有讲)\n我是边看 pinia看这一篇就够了 - 掘金 边自己查阅资料写的，以后用到再补充吧\n还有就是上面数据流图的实现，我还要写一篇来记录一下，因为我对这个规范还不是很熟练。",
      "content": "Pinia 是 Vue 的专属状态管理库，它允许你跨组件或页面共享状态。",
      "contentSnippet": "Pinia 是 Vue 的专属状态管理库，它允许你跨组件或页面共享状态。",
      "guid": "https://www.blueke.top/posts/pinia%E7%9A%84%E4%BD%BF%E7%94%A8/",
      "categories": [
        "笔记",
        "前端",
        "Vue"
      ],
      "isoDate": "2025-03-23T14:39:00.000Z"
    },
    {
      "title": "SpringBoot开启热更新",
      "link": "https://www.blueke.top/posts/springboot%E5%BC%80%E5%90%AF%E7%83%AD%E6%9B%B4%E6%96%B0/",
      "pubDate": "Sat, 22 Mar 2025 19:17:00 GMT",
      "content:encoded": "<p>&lt;!--more--&gt;\n在 Spring Boot 中实现热更新（热部署）可以显著提升开发效率，以下是几种主流的实现方案及详细配置步骤</p>\n<hr />\n<h2>一、Spring Boot DevTools（官方推荐）</h2>\n<p><strong>推荐指数</strong>：★★★★★<br />\n<strong>原理</strong>：通过类加载器隔离机制实现快速应用重启<br />\n<strong>配置步骤</strong>：</p>\n<ol>\n<li>\n<p><strong>添加依赖</strong>：</p>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n    &lt;optional&gt;true&lt;/optional&gt;\n&lt;/dependency&gt;\n</code></pre>\n</li>\n<li>\n<p><strong>IDEA 配置</strong>：</p>\n<ul>\n<li><code>Settings → Build, Execution, Deployment → Compiler</code>：\n✅ 勾选 <code>Build project automatically</code>（自动编译）</li>\n<li><code>Settings → Advanced Settings</code> (高级设置)：\n✅ 勾选 <code>Allow auto-make to start even if developed application is currently running</code></li>\n</ul>\n</li>\n<li>\n<p><strong>触发更新</strong>：</p>\n<ul>\n<li>修改 Java 代码后按 <code>Ctrl + F9</code>（手动触发编译）</li>\n<li>修改静态资源（HTML/CSS/JS）会自动立即生效</li>\n</ul>\n</li>\n<li>\n<p><strong>高级配置</strong>（可选）：</p>\n</li>\n</ol>\n<pre><code>  # application.properties\n  devtools:  \n add-properties:  \n   restart:  \n     enabled: true  #设置开启热部署  \n     additional-paths: src/main/java #重启目录  \n     exclude: WEB-INF/**\n  \n</code></pre>\n<h2>二、JRebel（商业方案）</h2>\n<p><strong>推荐指数</strong>：★★★★☆<br />\n<strong>优势</strong>：瞬时热更新，无需重启，支持更多框架<br />\n<strong>使用场景</strong>：大型项目或需要极致热部署体验</p>\n<ol>\n<li>\n<p><strong>安装插件</strong>：</p>\n<ul>\n<li>IDEA：<code>Plugins 市场搜索 JRebel 安装</code></li>\n</ul>\n</li>\n<li>\n<p><strong>激活授权</strong>：</p>\n<ul>\n<li>教育用户可申请<a href=\"https://www.jrebel.com/products/jrebel\">免费授权</a></li>\n<li>或使用企业许可证</li>\n</ul>\n</li>\n<li>\n<p><strong>启用方式</strong>：</p>\n<ul>\n<li>启动时选择 <code>Run with JRebel</code> 替代常规启动</li>\n<li>修改代码后直接保存即可生效</li>\n</ul>\n</li>\n</ol>\n<hr />\n<h2>三、IDEA 原生热加载</h2>\n<p><strong>推荐指数</strong>：★★★☆☆<br />\n<strong>适用场景</strong>：简单修改验证（字段/日志等）</p>\n<ol>\n<li>\n<p><strong>开启配置</strong>：</p>\n<ul>\n<li><code>Settings → Build, Execution, Deployment → Debugger</code>：\n✅ 勾选 <code>HotSwap: Reload classes after compilation</code></li>\n</ul>\n</li>\n<li>\n<p><strong>触发方式</strong>：</p>\n<ul>\n<li>修改代码后按 <code>Ctrl + F9</code> 编译</li>\n<li>通过 <code>Debug模式</code> 运行时，自动重载变更的类</li>\n</ul>\n</li>\n</ol>\n<p><strong>限制</strong>：无法修改方法签名/类结构等重大变更</p>\n<hr />\n<h2>四、Spring Loaded（第三方方案）</h2>\n<p><strong>推荐指数</strong>：★★★☆☆<br />\n<strong>配置方式</strong>：</p>\n<pre><code>&lt;build&gt;\n    &lt;plugins&gt;\n        &lt;plugin&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;dependencies&gt;\n                &lt;dependency&gt;\n                    &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n                    &lt;artifactId&gt;springloaded&lt;/artifactId&gt;\n                    &lt;version&gt;1.2.8.RELEASE&lt;/version&gt;\n                &lt;/dependency&gt;\n            &lt;/dependencies&gt;\n        &lt;/plugin&gt;\n    &lt;/plugins&gt;\n&lt;/build&gt;\n</code></pre>\n<p><strong>启动命令</strong>：</p>\n<pre><code>mvn spring-boot:run\n</code></pre>\n<hr />\n<h2>▶️ 效果验证</h2>\n<p>修改以下代码测试热部署：</p>\n<pre><code>@RestController\npublic class TestController {\n    @GetMapping(\"/test\")\n    public String test() {\n        return \"修改前内容\";  // 改为其他内容保存测试\n    }\n}\n</code></pre>\n<p>访问 <code>http://localhost:8080/test</code> 观察是否立即生效</p>\n<hr />\n<h2>⚠️ 常见问题排查</h2>\n<ol>\n<li>\n<p><strong>修改不生效</strong>：</p>\n<ul>\n<li>检查是否在 <code>Debug 模式</code> 下运行</li>\n<li>确认 IDEA 开启了自动编译（部分版本需手动配置）</li>\n<li>查看控制台是否有 <code>Restarting...</code> 日志输出</li>\n</ul>\n</li>\n<li>\n<p><strong>静态资源未更新</strong>：</p>\n<ul>\n<li>清理浏览器缓存</li>\n<li>确认资源文件位于 <code>src/main/resources/static</code></li>\n</ul>\n</li>\n<li>\n<p><strong>类加载异常</strong>：</p>\n<ul>\n<li>重大结构修改仍需冷启动</li>\n<li>尝试使用 <code>Build → Rebuild Project</code></li>\n</ul>\n</li>\n</ol>\n<hr />\n<h2>五、生产环境警告</h2>\n<p>❗ <strong>重要</strong>：所有热部署工具（包括 DevTools）都 <strong>不能用于生产环境</strong>！务必确保生产部署时已移除相关依赖。</p>\n<p>根据项目需求选择最适合的方案，一般推荐优先使用 DevTools + IDEA 原生热加载的组合，兼顾便捷性和稳定性。</p>\n",
      "content:encodedSnippet": "<!--more-->\n在 Spring Boot 中实现热更新（热部署）可以显著提升开发效率，以下是几种主流的实现方案及详细配置步骤\n一、Spring Boot DevTools（官方推荐）\n推荐指数：★★★★★\n原理：通过类加载器隔离机制实现快速应用重启\n配置步骤：\n添加依赖：\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-devtools</artifactId>\n    <scope>runtime</scope>\n    <optional>true</optional>\n</dependency>\n\nIDEA 配置：\nSettings → Build, Execution, Deployment → Compiler：\n✅ 勾选 Build project automatically（自动编译）\nSettings → Advanced Settings (高级设置)：\n✅ 勾选 Allow auto-make to start even if developed application is currently running\n触发更新：\n修改 Java 代码后按 Ctrl + F9（手动触发编译）\n修改静态资源（HTML/CSS/JS）会自动立即生效\n高级配置（可选）：\n  # application.properties\n  devtools:  \n add-properties:  \n   restart:  \n     enabled: true  #设置开启热部署  \n     additional-paths: src/main/java #重启目录  \n     exclude: WEB-INF/**\n  \n\n二、JRebel（商业方案）\n推荐指数：★★★★☆\n优势：瞬时热更新，无需重启，支持更多框架\n使用场景：大型项目或需要极致热部署体验\n安装插件：\nIDEA：Plugins 市场搜索 JRebel 安装\n激活授权：\n教育用户可申请免费授权\n或使用企业许可证\n启用方式：\n启动时选择 Run with JRebel 替代常规启动\n修改代码后直接保存即可生效\n三、IDEA 原生热加载\n推荐指数：★★★☆☆\n适用场景：简单修改验证（字段/日志等）\n开启配置：\nSettings → Build, Execution, Deployment → Debugger：\n✅ 勾选 HotSwap: Reload classes after compilation\n触发方式：\n修改代码后按 Ctrl + F9 编译\n通过 Debug模式 运行时，自动重载变更的类\n限制：无法修改方法签名/类结构等重大变更\n四、Spring Loaded（第三方方案）\n推荐指数：★★★☆☆\n配置方式：\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-maven-plugin</artifactId>\n            <dependencies>\n                <dependency>\n                    <groupId>org.springframework</groupId>\n                    <artifactId>springloaded</artifactId>\n                    <version>1.2.8.RELEASE</version>\n                </dependency>\n            </dependencies>\n        </plugin>\n    </plugins>\n</build>\n\n启动命令：\nmvn spring-boot:run\n\n▶️ 效果验证\n修改以下代码测试热部署：\n@RestController\npublic class TestController {\n    @GetMapping(\"/test\")\n    public String test() {\n        return \"修改前内容\";  // 改为其他内容保存测试\n    }\n}\n\n访问 http://localhost:8080/test 观察是否立即生效\n⚠️ 常见问题排查\n修改不生效：\n检查是否在 Debug 模式 下运行\n确认 IDEA 开启了自动编译（部分版本需手动配置）\n查看控制台是否有 Restarting... 日志输出\n静态资源未更新：\n清理浏览器缓存\n确认资源文件位于 src/main/resources/static\n类加载异常：\n重大结构修改仍需冷启动\n尝试使用 Build → Rebuild Project\n五、生产环境警告\n❗ 重要：所有热部署工具（包括 DevTools）都 不能用于生产环境！务必确保生产部署时已移除相关依赖。\n根据项目需求选择最适合的方案，一般推荐优先使用 DevTools + IDEA 原生热加载的组合，兼顾便捷性和稳定性。",
      "content": "Spring Boot 中实现热更新（热部署）可以显著提升开发效率，以下是几种主流的实现方案及详细配置步骤",
      "contentSnippet": "Spring Boot 中实现热更新（热部署）可以显著提升开发效率，以下是几种主流的实现方案及详细配置步骤",
      "guid": "https://www.blueke.top/posts/springboot%E5%BC%80%E5%90%AF%E7%83%AD%E6%9B%B4%E6%96%B0/",
      "categories": [
        "笔记",
        "SpringBoot",
        "Java",
        "Vue"
      ],
      "isoDate": "2025-03-22T19:17:00.000Z"
    },
    {
      "title": "使用mybatis代码生成器快速构建springboot项目",
      "link": "https://www.blueke.top/posts/%E4%BD%BF%E7%94%A8mybatis-plus%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BAspringboot%E9%A1%B9%E7%9B%AE/",
      "pubDate": "Sat, 22 Mar 2025 17:35:00 GMT",
      "content:encoded": "<p><a href=\"https://github.com/baomidou/mybatis-plus\">MyBatis-Plus</a> 是一个 <a href=\"https://www.mybatis.org/mybatis-3/\">MyBatis</a> 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。\n&lt;!--more--&gt;</p>\n<h2>配置</h2>\n<p>首先你的项目里需要有这三个依赖</p>\n<pre><code>\t&lt;!-- freemarker --&gt;\n   &lt;dependency&gt;\n       &lt;groupId&gt;org.freemarker&lt;/groupId&gt;\n       &lt;artifactId&gt;freemarker&lt;/artifactId&gt;\n   &lt;/dependency&gt;\n   &lt;!-- mybatis-plus --&gt;\n   &lt;dependency&gt;\n       &lt;groupId&gt;com.baomidou&lt;/groupId&gt;\n       &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;\n   &lt;/dependency&gt;\n   &lt;dependency&gt;\n       &lt;groupId&gt;com.baomidou&lt;/groupId&gt;\n       &lt;artifactId&gt;mybatis-plus-generator&lt;/artifactId&gt;\n   &lt;/dependency&gt;\n   &lt;!-- 以下应该也需要 --&gt;\n    &lt;!-- web --&gt;\n   &lt;dependency&gt;\n       &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n       &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n   &lt;/dependency&gt;\n</code></pre>\n<h2>编写代码生成器</h2>\n<p><code>src/test/java</code> 路径下新建一个 <code>AutoCodeGenerator</code> 类</p>\n<pre><code>// src/test/java\npublic class AutoCodeGenerator {  \n    public static void main(String[] args) {  \n        String url = \"jdbc:mysql:///数据库名\";  \n        String username = \"root\";  \n        String password = \"root\";  \n        String author = \"lanke\";  \n        String outputDir = \"src\\\\main\\\\java\";  \n        String basePackage = \"com.lanke\";  \n        String moduleName = \"sys\";  \n        String mapperLocation = \"src\\\\main\\\\resources\\\\mapper\\\\\" + moduleName;  \n        String tableName = \"articles,users\";  \n        String tablePrefix = \"\";  \n        FastAutoGenerator.create(url, username, password)  \n                .globalConfig(builder -&gt; {  \n                    builder.author(author) // 设置作者  \n                            //.enableSwagger() // 开启 swagger 模式  \n                            //.fileOverride() // 覆盖已生成文件  \n                            .outputDir(outputDir); // 指定输出目录  \n                })  \n                .packageConfig(builder -&gt; {  \n                    builder.parent(basePackage) // 设置父包名  \n                            .moduleName(moduleName) // 设置父包模块名  \n                            .pathInfo(Collections.singletonMap(OutputFile.xml, mapperLocation)); // 设置mapperXml生成路径  \n                })  \n                .strategyConfig(builder -&gt; {  \n                    builder.addInclude(tableName) // 设置需要生成的表名  \n                            .addTablePrefix(tablePrefix); // 设置过滤表前缀  \n                })  \n                .templateEngine(new FreemarkerTemplateEngine()) // 使用Freemarker引擎模板，默认的是Velocity引擎模板  \n                .execute();  \n    }  \n}\n</code></pre>\n<p>根据自己的实际情况修改参数，然后运行即可</p>\n<h2>修改 swagger 模式</h2>\n<p>swagger 2 已经不支持 vue 3 了，因此你要是启用自带的 swagger 在代码里会直接报错\n为了让 MyBatis-Plus 代码生成器默认生成 OpenAPI3（原 Swagger3）注解，你需要 <strong>自定义模板</strong> 并调整生成配置。以下是详细步骤：</p>\n<hr />\n<h3><strong>步骤一：创建自定义模板</strong></h3>\n<ol>\n<li>\n<p>在 <code>resources</code> 目录下新建模板文件夹：</p>\n<pre><code>src/main/resources/templates/\n</code></pre>\n</li>\n<li>\n<p>创建自定义实体模板文件 <code>entity.java.ftl</code>，内容如下：</p>\n</li>\n</ol>\n<pre><code>package ${package.Entity};\n\n&lt;#list table.importPackages as pkg&gt;\nimport ${pkg};\n&lt;/#list&gt;\n&lt;#if swagger&gt;\nimport io.swagger.v3.oas.annotations.media.Schema;\n&lt;/#if&gt;\n&lt;#if entityLombokModel&gt;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n&lt;/#if&gt;\n\n/**\n * &lt;p&gt;\n * ${table.comment!}\n * &lt;/p&gt;\n */\n&lt;#if entityLombokModel&gt;\n@Data\n&lt;#if superEntityClass??&gt;\n@EqualsAndHashCode(callSuper = true)\n&lt;#else&gt;\n@EqualsAndHashCode(callSuper = false)\n&lt;/#if&gt;\n&lt;/#if&gt;\n&lt;#if swagger&gt;\n@Schema(name = \"${entity}\", description = \"${table.comment!}\")\n&lt;/#if&gt;\n&lt;#if table.convert&gt;\n@TableName(\"${schemaName}${table.name}\")\n&lt;/#if&gt;\npublic class ${entity} extends Model&lt;${entity}&gt; {\n&lt;#-- 字段循环 --&gt;\n&lt;#list table.fields as field&gt;\n    &lt;#if field.keyFlag&gt;\n        &lt;#assign keyPropertyName=\"${field.propertyName}\"/&gt;\n    &lt;/#if&gt;\n    &lt;#if field.comment!?length gt 0&gt;\n    /**\n     * ${field.comment}\n     */\n    &lt;/#if&gt;\n    &lt;#if swagger&gt;\n    @Schema(description = \"${field.comment!}\", example = \"&lt;#if field.type?contains('Integer')&gt;1&lt;#elseif field.type?contains('LocalDateTime')&gt;2025-03-22T10:15:30&lt;#else&gt;示例值&lt;/#if&gt;\")\n    &lt;/#if&gt;\n    private ${field.propertyType} ${field.propertyName};\n&lt;/#list&gt;\n}\n</code></pre>\n<hr />\n<h3><strong>步骤二：修改代码生成器配置</strong></h3>\n<p>更新你的 <code>AutoCodeGenerator</code> 类：</p>\n<pre><code>package com.lanke.editorboot;  \n  \nimport com.baomidou.mybatisplus.generator.FastAutoGenerator;  \nimport com.baomidou.mybatisplus.generator.config.OutputFile;  \nimport com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;  \n  \nimport java.util.Collections;  \n  \npublic class AutoCodeGenerator {  \n    public static void main(String[] args) {  \n        String url = \"jdbc:mysql:///editor\";  \n        String username = \"root\";  \n        String password = \"root\";  \n        String author = \"lanke\";  \n        String outputDir = \"src\\\\main\\\\java\";  \n        String basePackage = \"com.lanke\";  \n        String moduleName = \"sys\";  \n        String mapperLocation = \"src\\\\main\\\\resources\\\\mapper\\\\\" + moduleName;  \n        String tableName = \"articles,user\";  \n        String tablePrefix = \"\";  \n        FastAutoGenerator.create(url, username, password)  \n                .globalConfig(builder -&gt; {  \n                    builder.author(author) // 设置作者  \n                            .enableSwagger() // 开启 swagger 模式  \n                            //.fileOverride() // 覆盖已生成文件  \n                            .outputDir(outputDir); // 指定输出目录  \n                })  \n                .templateConfig(builder -&gt; {  \n                    // 关键：指定自定义模板路径  \n                    builder.entity(\"/templates/entity.java\");  \n                })  \n                .packageConfig(builder -&gt; {  \n                    builder.parent(basePackage) // 设置父包名  \n                            .moduleName(moduleName) // 设置父包模块名  \n                            .pathInfo(Collections.singletonMap(OutputFile.xml, mapperLocation)); // 设置mapperXml生成路径  \n                })  \n                .strategyConfig(builder -&gt; {  \n                    builder.addInclude(tableName) // 设置需要生成的表名  \n                            .addTablePrefix(tablePrefix); // 设置过滤表前缀  \n                })  \n                .templateEngine(new FreemarkerTemplateEngine()) // 使用Freemarker引擎模板，默认的是Velocity引擎模板  \n                .execute();  \n    }  \n}\n</code></pre>\n<hr />\n<blockquote>\n<p>PS：暂时停用，有点问题</p>\n</blockquote>\n<h4><strong>步骤三：验证生成的实体类</strong></h4>\n<p>生成的 <code>User.java</code> 示例：</p>\n<pre><code>@Schema(name = \"User\", description = \"用户表\")\npublic class User {\n    @Schema(description = \"用户ID\", example = \"1\")\n    private Integer id;\n    \n    @Schema(description = \"用户名\", example = \"admin\")\n    private String username;\n}\n</code></pre>\n<hr />\n<h4><strong>关键配置说明</strong></h4>\n<table>\n<thead>\n<tr>\n<th><strong>配置项</strong></th>\n<th><strong>作用</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>.enableSwagger()</code></td>\n<td>启用 Swagger 注解生成开关（虽然名字是 Swagger，但通过模板控制实际生成 OpenAPI3 注解）</td>\n</tr>\n<tr>\n<td><code>.templateConfig()</code></td>\n<td>指定自定义模板路径，覆盖默认模板</td>\n</tr>\n<tr>\n<td><code>entityBuilder().enableLombok()</code></td>\n<td>集成 Lombok 简化代码（可选）</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h4><strong>模板变量说明</strong></h4>\n<table>\n<thead>\n<tr>\n<th><strong>变量</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>${table.comment}</code></td>\n<td>表注释</td>\n</tr>\n<tr>\n<td><code>${field.comment}</code></td>\n<td>字段注释</td>\n</tr>\n<tr>\n<td><code>${field.propertyType}</code></td>\n<td>字段类型（如 <code>String</code>）</td>\n</tr>\n<tr>\n<td><code>${field.propertyName}</code></td>\n<td>字段名（如 <code>username</code>）</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h4><strong>常见问题解决</strong></h4>\n<ol>\n<li>\n<p><strong>模板不生效</strong></p>\n<ul>\n<li>检查模板路径是否在 <code>resources/templates/</code> 下</li>\n<li>确保模板文件名与配置一致（如 <code>entity.java</code> 对应 <code>entity.java.ftl</code>）</li>\n</ul>\n</li>\n<li>\n<p><strong>示例值不符合类型</strong><br />\n修改模板中的 <code>example</code> 生成逻辑：</p>\n<pre><code>example = \"&lt;#if field.propertyType == 'Integer'&gt;1&lt;#elseif field.propertyType == 'LocalDateTime'&gt;2025-03-22T10:15:30&lt;#else&gt;示例值&lt;/#if&gt;\"\n</code></pre>\n</li>\n<li>\n<p><strong>日期格式问题</strong><br />\n添加 <code>format</code> 参数：</p>\n<pre><code>&lt;#if field.propertyType == 'LocalDateTime'&gt;\n@Schema(description = \"${field.comment!}\", format = \"date-time\", example = \"2025-03-22T10:15:30\")\n&lt;/#if&gt;\n</code></pre>\n</li>\n</ol>\n<hr />\n<p>通过这种方式，MyBatis-Plus 代码生成器将默认生成符合 OpenAPI3 规范的注解，与 Knife4j 完美兼容。</p>\n<h2>测试</h2>\n<p>在程序入口添加一行注解 <code>@MapperScan(\"com.lanke.*.mapper\")</code>\n包名换成自己的\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/%E4%BD%BF%E7%94%A8mybatis-plus%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BAspringboot%E9%A1%B9%E7%9B%AE-202503221808.png\" alt=\"使用mybatis-plus代码生成器快速构建springboot项目-202503221808|625\" />\n在 <code>test/java</code> 里修改代码 <img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/%E4%BD%BF%E7%94%A8mybatis-plus%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BAspringboot%E9%A1%B9%E7%9B%AE-202503221855.png\" alt=\"使用mybatis-plus代码生成器快速构建springboot项目-202503221855|625\" /></p>\n<p>执行就能看见数据库里的数据被输出出来了</p>\n<p>再写一个测试接口<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/%E4%BD%BF%E7%94%A8mybatis-plus%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BAspringboot%E9%A1%B9%E7%9B%AE-202503221924.png\" alt=\"使用mybatis-plus代码生成器快速构建springboot项目-202503221924|475\" /></p>\n<blockquote>\n<p>PS：你的程序入口要和 sys 在同一目录下，否则会 404</p>\n</blockquote>\n<p>运行成功<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/%E4%BD%BF%E7%94%A8mybatis-plus%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BAspringboot%E9%A1%B9%E7%9B%AE-202503221932.png\" alt=\"使用mybatis-plus代码生成器快速构建springboot项目-202503221932|475\" /></p>\n",
      "content:encodedSnippet": "MyBatis-Plus 是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。\n<!--more-->\n配置\n首先你的项目里需要有这三个依赖\n\t<!-- freemarker -->\n   <dependency>\n       <groupId>org.freemarker</groupId>\n       <artifactId>freemarker</artifactId>\n   </dependency>\n   <!-- mybatis-plus -->\n   <dependency>\n       <groupId>com.baomidou</groupId>\n       <artifactId>mybatis-plus-boot-starter</artifactId>\n   </dependency>\n   <dependency>\n       <groupId>com.baomidou</groupId>\n       <artifactId>mybatis-plus-generator</artifactId>\n   </dependency>\n   <!-- 以下应该也需要 -->\n    <!-- web -->\n   <dependency>\n       <groupId>org.springframework.boot</groupId>\n       <artifactId>spring-boot-starter-web</artifactId>\n   </dependency>\n\n编写代码生成器\nsrc/test/java 路径下新建一个 AutoCodeGenerator 类\n// src/test/java\npublic class AutoCodeGenerator {  \n    public static void main(String[] args) {  \n        String url = \"jdbc:mysql:///数据库名\";  \n        String username = \"root\";  \n        String password = \"root\";  \n        String author = \"lanke\";  \n        String outputDir = \"src\\\\main\\\\java\";  \n        String basePackage = \"com.lanke\";  \n        String moduleName = \"sys\";  \n        String mapperLocation = \"src\\\\main\\\\resources\\\\mapper\\\\\" + moduleName;  \n        String tableName = \"articles,users\";  \n        String tablePrefix = \"\";  \n        FastAutoGenerator.create(url, username, password)  \n                .globalConfig(builder -> {  \n                    builder.author(author) // 设置作者  \n                            //.enableSwagger() // 开启 swagger 模式  \n                            //.fileOverride() // 覆盖已生成文件  \n                            .outputDir(outputDir); // 指定输出目录  \n                })  \n                .packageConfig(builder -> {  \n                    builder.parent(basePackage) // 设置父包名  \n                            .moduleName(moduleName) // 设置父包模块名  \n                            .pathInfo(Collections.singletonMap(OutputFile.xml, mapperLocation)); // 设置mapperXml生成路径  \n                })  \n                .strategyConfig(builder -> {  \n                    builder.addInclude(tableName) // 设置需要生成的表名  \n                            .addTablePrefix(tablePrefix); // 设置过滤表前缀  \n                })  \n                .templateEngine(new FreemarkerTemplateEngine()) // 使用Freemarker引擎模板，默认的是Velocity引擎模板  \n                .execute();  \n    }  \n}\n\n根据自己的实际情况修改参数，然后运行即可\n修改 swagger 模式\nswagger 2 已经不支持 vue 3 了，因此你要是启用自带的 swagger 在代码里会直接报错\n为了让 MyBatis-Plus 代码生成器默认生成 OpenAPI3（原 Swagger3）注解，你需要 自定义模板 并调整生成配置。以下是详细步骤：\n步骤一：创建自定义模板\n在 resources 目录下新建模板文件夹：\nsrc/main/resources/templates/\n\n创建自定义实体模板文件 entity.java.ftl，内容如下：\npackage ${package.Entity};\n\n<#list table.importPackages as pkg>\nimport ${pkg};\n</#list>\n<#if swagger>\nimport io.swagger.v3.oas.annotations.media.Schema;\n</#if>\n<#if entityLombokModel>\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n</#if>\n\n/**\n * <p>\n * ${table.comment!}\n * </p>\n */\n<#if entityLombokModel>\n@Data\n<#if superEntityClass??>\n@EqualsAndHashCode(callSuper = true)\n<#else>\n@EqualsAndHashCode(callSuper = false)\n</#if>\n</#if>\n<#if swagger>\n@Schema(name = \"${entity}\", description = \"${table.comment!}\")\n</#if>\n<#if table.convert>\n@TableName(\"${schemaName}${table.name}\")\n</#if>\npublic class ${entity} extends Model<${entity}> {\n<#-- 字段循环 -->\n<#list table.fields as field>\n    <#if field.keyFlag>\n        <#assign keyPropertyName=\"${field.propertyName}\"/>\n    </#if>\n    <#if field.comment!?length gt 0>\n    /**\n     * ${field.comment}\n     */\n    </#if>\n    <#if swagger>\n    @Schema(description = \"${field.comment!}\", example = \"<#if field.type?contains('Integer')>1<#elseif field.type?contains('LocalDateTime')>2025-03-22T10:15:30<#else>示例值</#if>\")\n    </#if>\n    private ${field.propertyType} ${field.propertyName};\n</#list>\n}\n\n步骤二：修改代码生成器配置\n更新你的 AutoCodeGenerator 类：\npackage com.lanke.editorboot;  \n  \nimport com.baomidou.mybatisplus.generator.FastAutoGenerator;  \nimport com.baomidou.mybatisplus.generator.config.OutputFile;  \nimport com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;  \n  \nimport java.util.Collections;  \n  \npublic class AutoCodeGenerator {  \n    public static void main(String[] args) {  \n        String url = \"jdbc:mysql:///editor\";  \n        String username = \"root\";  \n        String password = \"root\";  \n        String author = \"lanke\";  \n        String outputDir = \"src\\\\main\\\\java\";  \n        String basePackage = \"com.lanke\";  \n        String moduleName = \"sys\";  \n        String mapperLocation = \"src\\\\main\\\\resources\\\\mapper\\\\\" + moduleName;  \n        String tableName = \"articles,user\";  \n        String tablePrefix = \"\";  \n        FastAutoGenerator.create(url, username, password)  \n                .globalConfig(builder -> {  \n                    builder.author(author) // 设置作者  \n                            .enableSwagger() // 开启 swagger 模式  \n                            //.fileOverride() // 覆盖已生成文件  \n                            .outputDir(outputDir); // 指定输出目录  \n                })  \n                .templateConfig(builder -> {  \n                    // 关键：指定自定义模板路径  \n                    builder.entity(\"/templates/entity.java\");  \n                })  \n                .packageConfig(builder -> {  \n                    builder.parent(basePackage) // 设置父包名  \n                            .moduleName(moduleName) // 设置父包模块名  \n                            .pathInfo(Collections.singletonMap(OutputFile.xml, mapperLocation)); // 设置mapperXml生成路径  \n                })  \n                .strategyConfig(builder -> {  \n                    builder.addInclude(tableName) // 设置需要生成的表名  \n                            .addTablePrefix(tablePrefix); // 设置过滤表前缀  \n                })  \n                .templateEngine(new FreemarkerTemplateEngine()) // 使用Freemarker引擎模板，默认的是Velocity引擎模板  \n                .execute();  \n    }  \n}\n\nPS：暂时停用，有点问题\n步骤三：验证生成的实体类\n生成的 User.java 示例：\n@Schema(name = \"User\", description = \"用户表\")\npublic class User {\n    @Schema(description = \"用户ID\", example = \"1\")\n    private Integer id;\n    \n    @Schema(description = \"用户名\", example = \"admin\")\n    private String username;\n}\n\n关键配置说明\n配置项\n作用\n\n\n\n\n.enableSwagger()\n启用 Swagger 注解生成开关（虽然名字是 Swagger，但通过模板控制实际生成 OpenAPI3 注解）\n\n\n.templateConfig()\n指定自定义模板路径，覆盖默认模板\n\n\nentityBuilder().enableLombok()\n集成 Lombok 简化代码（可选）\n\n\n\n\n模板变量说明\n变量\n说明\n\n\n\n\n${table.comment}\n表注释\n\n\n${field.comment}\n字段注释\n\n\n${field.propertyType}\n字段类型（如 String）\n\n\n${field.propertyName}\n字段名（如 username）\n\n\n\n\n常见问题解决\n模板不生效\n检查模板路径是否在 resources/templates/ 下\n确保模板文件名与配置一致（如 entity.java 对应 entity.java.ftl）\n示例值不符合类型\nexample 生成逻辑：\nexample = \"<#if field.propertyType == 'Integer'>1<#elseif field.propertyType == 'LocalDateTime'>2025-03-22T10:15:30<#else>示例值</#if>\"\n\n日期格式问题\nformat 参数：\n<#if field.propertyType == 'LocalDateTime'>\n@Schema(description = \"${field.comment!}\", format = \"date-time\", example = \"2025-03-22T10:15:30\")\n</#if>\n\n通过这种方式，MyBatis-Plus 代码生成器将默认生成符合 OpenAPI3 规范的注解，与 Knife4j 完美兼容。\n测试\n在程序入口添加一行注解 @MapperScan(\"com.lanke.*.mapper\")\n包名换成自己的\n\n在 test/java 里修改代码 \n执行就能看见数据库里的数据被输出出来了\n再写一个测试接口\nPS：你的程序入口要和 sys 在同一目录下，否则会 404\n运行成功",
      "content": "快速构建springboot项目",
      "contentSnippet": "快速构建springboot项目",
      "guid": "https://www.blueke.top/posts/%E4%BD%BF%E7%94%A8mybatis-plus%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BAspringboot%E9%A1%B9%E7%9B%AE/",
      "categories": [
        "Java",
        "SpringBoot"
      ],
      "isoDate": "2025-03-22T17:35:00.000Z"
    },
    {
      "title": "MySQL9.2版本安装",
      "link": "https://www.blueke.top/posts/mysql92%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85/",
      "pubDate": "Fri, 21 Mar 2025 11:31:00 GMT",
      "content:encoded": "<p>电脑一重装，我的数据库又又没了，每次配置都要慢慢折腾，还经常有问题，索性写一个完整过程了。\n&lt;!--more--&gt;</p>\n<h2>下载</h2>\n<p>下载地址：<a href=\"https://dev.mysql.com/downloads/mysql/\">MySQL</a></p>\n<h3>安装</h3>\n<ol>\n<li>接受协议，点击 <code>next</code></li>\n<li>选择 <code>custom</code>，自定义安装 <img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211135.png\" alt=\"MySQL9.2版本安装-202503211135|450\" /></li>\n<li>最下面可以更改安装路径，默认 C 盘，选择好之后点击 <code>next</code> ，然后点击 <code>install</code> 安装 <img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211136.png\" alt=\"MySQL9.2版本安装-202503211136|450\" /></li>\n<li>安装好后勾选下面的选项，还需要进行配置<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211139.png\" alt=\"MySQL9.2版本安装-202503211139|450\" /></li>\n<li>data数据存放目录，现在还没办法更改，所以我们直接点击下一步<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211141.png\" alt=\"MySQL9.2版本安装-202503211141|450\" /></li>\n<li>这一页默认即可，点击下一步<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211144.png\" alt=\"MySQL9.2版本安装-202503211144|450\" /></li>\n<li>设置密码，也可以添加用户，设置好后点击下一步<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211145.png\" alt=\"MySQL9.2版本安装-202503211145|450\" /></li>\n<li>保持默认，下一步<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211146.png\" alt=\"MySQL9.2版本安装-202503211146|450\" /></li>\n<li>保持默认，下一步<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211147.png\" alt=\"MySQL9.2版本安装-202503211147|450\" /></li>\n<li>这里给了两个示例数据库，可以勾选看一下，不选也没什么<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211149.png\" alt=\"MySQL9.2版本安装-202503211149|450\" /></li>\n<li>点击 <code>excute</code>，正常情况下会全部通过 <img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211150.png\" alt=\"MySQL9.2版本安装-202503211150|450\" /> 但如果你和我一样，那就很可能是因为你的 MySQL 配置文件中出现了中文(log 中有中文乱码)</li>\n</ol>\n<blockquote>\n<p>解决方法：进入到 <code>C:\\ProgramData\\MySQL</code> 下，找到你所安装的数据库，找到 <code>my.ini</code> 文件，将所有中文换成英文\n如果权限不足无法保存，右键该文件=&gt;属性=&gt;安全=&gt;将用户权限全勾上即可</p>\n</blockquote>\n<ol>\n<li>点击下一步 <img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211213.png\" alt=\"MySQL9.2版本安装-202503211213|450\" /></li>\n<li>点击 finish 安装即可完成</li>\n</ol>\n<h4>修改数据路径</h4>\n<p>如果你想修改数据地址，找到上面的 <code>my.ini</code>，修改这一行即可</p>\n<pre><code>datadir= 你的路径/Data\n</code></pre>\n<p>然后原来的文件夹下有个 Data，复制过去即可(还有个 uploads 文件夹，也可以这么更改)\n最后在任务管理器重新启动数据库服务即可\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/MySQL9.2%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85-202503211236.png\" alt=\"MySQL9.2版本安装-202503211236|450\" /></p>\n<h4>Navicat</h4>\n<p>Navicat 是个非常好用的数据库管理软件，现在也出了 lite 版可以免费使用\n下载地址：<a href=\"https://www.navicat.com.cn/download/navicat-premium-lite\">Navicat | 免费下载 Navicat Premium Lite</a></p>\n",
      "content:encodedSnippet": "电脑一重装，我的数据库又又没了，每次配置都要慢慢折腾，还经常有问题，索性写一个完整过程了。\n<!--more-->\n下载\n下载地址：MySQL\n安装\n接受协议，点击 next\n选择 custom，自定义安装 \n最下面可以更改安装路径，默认 C 盘，选择好之后点击 next ，然后点击 install 安装 \n安装好后勾选下面的选项，还需要进行配置\ndata数据存放目录，现在还没办法更改，所以我们直接点击下一步\n这一页默认即可，点击下一步\n设置密码，也可以添加用户，设置好后点击下一步\n保持默认，下一步\n保持默认，下一步\n这里给了两个示例数据库，可以勾选看一下，不选也没什么\n点击 excute，正常情况下会全部通过  但如果你和我一样，那就很可能是因为你的 MySQL 配置文件中出现了中文(log 中有中文乱码)\n解决方法：进入到 C:\\ProgramData\\MySQL 下，找到你所安装的数据库，找到 my.ini 文件，将所有中文换成英文\n如果权限不足无法保存，右键该文件=>属性=>安全=>将用户权限全勾上即可\n点击下一步 \n点击 finish 安装即可完成\n修改数据路径\n如果你想修改数据地址，找到上面的 my.ini，修改这一行即可\ndatadir= 你的路径/Data\n\n然后原来的文件夹下有个 Data，复制过去即可(还有个 uploads 文件夹，也可以这么更改)\n最后在任务管理器重新启动数据库服务即可\n\nNavicat\nNavicat 是个非常好用的数据库管理软件，现在也出了 lite 版可以免费使用\n下载地址：Navicat | 免费下载 Navicat Premium Lite",
      "guid": "https://www.blueke.top/posts/mysql92%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85/",
      "categories": [
        "数据库",
        "笔记"
      ],
      "isoDate": "2025-03-21T11:31:00.000Z"
    },
    {
      "title": "hexo博客进行谷歌、bing收录",
      "link": "https://www.blueke.top/posts/hexo%E5%8D%9A%E5%AE%A2%E8%BF%9B%E8%A1%8C%E8%B0%B7%E6%AD%8Cbing%E6%94%B6%E5%BD%95/",
      "pubDate": "Mon, 17 Mar 2025 13:55:26 GMT",
      "content:encoded": "<p>博客运行了也有一年多了，但是几乎没有人访问多少有点寂寞了，所以来折腾一下搜索引擎收录\n&lt;!--more--&gt;</p>\n<h2>推送插件</h2>\n<p>这里我是用的是 <a href=\"https://github.com/tardis-ksh/hexo-seo-submit\">hexo-seo-submit</a> 插件，这个插件支持在 Github 和 Coding 平台中每天自动提交你的最新文章链接（或本地手动）至搜索引擎，让搜索引擎更快的收录你的文章。\n要想知道直接的博客是否被搜索引擎搜录，可在搜索引擎下搜索:</p>\n<pre><code>site:你的域名\n</code></pre>\n<h3>安装</h3>\n<pre><code>npm install hexo-seo-submit\n</code></pre>\n<h3>本地配置</h3>\n<p>我使用的是本地配置，如果想要别的配置方式，也可以参考作者的文章 <a href=\"https://ksh7.com/posts/docs-hexo-seo-submit/index.html#%E4%BD%BF%E7%94%A8\">hexo-seo-submit使用</a>\n作者的文章还是十分详尽的。</p>\n<ol>\n<li>首先我们要在本地的 <code>_config.yml</code> 中添加以下配置</li>\n</ol>\n<pre><code>hexo-seo-submit:\n  baidu:\n    enable: true # 是否启用\n    token: you baidu token # token\n  google:\n    enable: true\n    accountKeysJSonFile: google.json # 谷歌账户密钥文件路径，默认 root 目录寻找\n    proxy: http://127.0.0.1:7890 #代理，防止谷歌无法收录\n  bing:\n    enable: true\n    apiKey: your bing api key\n\n# 注意在此处配置\ndeploy:\n  - type: hexo-seo-submit\n</code></pre>\n<h3>申请凭证</h3>\n<h3>百度 Baidu</h3>\n<ol>\n<li>登录到<a href=\"https://ziyuan.baidu.com/site/index#/\">站点管理</a>，添加站点，我选择的是 html 文件验证，将文件下载放到 source 文件夹下\nPS：如果验证不通过，可能是 hexo 把 layout 元素也渲染到这个页面了，添加属性隐藏即可(谷歌、Bing 应该也有这个问题)</li>\n</ol>\n<pre><code>---\nlayout: false\n---\n055171964\n</code></pre>\n<ol>\n<li>验证成功后选择普通收录，将 token 添加到配置即可</li>\n</ol>\n<h3>谷歌 Google</h3>\n<ol>\n<li>进入 <a href=\"https://console.cloud.google.com/apis/library/indexing.googleapis.com\">Web Search Indexing API</a>，选择项目并启用API‘，没有可新建一个</li>\n<li>点击<code>管理</code>按钮（API启用后即可看到），进入<code>凭据</code>菜单，选择<code>创建凭据</code> =&gt; <code>服务账号</code></li>\n<li>填写 <code>服务账号ID</code> ，<code>服务名称</code> 可选，随后可直接点击 <code>完成</code></li>\n<li>点击创建好的<a href=\"https://console.cloud.google.com/apis/credentials\">服务密钥</a>，点击 <code>密钥</code> =&gt; <code>添加密钥</code>，选择 <code>创建新密钥</code>，选择 <code>JSON</code> 格式，点击 <code>创建</code>，下载 json 文件</li>\n<li>下载好的 json 文件就是上面 <code>accountKeysJSonFile</code> 的路径值，放到博客目录里(我是直接重命名成google. json了)</li>\n<li>验证。打开 <a href=\"https://search.google.com/search-console/users\">google search-console</a> 进行网址认证，我选择的是 html 文件认证，因为我的主题不太方便插入标记。将 html 文件直接放到 source 文件夹里即可，然后点击验证即可通过。</li>\n<li>然后再 <code>设置</code> =&gt; <code>用户和权限</code> =&gt; <code>添加用户</code>，邮箱为 <code>client_email</code> (json文件里有，google 控制台也能找到)</li>\n</ol>\n<p>然后谷歌的凭证就申请好了，打开 https://console.cloud.google.com/apis/api/indexing.googleapis.com/metrics ，选择你的项目，进行验证。(一般需要 48 小时)</p>\n<p>这时候你去搜索 <code>site:你的站点</code> 应该就能访问到了\nPS:</p>\n<h3>必应 Bing</h3>\n<p>有了谷歌的基础，Bing 就很简单了</p>\n<ol>\n<li>打开 https://www.bing.com/webmasters/home ，选择谷歌账号登录（可同步 Google Search Console，无需再验证）</li>\n<li>点击右上角的 <code>设置</code> =&gt; <code>API 访问</code> =&gt; 复制 API 密钥，然后在配置中填入即可\n在 <code>url 提交</code> 菜单中可查看是否成功(也需要 48 小时)</li>\n</ol>\n<h2>修改链接地址</h2>\n<p>我的博客地址是 hexo 默认的 <code>:year/:month/:day/:title</code>，也就是按照年、月、日、标题来生成固定链接的。如 <code>http://xxx.yy.com/2025/03/18/hello-world</code> 感觉非常的长啊，不利于收录。\n这里我用的是 <a href=\"https://github.com/ohroy/hexo-abbrlink\">hexo-abbrlink</a>，感觉还是很不错的</p>\n<h3>安装插件</h3>\n<pre><code>npm install hexo-abbrlink --save\n</code></pre>\n<h3>修改配置</h3>\n<p>修改原有的配置文件(<code>_config. yml</code>)</p>\n<pre><code>permalink: posts/:abbrlink.html  # 此处可以自己设置，也可以直接使用 :/abbrlink\n# abbrlink config  \nabbrlink:  \n  alg: crc16      #support crc16(default) and crc32  \n  rep: hex        #support dec(default) and hex  \n  drafts: false   #(true)处理草稿，(false)不处理草稿。false（默认值）  \n  # 从目录树生成类别  \n  # 深度：要生成的目录树的最大深度应大于0  \n  auto_category:  \n    enable: true  #true(default)  \n    depth:        #3(default)  \n    over_write: false   \n  auto_title: false #启用自动标题，可以按路径自动填充标题  \n  auto_date: false #启用自动日期，它可以自动填写日期的时间今天  \n  force: false #启用强制模式，在这种模式下，插件将忽略缓存，并为每个帖子计算abbrlink，即使它已经有了abbrlink。\n</code></pre>\n<p>然后更新博客即可</p>\n<h2>站点地图</h2>\n<p>hexo 的网页结构可能被搜索引擎错误识别，这时候我们需要提供站点地图</p>\n<pre><code>npm install hexo-generator-sitemap --save\t\t    #sitemap.xml适合提交给谷歌搜素引擎\nnpm install hexo-generator-baidu-sitemap --save\t\t#baidusitemap.xml适合提交百度搜索引擎\n</code></pre>\n<p>修改配置文件</p>\n<pre><code># 自动生成sitemap\nsitemap:\n\tpath: sitemap.xml\nbaidusitemap:\n\tpath: baidusitemap.xml\n</code></pre>\n<p>然后执行一遍 <code>hexo g</code>，我们就能在 <code>public</code> 目录下找到 sitmap 文件了\n然后去到搜索引擎平台，提交站点地图即可</p>\n<blockquote>\n<p>比如我的是</p>\n<pre><code>https://www.blueke.top/sitemap.xml\n</code></pre>\n</blockquote>\n<h2>蜘蛛协议</h2>\n<ul>\n<li>搜索引擎用来爬行和抓取页面的程序也就是我们熟知的蜘蛛（spider），也称为机器人（bot）。spider 访问网站页面类似于普通用户使用的浏览器。spider 发出页面访问请求后，服务器返回 HTML 代码，spider 把收到的程序存入原始页面数据库。为了提高爬行和抓取速度，搜索引擎通常或多个 spider 并行爬行</li>\n<li>spider 访问任何一个网站时，都会先访问该网站根目录下的 rotbots.txt 文件。该文件可以告诉 spider 哪些文件或目录可以抓取或者禁止抓取</li>\n<li>根据以上内容，我们可以通过设置 rotbots.txt 文件来进行相应设置</li>\n</ul>\n<h3>配置</h3>\n<p>在 <code>hexo/source</code> 文件夹下新建 <code>robots.txt</code> 文件，文件内容如下：</p>\n<pre><code>User-agent: *\nAllow: /\nAllow: /archives/\nAllow: /categories/\nAllow: /tags/ \nAllow: /resources/ \nDisallow: /vendors/\nDisallow: /js/\nDisallow: /css/\nDisallow: /fonts/\nDisallow: /vendors/\nDisallow: /fancybox/\n# 下面中间部分写你自己的域名\nSitemap: https://你的域名/sitemap.xml\nSitemap: https://你的域名/baidusitemap.xml\n</code></pre>\n<ul>\n<li><code>Allow</code> 字段的值即为允许搜索引擎爬区的内容<br />\n<code>Disallow</code> 字段的值为不允许搜索引擎爬区的内容<br />\n<code>Sitemap</code> 字段的值就是网站地图，专门给爬虫用的</li>\n<li>对于允许不允许的值，可以对应到主题配置文件中的 menu 目录配置，如果菜单栏还有其他选项都可以按照格式自行添加</li>\n</ul>\n<h3>下面未完成，待完善</h3>\n<h4>压缩文件</h4>\n<p>#新对话</p>\n<p>{% link https://www.wrysmile.cn/Hexo-03.html %}</p>\n<hr />\n<p>![[hexo博客进行谷歌、bing收录-202503181213.png]]</p>\n<p>压缩后\n![[hexo博客进行谷歌、bing收录-202503181214.png]]</p>\n<h4>参考来源</h4>\n<ul>\n<li><a href=\"https://ksh7.com/posts/docs-hexo-seo-submit/index.html#%E4%BD%BF%E7%94%A8\">hexo-seo-submit使用</a></li>\n<li><a href=\"https://www.wrysmile.cn/Hexo-03.html\">Hexo博客之高级优化教程 | Wrysmile 的博客</a></li>\n</ul>\n",
      "content:encodedSnippet": "博客运行了也有一年多了，但是几乎没有人访问多少有点寂寞了，所以来折腾一下搜索引擎收录\n<!--more-->\n推送插件\n这里我是用的是 hexo-seo-submit 插件，这个插件支持在 Github 和 Coding 平台中每天自动提交你的最新文章链接（或本地手动）至搜索引擎，让搜索引擎更快的收录你的文章。\n要想知道直接的博客是否被搜索引擎搜录，可在搜索引擎下搜索:\nsite:你的域名\n\n安装\nnpm install hexo-seo-submit\n\n本地配置\n我使用的是本地配置，如果想要别的配置方式，也可以参考作者的文章 hexo-seo-submit使用\n作者的文章还是十分详尽的。\n首先我们要在本地的 _config.yml 中添加以下配置\nhexo-seo-submit:\n  baidu:\n    enable: true # 是否启用\n    token: you baidu token # token\n  google:\n    enable: true\n    accountKeysJSonFile: google.json # 谷歌账户密钥文件路径，默认 root 目录寻找\n    proxy: http://127.0.0.1:7890 #代理，防止谷歌无法收录\n  bing:\n    enable: true\n    apiKey: your bing api key\n\n# 注意在此处配置\ndeploy:\n  - type: hexo-seo-submit\n\n申请凭证\n百度 Baidu\n登录到站点管理，添加站点，我选择的是 html 文件验证，将文件下载放到 source 文件夹下\nPS：如果验证不通过，可能是 hexo 把 layout 元素也渲染到这个页面了，添加属性隐藏即可(谷歌、Bing 应该也有这个问题)\n---\nlayout: false\n---\n055171964\n\n验证成功后选择普通收录，将 token 添加到配置即可\n谷歌 Google\n进入 Web Search Indexing API，选择项目并启用API‘，没有可新建一个\n点击管理按钮（API启用后即可看到），进入凭据菜单，选择创建凭据 => 服务账号\n填写 服务账号ID ，服务名称 可选，随后可直接点击 完成\n点击创建好的服务密钥，点击 密钥 => 添加密钥，选择 创建新密钥，选择 JSON 格式，点击 创建，下载 json 文件\n下载好的 json 文件就是上面 accountKeysJSonFile 的路径值，放到博客目录里(我是直接重命名成google. json了)\n验证。打开 google search-console 进行网址认证，我选择的是 html 文件认证，因为我的主题不太方便插入标记。将 html 文件直接放到 source 文件夹里即可，然后点击验证即可通过。\n然后再 设置 => 用户和权限 => 添加用户，邮箱为 client_email (json文件里有，google 控制台也能找到)\n然后谷歌的凭证就申请好了，打开 https://console.cloud.google.com/apis/api/indexing.googleapis.com/metrics ，选择你的项目，进行验证。(一般需要 48 小时)\n这时候你去搜索 site:你的站点 应该就能访问到了\nPS:\n必应 Bing\n有了谷歌的基础，Bing 就很简单了\n打开 https://www.bing.com/webmasters/home ，选择谷歌账号登录（可同步 Google Search Console，无需再验证）\n点击右上角的 设置 => API 访问 => 复制 API 密钥，然后在配置中填入即可\n在 url 提交 菜单中可查看是否成功(也需要 48 小时)\n修改链接地址\n我的博客地址是 hexo 默认的 :year/:month/:day/:title，也就是按照年、月、日、标题来生成固定链接的。如 http://xxx.yy.com/2025/03/18/hello-world 感觉非常的长啊，不利于收录。\n这里我用的是 hexo-abbrlink，感觉还是很不错的\n安装插件\nnpm install hexo-abbrlink --save\n\n修改配置\n修改原有的配置文件(_config. yml)\npermalink: posts/:abbrlink.html  # 此处可以自己设置，也可以直接使用 :/abbrlink\n# abbrlink config  \nabbrlink:  \n  alg: crc16      #support crc16(default) and crc32  \n  rep: hex        #support dec(default) and hex  \n  drafts: false   #(true)处理草稿，(false)不处理草稿。false（默认值）  \n  # 从目录树生成类别  \n  # 深度：要生成的目录树的最大深度应大于0  \n  auto_category:  \n    enable: true  #true(default)  \n    depth:        #3(default)  \n    over_write: false   \n  auto_title: false #启用自动标题，可以按路径自动填充标题  \n  auto_date: false #启用自动日期，它可以自动填写日期的时间今天  \n  force: false #启用强制模式，在这种模式下，插件将忽略缓存，并为每个帖子计算abbrlink，即使它已经有了abbrlink。\n\n然后更新博客即可\n站点地图\nhexo 的网页结构可能被搜索引擎错误识别，这时候我们需要提供站点地图\nnpm install hexo-generator-sitemap --save\t\t    #sitemap.xml适合提交给谷歌搜素引擎\nnpm install hexo-generator-baidu-sitemap --save\t\t#baidusitemap.xml适合提交百度搜索引擎\n\n修改配置文件\n# 自动生成sitemap\nsitemap:\n\tpath: sitemap.xml\nbaidusitemap:\n\tpath: baidusitemap.xml\n\n然后执行一遍 hexo g，我们就能在 public 目录下找到 sitmap 文件了\n然后去到搜索引擎平台，提交站点地图即可\n比如我的是\nhttps://www.blueke.top/sitemap.xml\n\n蜘蛛协议\n搜索引擎用来爬行和抓取页面的程序也就是我们熟知的蜘蛛（spider），也称为机器人（bot）。spider 访问网站页面类似于普通用户使用的浏览器。spider 发出页面访问请求后，服务器返回 HTML 代码，spider 把收到的程序存入原始页面数据库。为了提高爬行和抓取速度，搜索引擎通常或多个 spider 并行爬行\nspider 访问任何一个网站时，都会先访问该网站根目录下的 rotbots.txt 文件。该文件可以告诉 spider 哪些文件或目录可以抓取或者禁止抓取\n根据以上内容，我们可以通过设置 rotbots.txt 文件来进行相应设置\n配置\n在 hexo/source 文件夹下新建 robots.txt 文件，文件内容如下：\nUser-agent: *\nAllow: /\nAllow: /archives/\nAllow: /categories/\nAllow: /tags/ \nAllow: /resources/ \nDisallow: /vendors/\nDisallow: /js/\nDisallow: /css/\nDisallow: /fonts/\nDisallow: /vendors/\nDisallow: /fancybox/\n# 下面中间部分写你自己的域名\nSitemap: https://你的域名/sitemap.xml\nSitemap: https://你的域名/baidusitemap.xml\n\nAllow 字段的值即为允许搜索引擎爬区的内容\nDisallow 字段的值为不允许搜索引擎爬区的内容\nSitemap 字段的值就是网站地图，专门给爬虫用的\n对于允许不允许的值，可以对应到主题配置文件中的 menu 目录配置，如果菜单栏还有其他选项都可以按照格式自行添加\n下面未完成，待完善\n压缩文件\n#新对话\n{% link https://www.wrysmile.cn/Hexo-03.html %}\n![[hexo博客进行谷歌、bing收录-202503181213.png]]\n压缩后\n![[hexo博客进行谷歌、bing收录-202503181214.png]]\n参考来源\nhexo-seo-submit使用\nHexo博客之高级优化教程 | Wrysmile 的博客",
      "guid": "https://www.blueke.top/posts/hexo%E5%8D%9A%E5%AE%A2%E8%BF%9B%E8%A1%8C%E8%B0%B7%E6%AD%8Cbing%E6%94%B6%E5%BD%95/",
      "categories": [
        "博客",
        "Hexo"
      ],
      "isoDate": "2025-03-17T13:55:26.000Z"
    },
    {
      "title": "Android Studio的部署",
      "link": "https://www.blueke.top/posts/android-studio%E7%9A%84%E9%83%A8%E7%BD%B2/",
      "pubDate": "Tue, 11 Mar 2025 19:26:00 GMT",
      "content:encoded": "<p>简单记录一下，现在都比较人性化了，安装很方便\n&lt;!--more--&gt;</p>\n<h2>下载</h2>\n<p>官方下载地址：<a href=\"https://developer.android.google.cn/studio?hl=zh-cn\">下载 Android Studio 和应用工具 - Android 开发者  |  Android Developers</a>\n直接点击下载即可\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/Android%20Studio%E7%9A%84%E9%83%A8%E7%BD%B2-202503111930.png\" alt=\"Android Studio的部署-202503111930|825\" /></p>\n<p>下载好点击安装，默认安装到 C 盘，根据自己需求更改\n![[Pasted image 20250311193859.png|500]] 然后等待安装完成</p>\n<h2>配置</h2>\n<p>打开后首先弹出一个像谷歌发送报告，选择不发送\n提示缺少组件，选择 custom\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/Pasted%20image%2020250311194244.png\" alt=\"Pasted image 20250311194244|500\" />\n然后自己选个位置存放 SDK 不然默认放到 C 盘\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/Android%20Studio%E7%9A%84%E9%83%A8%E7%BD%B2-202503111944.png\" alt=\"Android Studio的部署-202503111944|500\" /></p>\n<p>然后就是同意协议，等待下载安装</p>\n<h2>简单应用</h2>\n<p>新建项目--选择 empty Activity\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/Pasted%20image%2020250311200403.png\" alt=\"Pasted image 20250311200403|475\" /></p>\n<p>自己填写名称等信息\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/Android%20Studio%E7%9A%84%E9%83%A8%E7%BD%B2-202503112006.png\" alt=\"Android Studio的部署-202503112006|600\" /></p>\n<p>点击完成后就可以进入项目了，但是还需要等待下载资源（官方是真慢，自己换个国内源）\n换源：在 gradle--wrapper 的 <code>gradle-wrapper.properties</code> 文件中\n修改源</p>\n<pre><code>#Tue Mar 11 20:07:08 CST 2025\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\ndistributionUrl=https\\://mirrors.cloud.tencent.com/gradle/gradle-8.11.1-bin.zip\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\n</code></pre>\n<p>终于下载好后，修改下代码运行\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/Android%20Studio%E7%9A%84%E9%83%A8%E7%BD%B2-202503112052.png\" alt=\"Android Studio的部署-202503112052\" /></p>\n<p>到这里也是结束了</p>\n",
      "content:encodedSnippet": "简单记录一下，现在都比较人性化了，安装很方便\n<!--more-->\n下载\n官方下载地址：下载 Android Studio 和应用工具 - Android 开发者  |  Android Developers\n直接点击下载即可\n\n下载好点击安装，默认安装到 C 盘，根据自己需求更改\n![[Pasted image 20250311193859.png|500]] 然后等待安装完成\n配置\n打开后首先弹出一个像谷歌发送报告，选择不发送\n提示缺少组件，选择 custom\n\n然后自己选个位置存放 SDK 不然默认放到 C 盘\n\n然后就是同意协议，等待下载安装\n简单应用\n新建项目--选择 empty Activity\n\n自己填写名称等信息\n\n点击完成后就可以进入项目了，但是还需要等待下载资源（官方是真慢，自己换个国内源）\n换源：在 gradle--wrapper 的 gradle-wrapper.properties 文件中\n修改源\n#Tue Mar 11 20:07:08 CST 2025\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\ndistributionUrl=https\\://mirrors.cloud.tencent.com/gradle/gradle-8.11.1-bin.zip\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\n\n终于下载好后，修改下代码运行\n\n到这里也是结束了",
      "guid": "https://www.blueke.top/posts/android-studio%E7%9A%84%E9%83%A8%E7%BD%B2/",
      "categories": [
        "笔记"
      ],
      "isoDate": "2025-03-11T19:26:00.000Z"
    },
    {
      "title": "使用路由器实现校园网多设备防检测",
      "link": "https://www.blueke.top/posts/%E4%BD%BF%E7%94%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E5%AE%9E%E7%8E%B0%E6%A0%A1%E5%9B%AD%E7%BD%91%E5%A4%9A%E8%AE%BE%E5%A4%87%E9%98%B2%E6%A3%80%E6%B5%8B/",
      "pubDate": "Tue, 25 Feb 2025 21:30:00 GMT",
      "content:encoded": "<p>这学期发现我们学校校园网(giwifi) 的检测貌似升级了，原来使用一个 root 软件就可以直接开热点共享设备的。现在几分钟就被检测到了。正好假期折腾了一个斐讯 k2p，对路由器也比较感兴趣，就花钱又买了 rax3000m, 目前也是比较稳定的在使用，所以就分享一下我折腾时的心得\n<strong>格式写的很丑，惭愧</strong>\n&lt;!--more--&gt;</p>\n<h2>常用的检测手段</h2>\n<p>首先，我们要先知道校园网是怎么检测到你的异常行为的</p>\n<blockquote>\n<p>参考于这篇博客<a href=\"https://blog.sunbk201.site/posts/crack-campus-network/\">关于某大学校园网共享上网检测机制的研究与解决方案</a></p>\n</blockquote>\n<p><strong>大致可以分为一下几种手段</strong></p>\n<ul>\n<li>&lt;font color=\"#ff0000\"&gt;TTL 字段检测&lt;/font&gt;：ttl 每经过一次路由器就会减一，如果校园网检测到不是常规的 ttl(Windows 是 128， macOS/iOS、Linux 是 64)。就会判定为异常</li>\n<li>&lt;font color=\"#ff0000\"&gt;User-Agent 字段检测&lt;/font&gt;：HTTP 数据包请求头存在一个叫做 User-Agent 的字段，该字段通常能够标识出操作系统类型，例如：<pre><code>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36 Edg/133.0.0.0\n</code></pre>\n</li>\n</ul>\n<p>如果校园网发现User-Agent 出现变动，也会判定异常</p>\n<ul>\n<li>&lt;font color=\"#ff0000\"&gt;基于 IPv4 数据包包头内的 Identification 字段的检测&lt;/font&gt;：IP 报文首部存在一个叫做 Identification 的字段，此字段用来唯一标识一个 IP 报文，在实际的应用中通常把它当做一个计数器，一台主机依次发送的IP数据包内的 Identification 字段会对应的依次递增，同一时间段内，而不同设备的 Identification 字段的递增区间一般是不同的，因此校园网可以根据一段时间内递增区间的不同判断出是否存在多设备共享上网。</li>\n<li>&lt;font color=\"#ff0000\"&gt;DPI (Deep Packet Inspection) 深度包检测技术&lt;/font&gt;：这个检测方案比较先进，检测系统会抓包分析应用层的流量，根据不同应用程序的数据包的特征值来判断出是否存在多设备上网。但是很耗费性能，一般也不会使用</li>\n<li>&lt;font color=\"#ff0000\"&gt;基于网络协议栈时钟偏移的检测技术（NTP）&lt;/font&gt;：不同主机物理时钟偏移不同，网络协议栈时钟与物理时钟存在对应关系，不同主机发送报文频率与时钟存在统计对应关系，通过特定的频谱分析算法，发现不同的网络时钟偏移来确定不同主机。</li>\n<li>&lt;font color=\"#ff0000\"&gt;Flash Cookie 检测技术&lt;/font&gt;：几乎不使用</li>\n</ul>\n<h2>编译需要插件</h2>\n<p>如果你想要手动编译自己的插件，以下插件是必须的：</p>\n<pre><code>iptables-mod-filter \niptables-mod-u32 \niptables-mod-conntrack-extra \niptables-mod-ipopt \nkmod-ipt-u32 \nkmod-ipt-ipopt \nkmod-ipt-filter\niptables-mod-extra \nkmod-ipt-extra \niptables-nft \nip6tables-nft \niptables-mod-nfqueue \nkmod-ipt-nfqueue\n\n# 以下为可选项\n# 防ipid检测\nkmod-rkp-ipid\n# ua2f\nua2f\n\n</code></pre>\n<h2>应对措施</h2>\n<p>既然常用的手段就这么几种，那我们就要见招拆招了</p>\n<h3>TTL 固定</h3>\n<p>解决方案：在防火墙固定 ttl 值\n在OpenWRT 22.01 版本以后（包括）自带防火墙是 nftables ，以前的为 iptables。所以设置的手段有所不同。</p>\n<h4>nftables 设置防火墙规则</h4>\n<p>如果你是 nftables，那么你需要进入 ssh 来进行防火墙的修改或者使用 iptables-nft工具，可以自动将 iptable指令转换成 nftable指令，直接在系统-&gt;软件包然后搜索 iptables-nft然后安装即可。推荐使用 iptables-nft，比较方便。\n创建用来修改所有流量包头TTL值的规则 12-mangle-ttl-128（128可以改成64，分别对应 windows 和 Linux/Android 默认的 TTL）</p>\n<p>先进入终端，按下面操作进行</p>\n<ol>\n<li>键入 <code>cd /etc/nftables.d</code>回车，该文件夹是 nftables 存档部分防火墙规则的文件</li>\n<li>输入 <code>vi 12-mangle-ttl-128.nft</code>回车，以新建一个 nftables 的规则文件</li>\n<li>轻敲键盘上字母 <code>I</code>键进入编辑模式</li>\n<li>复制以下代码，再通过按 CTRL + Shift + V 来将代码粘贴进去</li>\n</ol>\n<pre><code>chain mangle_postrouting_ttl128 {\n  type filter hook postrouting priority 300; policy accept;\n  counter ip ttl set 128\n}\n\nchain mangle_prerouting_ttl128 {\n  type filter hook prerouting priority 300; policy accept;\n  counter ip ttl set 128\n}\n</code></pre>\n<blockquote>\n<p>根据自己需求，64、128 都是可以的</p>\n</blockquote>\n<ol>\n<li>完成后先按键盘上的 <code>Esc</code> 退出编辑模式，再输入 <code>:wq</code> 回车就可以退出并保存文件了。</li>\n</ol>\n<h4>iptables 设置防火墙规则</h4>\n<p>在网络-防火墙-自定义规则中加入这一行，或者终端直接执行即可</p>\n<pre><code>iptables -t mangle -A POSTROUTING -j TTL --ttl-set 64\n</code></pre>\n<blockquote>\n<p>记得重启防火墙\nservice firewall restart</p>\n</blockquote>\n<h4>一种对 ttl 的理解思路</h4>\n<p>资料来源：<a href=\"https://tieba.baidu.com/p/8935246024?pn=3\">百度贴吧</a>\n市面上方案都是设置为一个固定值，我觉得不是很对，之前设置为255ping上级网关3分钟就给我断了，可能ttl值异常也会ban，我把这部分改为了一下，大致是经过路由器的包ttl加1，同时禁止ttl为1的包进入，并将进入包ttl设置为2防止二级路由，这样在防止校园网路由跟踪的同时，将发出的包ttl控制在了正常值：</p>\n<pre><code>通过 iptables 修改 TTL 值  \niptables -t mangle -A POSTROUTING -j TTL --ttl-inc 1  \n#防路由跟踪  \niptables -A INPUT -m ttl --ttl-eq 1 -j DROP  \niptables -A FORWARD -m ttl --ttl-eq 1 -j DROP  \niptables -t mangle -A PREROUTING -i pppoe-wan -j TTL --ttl-set 2  \n</code></pre>\n<h3>UA 隐藏</h3>\n<p>目前常用的隐藏 UA 的手段是 <a href=\"https://github.com/Zxilly/UA2F\">UA2F</a> 或者 <a href=\"https://github.com/SunBK201/UA3F?tab=readme-ov-file\">UA3F</a>\n二者主要的差异有几点：</p>\n<ol>\n<li>ua2f 一般来说需要在编译固件的时候加进去，无法直接安装使用。ua3f 则可以快速安装配置</li>\n<li>ua3f 需要配合 openclash 或者 shellclash 使用，ua2f 则不需要</li>\n<li>ua2f暂时无法正则匹配UA，在某些验证UA的网页或应用上可能体验不好（但影响不大）</li>\n<li>更多的差异可以自己使用体会，不多叙述</li>\n</ol>\n<h4>UA2F</h4>\n<p>首先你得有安装好 ua2f 的固件，无论是从恩山论坛上找，还是自己编译。我自己用的是在 <a href=\"https://openwrt.ai/\">openwrt.ai</a> 上快速编译的，不用自己下环境，导入插件了。（但是据说有后门什么的，见仁见智吧）\n推荐再配合一个 <a href=\"https://github.com/lucikap/luci-app-ua2f\">lucikap/luci-app-ua2f</a>。可以实现 ua2f 的图形化界面，比较方便。\n没有用终端执行下面的命令进行配置。</p>\n<pre><code># 启用 UA2F\nuci set ua2f.enabled.enabled=1\n\n# 可选的防火墙配置选项\n# 是否自动添加防火墙规则\nuci set ua2f.firewall.handle_fw=1\n\n# 是否尝试处理 443 端口的流量， 通常来说，流经 443 端口的流量是加密的，因此无需处理\nuci set ua2f.firewall.handle_tls=1\n\n# 是否处理微信的流量，微信的流量通常是加密的，因此无需处理。这一规则在启用 nftables 时无效\nuci set ua2f.firewall.handle_mmtls=1\n\n# 是否处理内网流量，如果你的路由器是在内网中，且你想要处理内网中的流量，那么请启用这一选项\nuci set ua2f.firewall.handle_intranet=1\n\n# 使用自定义 User-Agent\nuci set ua2f.main.custom_ua=\"Test UA/1.0\"\n\n# 禁用 Conntrack 标记，这会降低性能，但是有助于和其他修改 Connmark 的软件共存\nuci set ua2f.main.disable_connmark=1\n\n# 应用配置\nuci commit ua2f\n\n# 开机自启\nservice ua2f enable\n\n# 启动 UA2F\nservice ua2f start\n\n# 读取日志\nlogread | grep UA2F\n</code></pre>\n<blockquote>\n<p>PS：我记得在使用的时候，处理 443 端口还是内网的话会导致无法进入校园网认证网页，因为我们学校的是 http 网页。仅供参考</p>\n</blockquote>\n<h4>UA3F</h4>\n<p>ua3f 支持多种方式部署，这里我就直接安装了。终端执行命令</p>\n<pre><code>opkg update\nopkg install curl libcurl luci-compat\nexport url='https://blog.sunbk201.site/cdn' &amp;&amp; sh -c \"$(curl -kfsSl $url/install.sh)\"\nservice ua3f reload\n</code></pre>\n<p>ua3f 自带图形化页面，安装后刷新页面启用即可。\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/%E4%BD%BF%E7%94%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E5%AE%9E%E7%8E%B0%E6%A0%A1%E5%9B%AD%E7%BD%91%E5%A4%9A%E8%AE%BE%E5%A4%87%E9%98%B2%E6%A3%80%E6%B5%8B-202502252212.png\" alt=\"使用路由器实现校园网多设备防检测-202502252212|500\" />\n但还需要进行代理的配置，建议参考作者给出的教程，非常详细。\n详见： <a href=\"https://sunbk201public.notion.site/UA3F-Clash-16d60a7b5f0e457a9ee97a3be7cbf557?pvs=4\">UA3F 与 Clash 从零开始的部署教程</a>。</p>\n<blockquote>\n<p>PS：如果安装后发现无法生效，可能你需要添加这两行规则</p>\n<pre><code>iptables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 53\niptables -t nat -A PREROUTING -p tcp --dport 53 -j REDIRECT --to-ports 53\n</code></pre>\n</blockquote>\n<h5>DNS 问题</h5>\n<p>在 ua3f 中，可能会出现部分网页打不开，游戏进不去等情况。可能是路由器的 dns 出现了问题。\n以 shellclash 为例，进入管理面板，内核功能设置--切换dns运行模式--dns进阶设置--禁用dns劫持，然后退出重启服务，随后开启其他dns服务，例如chinadns-ng，或者smartdns。如果你没有装其他dns服务的话就把dnsmasq转发打开，这样似乎也行。这样问题就解决了。</p>\n<blockquote>\n<p>参考于酷安-墨染_nlx 的帖子\n补充smartdns 配置教程：<a href=\"https://www.luxiyue.com/openwrt/openwrt%e5%ae%89%e8%a3%85%e5%b9%b6%e9%85%8d%e7%bd%aesmartdns/\">OpenWrt安装并配置SmartDNS - Forever Young</a></p>\n</blockquote>\n<h5>某些网页或应用异常</h5>\n<p>如果你把隐藏 UA 设置成正常 UA 或者别的格式，可能会导致某些网页或应用异常。比如酷安图片无法加载。解决方案详见：<a href=\"https://github.com/SunBK201/UA3F/issues/40\">支持更多正则表达式功能 · Issue #40 · SunBK201/UA3F</a></p>\n<h4>测试是否成功</h4>\n<p>进入 <a href=\"http://ua-check.stagoh.com/\">User-Agent Display</a> 或者 <a href=\"http://ua.233996.xyz/\">UA检测-HTTP</a> 查看，如果发现服务器 UA 出现 FFF，证明 UA 隐藏成功</p>\n<h3>IPID 检测</h3>\n<p>解决方案：修改所有数据包的 ID 字段为递增。\n首先你的固件要编译进 <a href=\"https://github.com/CHN-beta/rkp-ipid\">rkp-ipid</a> 模块\n在路由器防火墙或者终端中输入以下命令</p>\n<pre><code># 若没有加入rkp-ipid模块，此部分不需要加入\niptables -t mangle -N IPID_MOD\niptables -t mangle -A FORWARD -j IPID_MOD\niptables -t mangle -A OUTPUT -j IPID_MOD\niptables -t mangle -A IPID_MOD -d 0.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -d 127.0.0.0/8 -j RETURN\n#由于本校局域网是A类网，所以我将这一条注释掉了，具体要不要注释结合你所在的校园网\n# iptables -t mangle -A IPID_MOD -d 10.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -d 172.16.0.0/12 -j RETURN\niptables -t mangle -A IPID_MOD -d 192.168.0.0/16 -j RETURN\niptables -t mangle -A IPID_MOD -d 255.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -j MARK --set-xmark 0x10/0x10\n</code></pre>\n<p>所以高版本的 openwrt 还是推荐下个 nft软件包，不然没法设置(但好像安装这个模块会直接加进去 QWQ)</p>\n<h3>NTP 防时钟偏移检测</h3>\n<p>解决方案：在局域网中建立 NTP 服务器统一时间戳路由器设置</p>\n<ol>\n<li>进入 OpenWrt 系统设置, 勾选 Enable NTP client（启用 NTP 客户端）和 Provide NTP server（作为 NTP 服务器提供服务）\n候选 NTP 服务器分别填写:</li>\n</ol>\n<pre><code>ntp1.aliyun.com, time1.cloud.tencent.com, stdtime.gov.hk, pool.ntp.org\n</code></pre>\n<ol>\n<li>防火墙规则添加</li>\n</ol>\n<pre><code># 防时钟偏移检测\niptables -t nat -N ntp_force_local\niptables -t nat -I PREROUTING -p udp --dport 123 -j ntp_force_local\niptables -t nat -A ntp_force_local -d 0.0.0.0/8 -j RETURN\niptables -t nat -A ntp_force_local -d 127.0.0.0/8 -j RETURN\niptables -t nat -A ntp_force_local -d 192.168.0.0/16 -j RETURN\niptables -t nat -A ntp_force_local -s 192.168.0.0/16 -j DNAT --to-destination 192.168.1.1\n# 最后的 192.168.1.1 需要修改为路由器网关地址\n</code></pre>\n<h3>Flash 检测</h3>\n<p>虽然是几乎不用，但还是记录一下</p>\n<pre><code># iptables 拒绝 AC 进行 Flash 检测\niptables -I FORWARD -p tcp --sport 80 --tcp-flags ACK ACK -m string --algo bm --string \" src=\\\"http://1.1.1.\" -j DROP\n</code></pre>\n<h3>全部代码</h3>\n<pre><code># @SunBK201 - https://blog.sunbk201.site\n# ua2f开启自动添加防火墙功能会自动加入，不过还是自己加一下吧\niptables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 53\niptables -t nat -A PREROUTING -p tcp --dport 53 -j REDIRECT --to-ports 53\n\n# 通过 rkp-ipid 设置 IPID\niptables -t mangle -N IPID_MOD\niptables -t mangle -A FORWARD -j IPID_MOD\niptables -t mangle -A OUTPUT -j IPID_MOD\niptables -t mangle -A IPID_MOD -d 0.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -d 127.0.0.0/8 -j RETURN\n# 由于本校局域网是A类网，所以我将这一条注释掉了，具体要不要注释结合你所在的校园网\n# iptables -t mangle -A IPID_MOD -d 10.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -d 172.16.0.0/12 -j RETURN\niptables -t mangle -A IPID_MOD -d 192.168.0.0/16 -j RETURN\niptables -t mangle -A IPID_MOD -d 255.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -j MARK --set-xmark 0x10/0x10\n\n# ua2f 改UA\niptables -t mangle -N ua2f\n# 由于本校局域网是A类网，所以我将这一条注释掉了，具体要不要注释结合你所在的校园网\n# iptables -t mangle -A ua2f -d 10.0.0.0/8 -j RETURN\niptables -t mangle -A ua2f -d 127.0.0.0/8 -j RETURN\niptables -t mangle -A ua2f -d 192.168.0.0/16 -j RETURN # 不处理流向保留地址的包\niptables -t mangle -A ua2f -p tcp --dport 443 -j RETURN # 不处理 https\niptables -t mangle -A ua2f -p tcp --dport 22 -j RETURN # 不处理 SSH \niptables -t mangle -A ua2f -p tcp --dport 80 -j CONNMARK --set-mark 44\niptables -t mangle -A ua2f -m connmark --mark 43 -j RETURN # 不处理标记为非 http 的流 (实验性)\niptables -t mangle -A ua2f -m set --set nohttp dst,dst -j RETURN\niptables -t mangle -A ua2f -j NFQUEUE --queue-num 10010\n  \niptables -t mangle -A FORWARD -p tcp -m conntrack --ctdir ORIGINAL -j ua2f\niptables -t mangle -A FORWARD -p tcp -m conntrack --ctdir REPLY\n\n\n# 防时钟偏移检测\niptables -t nat -N ntp_force_local\niptables -t nat -I PREROUTING -p udp --dport 123 -j ntp_force_local\niptables -t nat -A ntp_force_local -d 0.0.0.0/8 -j RETURN\niptables -t nat -A ntp_force_local -d 127.0.0.0/8 -j RETURN\niptables -t nat -A ntp_force_local -d 192.168.0.0/16 -j RETURN\niptables -t nat -A ntp_force_local -s 192.168.0.0/16 -j DNAT --to-destination 192.168.1.1\n\n# 通过 iptables 修改 TTL 值\niptables -t mangle -A POSTROUTING -j TTL --ttl-set 64\n\n# iptables 拒绝 AC 进行 Flash 检测\niptables -I FORWARD -p tcp --sport 80 --tcp-flags ACK ACK -m string --algo bm --string \" src=\\\"http://1.1.1.\" -j DROP  \n\n# 重启防火墙\nservice firewall restart\n</code></pre>\n<h3>giwifi 防 mac 配置</h3>\n<p>我们学校的 giwfi 会通过 mac 地址来检测是否是多个设备，所以需要在连接校园网 WiFi 的时候手动设置 mac 地址为自己认证设备的 mac 地址</p>\n<h3>在路由器探索中的其他问题</h3>\n<h4>使用 ssh 连接路由器</h4>\n<pre><code>ssh [用户名]@[路由器IP地址] -p [端口]\n#例如ssh root@192.168.20.1 -p 22\n</code></pre>\n<h5>一个小问题</h5>\n<p><a href=\"https://blog.csdn.net/wangguchao/article/details/85614914\">问题解决——SSH时出现WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!-CSDN博客</a>\n原因是我重置路由器后虽然地址一样，但是 ssh 密钥不一样，重置一下就好了</p>\n<pre><code>ssh-keygen -R 192.168.20.1\n</code></pre>\n<p>更新软件包前最好先执行这个</p>\n<pre><code>opkg update  \n</code></pre>\n<h4>uboot 刷固件</h4>\n<ol>\n<li>准备一根网线，固件</li>\n<li>网线连接路由器和电脑，先按住 reset 再接通电源</li>\n<li>打开控制面板--网络和共享中心--更改适配器设置，找到以太网，打开属性找到有 ipv4 的</li>\n<li>将 IP 设置为 192.168.1. x</li>\n<li>网关设置为 192.168.1.1（必须，uboot 默认地址。不然进不去）</li>\n<li>此时浏览器在进入192.168.1.1 就到 uboot 界面了，上传固件就可以安装了</li>\n</ol>\n<h4>分区表坏了咋办</h4>\n<p>自己按上面教程进 uboot，然后登陆 http://192.168.1.1/gpt.html\n然后上传分区表，重刷即可</p>\n<h3>参考来源</h3>\n<p><a href=\"https://www.hetong-re4per.com/posts/multi-device-detection/\">校园网防止多设备检测指北 · 瞳のBlog</a>\n<a href=\"https://hexo.sakurasep.site/posts/UA3F/#%E4%B8%80%E3%80%81%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\">基于UA3F的校园网防检测指南 - 九月的生活</a>\n<a href=\"https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8394964&amp;page=1#pid20672345\">openwrt ua2f校园网固件插件使用方法-OPENWRT专版-恩山无线论坛</a>\n<a href=\"https://github.com/vernesong/OpenClash/issues/300\">路由器开启OpenClash国内访问变慢。 · Issue #300 · vernesong/OpenClash</a></p>\n<h3>额外</h3>\n<h4>NTP 设置</h4>\n<p><a href=\"https://xavier.wang/45-suck-shit-lan/\">校园网禁止多终端共享上网解决方案</a></p>\n<h4>换主题</h4>\n<p><a href=\"https://www.yydnas.cn/2023/11/09/2023.11.09-OpenWrt%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85/\">OpenWrt主题安装 | Forever Study</a></p>\n<h4>配置 docker</h4>\n<p>我自己还加了 docker，使用的时候发现了不少问题，这里记录一下</p>\n<h5>修改 docker 镜像源</h5>\n<p>网上教程都是要修改 <code>/etc/docker/daemon.json</code> 中的配置，但是我发现怎么修改都没有办法应用。\n后面终于是找到了解决办法</p>\n<ol>\n<li>找到 <code>/etc/init.d</code> 目录</li>\n<li>编辑里面的 <code>dockerd</code> 文件</li>\n<li>修改如下：<code>procd_set_param command /usr/bin/dockerd --config-file=</code> 后面的变量改为配置所在路径</li>\n</ol>\n<pre><code>start_service() {\n        local nofile=$(cat /proc/sys/fs/nr_open)\n        process_config\n        procd_open_instance\n        procd_set_param stderr 1\n        if [ -z \"${DOCKERD_CONF}\" ]; then\n                procd_set_param command /usr/bin/dockerd\n        else\n                procd_set_param command /usr/bin/dockerd --config-file=\"/etc/docker/daemon.json\"\n        fi\n        procd_set_param limits nofile=\"${nofile} ${nofile}\"\n        procd_close_instance\n}\n</code></pre>\n<p>然后重启 docker：<code>/etc/init.d/dockerd restart</code>\n如图，镜像已经修改为我们配置的了\n![[Pasted image 20250306130027.png]]</p>\n<h5>挂载路径</h5>\n<p>自带的 docker 空间给的很小，可以自己修改根路径</p>\n<pre><code>{\n\"data-root\": \"/opt/docker\",\n\"registry-mirrors\": [\"https://docker.registry.cyou\",\n\"https://docker-cf.registry.cyou\",\n\"https://dockercf.jsdelivr.fyi\",\n\"https://docker.jsdelivr.fyi\",\n\"https://dockertest.jsdelivr.fyi\",\n\"https://mirror.aliyuncs.com\",\n\"https://dockerproxy.com\",\n\"https://mirror.baidubce.com\",\n\"https://docker.m.daocloud.io\",\n\"https://docker.nju.edu.cn\",\n\"https://docker.mirrors.sjtug.sjtu.edu.cn\",\n\"https://docker.mirrors.ustc.edu.cn\",\n\"https://mirror.iscas.ac.cn\",\n\"https://docker.rainbond.cc\"]\n}\n</code></pre>\n",
      "content:encodedSnippet": "这学期发现我们学校校园网(giwifi) 的检测貌似升级了，原来使用一个 root 软件就可以直接开热点共享设备的。现在几分钟就被检测到了。正好假期折腾了一个斐讯 k2p，对路由器也比较感兴趣，就花钱又买了 rax3000m, 目前也是比较稳定的在使用，所以就分享一下我折腾时的心得\n格式写的很丑，惭愧\n<!--more-->\n常用的检测手段\n首先，我们要先知道校园网是怎么检测到你的异常行为的\n参考于这篇博客关于某大学校园网共享上网检测机制的研究与解决方案\n大致可以分为一下几种手段\n<font color=\"#ff0000\">TTL 字段检测</font>：ttl 每经过一次路由器就会减一，如果校园网检测到不是常规的 ttl(Windows 是 128， macOS/iOS、Linux 是 64)。就会判定为异常\n<font color=\"#ff0000\">User-Agent 字段检测</font>：HTTP 数据包请求头存在一个叫做 User-Agent 的字段，该字段通常能够标识出操作系统类型，例如：\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36 Edg/133.0.0.0\n\n如果校园网发现User-Agent 出现变动，也会判定异常\n<font color=\"#ff0000\">基于 IPv4 数据包包头内的 Identification 字段的检测</font>：IP 报文首部存在一个叫做 Identification 的字段，此字段用来唯一标识一个 IP 报文，在实际的应用中通常把它当做一个计数器，一台主机依次发送的IP数据包内的 Identification 字段会对应的依次递增，同一时间段内，而不同设备的 Identification 字段的递增区间一般是不同的，因此校园网可以根据一段时间内递增区间的不同判断出是否存在多设备共享上网。\n<font color=\"#ff0000\">DPI (Deep Packet Inspection) 深度包检测技术</font>：这个检测方案比较先进，检测系统会抓包分析应用层的流量，根据不同应用程序的数据包的特征值来判断出是否存在多设备上网。但是很耗费性能，一般也不会使用\n<font color=\"#ff0000\">基于网络协议栈时钟偏移的检测技术（NTP）</font>：不同主机物理时钟偏移不同，网络协议栈时钟与物理时钟存在对应关系，不同主机发送报文频率与时钟存在统计对应关系，通过特定的频谱分析算法，发现不同的网络时钟偏移来确定不同主机。\n<font color=\"#ff0000\">Flash Cookie 检测技术</font>：几乎不使用\n编译需要插件\n如果你想要手动编译自己的插件，以下插件是必须的：\niptables-mod-filter \niptables-mod-u32 \niptables-mod-conntrack-extra \niptables-mod-ipopt \nkmod-ipt-u32 \nkmod-ipt-ipopt \nkmod-ipt-filter\niptables-mod-extra \nkmod-ipt-extra \niptables-nft \nip6tables-nft \niptables-mod-nfqueue \nkmod-ipt-nfqueue\n\n# 以下为可选项\n# 防ipid检测\nkmod-rkp-ipid\n# ua2f\nua2f\n\n\n应对措施\n既然常用的手段就这么几种，那我们就要见招拆招了\nTTL 固定\n解决方案：在防火墙固定 ttl 值\n在OpenWRT 22.01 版本以后（包括）自带防火墙是 nftables ，以前的为 iptables。所以设置的手段有所不同。\nnftables 设置防火墙规则\n如果你是 nftables，那么你需要进入 ssh 来进行防火墙的修改或者使用 iptables-nft工具，可以自动将 iptable指令转换成 nftable指令，直接在系统->软件包然后搜索 iptables-nft然后安装即可。推荐使用 iptables-nft，比较方便。\n创建用来修改所有流量包头TTL值的规则 12-mangle-ttl-128（128可以改成64，分别对应 windows 和 Linux/Android 默认的 TTL）\n先进入终端，按下面操作进行\n键入 cd /etc/nftables.d回车，该文件夹是 nftables 存档部分防火墙规则的文件\n输入 vi 12-mangle-ttl-128.nft回车，以新建一个 nftables 的规则文件\n轻敲键盘上字母 I键进入编辑模式\n复制以下代码，再通过按 CTRL + Shift + V 来将代码粘贴进去\nchain mangle_postrouting_ttl128 {\n  type filter hook postrouting priority 300; policy accept;\n  counter ip ttl set 128\n}\n\nchain mangle_prerouting_ttl128 {\n  type filter hook prerouting priority 300; policy accept;\n  counter ip ttl set 128\n}\n\n根据自己需求，64、128 都是可以的\n完成后先按键盘上的 Esc 退出编辑模式，再输入 :wq 回车就可以退出并保存文件了。\niptables 设置防火墙规则\n在网络-防火墙-自定义规则中加入这一行，或者终端直接执行即可\niptables -t mangle -A POSTROUTING -j TTL --ttl-set 64\n\n记得重启防火墙\nservice firewall restart\n一种对 ttl 的理解思路\n资料来源：百度贴吧\n市面上方案都是设置为一个固定值，我觉得不是很对，之前设置为255ping上级网关3分钟就给我断了，可能ttl值异常也会ban，我把这部分改为了一下，大致是经过路由器的包ttl加1，同时禁止ttl为1的包进入，并将进入包ttl设置为2防止二级路由，这样在防止校园网路由跟踪的同时，将发出的包ttl控制在了正常值：\n通过 iptables 修改 TTL 值  \niptables -t mangle -A POSTROUTING -j TTL --ttl-inc 1  \n#防路由跟踪  \niptables -A INPUT -m ttl --ttl-eq 1 -j DROP  \niptables -A FORWARD -m ttl --ttl-eq 1 -j DROP  \niptables -t mangle -A PREROUTING -i pppoe-wan -j TTL --ttl-set 2  \n\nUA 隐藏\n目前常用的隐藏 UA 的手段是 UA2F 或者 UA3F\n二者主要的差异有几点：\nua2f 一般来说需要在编译固件的时候加进去，无法直接安装使用。ua3f 则可以快速安装配置\nua3f 需要配合 openclash 或者 shellclash 使用，ua2f 则不需要\nua2f暂时无法正则匹配UA，在某些验证UA的网页或应用上可能体验不好（但影响不大）\n更多的差异可以自己使用体会，不多叙述\nUA2F\n首先你得有安装好 ua2f 的固件，无论是从恩山论坛上找，还是自己编译。我自己用的是在 openwrt.ai 上快速编译的，不用自己下环境，导入插件了。（但是据说有后门什么的，见仁见智吧）\n推荐再配合一个 lucikap/luci-app-ua2f。可以实现 ua2f 的图形化界面，比较方便。\n没有用终端执行下面的命令进行配置。\n# 启用 UA2F\nuci set ua2f.enabled.enabled=1\n\n# 可选的防火墙配置选项\n# 是否自动添加防火墙规则\nuci set ua2f.firewall.handle_fw=1\n\n# 是否尝试处理 443 端口的流量， 通常来说，流经 443 端口的流量是加密的，因此无需处理\nuci set ua2f.firewall.handle_tls=1\n\n# 是否处理微信的流量，微信的流量通常是加密的，因此无需处理。这一规则在启用 nftables 时无效\nuci set ua2f.firewall.handle_mmtls=1\n\n# 是否处理内网流量，如果你的路由器是在内网中，且你想要处理内网中的流量，那么请启用这一选项\nuci set ua2f.firewall.handle_intranet=1\n\n# 使用自定义 User-Agent\nuci set ua2f.main.custom_ua=\"Test UA/1.0\"\n\n# 禁用 Conntrack 标记，这会降低性能，但是有助于和其他修改 Connmark 的软件共存\nuci set ua2f.main.disable_connmark=1\n\n# 应用配置\nuci commit ua2f\n\n# 开机自启\nservice ua2f enable\n\n# 启动 UA2F\nservice ua2f start\n\n# 读取日志\nlogread | grep UA2F\n\nPS：我记得在使用的时候，处理 443 端口还是内网的话会导致无法进入校园网认证网页，因为我们学校的是 http 网页。仅供参考\nUA3F\nua3f 支持多种方式部署，这里我就直接安装了。终端执行命令\nopkg update\nopkg install curl libcurl luci-compat\nexport url='https://blog.sunbk201.site/cdn' && sh -c \"$(curl -kfsSl $url/install.sh)\"\nservice ua3f reload\n\nua3f 自带图形化页面，安装后刷新页面启用即可。\n\n但还需要进行代理的配置，建议参考作者给出的教程，非常详细。\n详见： UA3F 与 Clash 从零开始的部署教程。\nPS：如果安装后发现无法生效，可能你需要添加这两行规则\niptables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 53\niptables -t nat -A PREROUTING -p tcp --dport 53 -j REDIRECT --to-ports 53\n\nDNS 问题\n在 ua3f 中，可能会出现部分网页打不开，游戏进不去等情况。可能是路由器的 dns 出现了问题。\n以 shellclash 为例，进入管理面板，内核功能设置--切换dns运行模式--dns进阶设置--禁用dns劫持，然后退出重启服务，随后开启其他dns服务，例如chinadns-ng，或者smartdns。如果你没有装其他dns服务的话就把dnsmasq转发打开，这样似乎也行。这样问题就解决了。\n参考于酷安-墨染_nlx 的帖子\n补充smartdns 配置教程：OpenWrt安装并配置SmartDNS - Forever Young\n某些网页或应用异常\n如果你把隐藏 UA 设置成正常 UA 或者别的格式，可能会导致某些网页或应用异常。比如酷安图片无法加载。解决方案详见：支持更多正则表达式功能 · Issue #40 · SunBK201/UA3F\n测试是否成功\n进入 User-Agent Display 或者 UA检测-HTTP 查看，如果发现服务器 UA 出现 FFF，证明 UA 隐藏成功\nIPID 检测\n解决方案：修改所有数据包的 ID 字段为递增。\n首先你的固件要编译进 rkp-ipid 模块\n在路由器防火墙或者终端中输入以下命令\n# 若没有加入rkp-ipid模块，此部分不需要加入\niptables -t mangle -N IPID_MOD\niptables -t mangle -A FORWARD -j IPID_MOD\niptables -t mangle -A OUTPUT -j IPID_MOD\niptables -t mangle -A IPID_MOD -d 0.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -d 127.0.0.0/8 -j RETURN\n#由于本校局域网是A类网，所以我将这一条注释掉了，具体要不要注释结合你所在的校园网\n# iptables -t mangle -A IPID_MOD -d 10.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -d 172.16.0.0/12 -j RETURN\niptables -t mangle -A IPID_MOD -d 192.168.0.0/16 -j RETURN\niptables -t mangle -A IPID_MOD -d 255.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -j MARK --set-xmark 0x10/0x10\n\n所以高版本的 openwrt 还是推荐下个 nft软件包，不然没法设置(但好像安装这个模块会直接加进去 QWQ)\nNTP 防时钟偏移检测\n解决方案：在局域网中建立 NTP 服务器统一时间戳路由器设置\n进入 OpenWrt 系统设置, 勾选 Enable NTP client（启用 NTP 客户端）和 Provide NTP server（作为 NTP 服务器提供服务）\n候选 NTP 服务器分别填写:\nntp1.aliyun.com, time1.cloud.tencent.com, stdtime.gov.hk, pool.ntp.org\n\n防火墙规则添加\n# 防时钟偏移检测\niptables -t nat -N ntp_force_local\niptables -t nat -I PREROUTING -p udp --dport 123 -j ntp_force_local\niptables -t nat -A ntp_force_local -d 0.0.0.0/8 -j RETURN\niptables -t nat -A ntp_force_local -d 127.0.0.0/8 -j RETURN\niptables -t nat -A ntp_force_local -d 192.168.0.0/16 -j RETURN\niptables -t nat -A ntp_force_local -s 192.168.0.0/16 -j DNAT --to-destination 192.168.1.1\n# 最后的 192.168.1.1 需要修改为路由器网关地址\n\nFlash 检测\n虽然是几乎不用，但还是记录一下\n# iptables 拒绝 AC 进行 Flash 检测\niptables -I FORWARD -p tcp --sport 80 --tcp-flags ACK ACK -m string --algo bm --string \" src=\\\"http://1.1.1.\" -j DROP\n\n全部代码\n# @SunBK201 - https://blog.sunbk201.site\n# ua2f开启自动添加防火墙功能会自动加入，不过还是自己加一下吧\niptables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 53\niptables -t nat -A PREROUTING -p tcp --dport 53 -j REDIRECT --to-ports 53\n\n# 通过 rkp-ipid 设置 IPID\niptables -t mangle -N IPID_MOD\niptables -t mangle -A FORWARD -j IPID_MOD\niptables -t mangle -A OUTPUT -j IPID_MOD\niptables -t mangle -A IPID_MOD -d 0.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -d 127.0.0.0/8 -j RETURN\n# 由于本校局域网是A类网，所以我将这一条注释掉了，具体要不要注释结合你所在的校园网\n# iptables -t mangle -A IPID_MOD -d 10.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -d 172.16.0.0/12 -j RETURN\niptables -t mangle -A IPID_MOD -d 192.168.0.0/16 -j RETURN\niptables -t mangle -A IPID_MOD -d 255.0.0.0/8 -j RETURN\niptables -t mangle -A IPID_MOD -j MARK --set-xmark 0x10/0x10\n\n# ua2f 改UA\niptables -t mangle -N ua2f\n# 由于本校局域网是A类网，所以我将这一条注释掉了，具体要不要注释结合你所在的校园网\n# iptables -t mangle -A ua2f -d 10.0.0.0/8 -j RETURN\niptables -t mangle -A ua2f -d 127.0.0.0/8 -j RETURN\niptables -t mangle -A ua2f -d 192.168.0.0/16 -j RETURN # 不处理流向保留地址的包\niptables -t mangle -A ua2f -p tcp --dport 443 -j RETURN # 不处理 https\niptables -t mangle -A ua2f -p tcp --dport 22 -j RETURN # 不处理 SSH \niptables -t mangle -A ua2f -p tcp --dport 80 -j CONNMARK --set-mark 44\niptables -t mangle -A ua2f -m connmark --mark 43 -j RETURN # 不处理标记为非 http 的流 (实验性)\niptables -t mangle -A ua2f -m set --set nohttp dst,dst -j RETURN\niptables -t mangle -A ua2f -j NFQUEUE --queue-num 10010\n  \niptables -t mangle -A FORWARD -p tcp -m conntrack --ctdir ORIGINAL -j ua2f\niptables -t mangle -A FORWARD -p tcp -m conntrack --ctdir REPLY\n\n\n# 防时钟偏移检测\niptables -t nat -N ntp_force_local\niptables -t nat -I PREROUTING -p udp --dport 123 -j ntp_force_local\niptables -t nat -A ntp_force_local -d 0.0.0.0/8 -j RETURN\niptables -t nat -A ntp_force_local -d 127.0.0.0/8 -j RETURN\niptables -t nat -A ntp_force_local -d 192.168.0.0/16 -j RETURN\niptables -t nat -A ntp_force_local -s 192.168.0.0/16 -j DNAT --to-destination 192.168.1.1\n\n# 通过 iptables 修改 TTL 值\niptables -t mangle -A POSTROUTING -j TTL --ttl-set 64\n\n# iptables 拒绝 AC 进行 Flash 检测\niptables -I FORWARD -p tcp --sport 80 --tcp-flags ACK ACK -m string --algo bm --string \" src=\\\"http://1.1.1.\" -j DROP  \n\n# 重启防火墙\nservice firewall restart\n\ngiwifi 防 mac 配置\n我们学校的 giwfi 会通过 mac 地址来检测是否是多个设备，所以需要在连接校园网 WiFi 的时候手动设置 mac 地址为自己认证设备的 mac 地址\n在路由器探索中的其他问题\n使用 ssh 连接路由器\nssh [用户名]@[路由器IP地址] -p [端口]\n#例如ssh root@192.168.20.1 -p 22\n\n一个小问题\n问题解决——SSH时出现WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!-CSDN博客\n原因是我重置路由器后虽然地址一样，但是 ssh 密钥不一样，重置一下就好了\nssh-keygen -R 192.168.20.1\n\n更新软件包前最好先执行这个\nopkg update  \n\nuboot 刷固件\n准备一根网线，固件\n网线连接路由器和电脑，先按住 reset 再接通电源\n打开控制面板--网络和共享中心--更改适配器设置，找到以太网，打开属性找到有 ipv4 的\n将 IP 设置为 192.168.1. x\n网关设置为 192.168.1.1（必须，uboot 默认地址。不然进不去）\n此时浏览器在进入192.168.1.1 就到 uboot 界面了，上传固件就可以安装了\n分区表坏了咋办\n自己按上面教程进 uboot，然后登陆 http://192.168.1.1/gpt.html\n然后上传分区表，重刷即可\n参考来源\n校园网防止多设备检测指北 · 瞳のBlog\n基于UA3F的校园网防检测指南 - 九月的生活\nopenwrt ua2f校园网固件插件使用方法-OPENWRT专版-恩山无线论坛\n路由器开启OpenClash国内访问变慢。 · Issue #300 · vernesong/OpenClash\n额外\nNTP 设置\n校园网禁止多终端共享上网解决方案\n换主题\nOpenWrt主题安装 | Forever Study\n配置 docker\n我自己还加了 docker，使用的时候发现了不少问题，这里记录一下\n修改 docker 镜像源\n网上教程都是要修改 /etc/docker/daemon.json 中的配置，但是我发现怎么修改都没有办法应用。\n后面终于是找到了解决办法\n找到 /etc/init.d 目录\n编辑里面的 dockerd 文件\n修改如下：procd_set_param command /usr/bin/dockerd --config-file= 后面的变量改为配置所在路径\nstart_service() {\n        local nofile=$(cat /proc/sys/fs/nr_open)\n        process_config\n        procd_open_instance\n        procd_set_param stderr 1\n        if [ -z \"${DOCKERD_CONF}\" ]; then\n                procd_set_param command /usr/bin/dockerd\n        else\n                procd_set_param command /usr/bin/dockerd --config-file=\"/etc/docker/daemon.json\"\n        fi\n        procd_set_param limits nofile=\"${nofile} ${nofile}\"\n        procd_close_instance\n}\n\n然后重启 docker：/etc/init.d/dockerd restart\n如图，镜像已经修改为我们配置的了\n![[Pasted image 20250306130027.png]]\n挂载路径\n自带的 docker 空间给的很小，可以自己修改根路径\n{\n\"data-root\": \"/opt/docker\",\n\"registry-mirrors\": [\"https://docker.registry.cyou\",\n\"https://docker-cf.registry.cyou\",\n\"https://dockercf.jsdelivr.fyi\",\n\"https://docker.jsdelivr.fyi\",\n\"https://dockertest.jsdelivr.fyi\",\n\"https://mirror.aliyuncs.com\",\n\"https://dockerproxy.com\",\n\"https://mirror.baidubce.com\",\n\"https://docker.m.daocloud.io\",\n\"https://docker.nju.edu.cn\",\n\"https://docker.mirrors.sjtug.sjtu.edu.cn\",\n\"https://docker.mirrors.ustc.edu.cn\",\n\"https://mirror.iscas.ac.cn\",\n\"https://docker.rainbond.cc\"]\n}",
      "guid": "https://www.blueke.top/posts/%E4%BD%BF%E7%94%A8%E8%B7%AF%E7%94%B1%E5%99%A8%E5%AE%9E%E7%8E%B0%E6%A0%A1%E5%9B%AD%E7%BD%91%E5%A4%9A%E8%AE%BE%E5%A4%87%E9%98%B2%E6%A3%80%E6%B5%8B/",
      "categories": [
        "笔记",
        "生活",
        "路由器",
        "openwrt"
      ],
      "isoDate": "2025-02-25T21:30:00.000Z"
    },
    {
      "title": "你好，2025",
      "link": "https://www.blueke.top/posts/%E4%BD%A0%E5%A5%BD2025/",
      "pubDate": "Sat, 15 Feb 2025 21:15:00 GMT",
      "content:encoded": "<p>新的一年，我该何去何从\n&lt;!--more--&gt;\n沉寂了好几个月啊，准确来说自从放假后便一直摆烂，实在是没有什么可倒腾出来分享的了。\n今天收收心准备做点实事，顺便划划水讲下这段时间的处境。\n转眼间我也大三，即将面临实习，但还是不知道该做什么，到了现在，我也不知道做什么才能帮我找到一份合适的工作，无尽的迷茫之中。在爱好方面也没有坚持的动力与乐趣，害，有个词语叫做半途而废，可能就是说的我这种人吧\n大年三十，我家和奶奶还有五姨父他家在一起吃了年夜饭，在我记忆里这还是第一次。两天后的大年初二，五姨父在凌晨突发心梗去世了，我感到不可置信，当时还有说有笑的亲人，转眼就躺在一口封闭的棺材中了。想哭拼了命也挤不出两三滴泪，年少离家，与他们见面不是很多，但是我觉得他们家我是最熟悉也最亲近的...\n网上天天流传着吃席的各种场面，但真到我吃上席的时候，心中却怎么也不是个滋味...</p>\n<p>现在是 2025 年 2 月 16 日 1:22，因为电脑重装，然后 vercel 出现了奇奇怪怪的 bug，一直部署失败，好不容易才修好博客</p>\n",
      "content:encodedSnippet": "新的一年，我该何去何从\n<!--more-->\n沉寂了好几个月啊，准确来说自从放假后便一直摆烂，实在是没有什么可倒腾出来分享的了。\n今天收收心准备做点实事，顺便划划水讲下这段时间的处境。\n转眼间我也大三，即将面临实习，但还是不知道该做什么，到了现在，我也不知道做什么才能帮我找到一份合适的工作，无尽的迷茫之中。在爱好方面也没有坚持的动力与乐趣，害，有个词语叫做半途而废，可能就是说的我这种人吧\n大年三十，我家和奶奶还有五姨父他家在一起吃了年夜饭，在我记忆里这还是第一次。两天后的大年初二，五姨父在凌晨突发心梗去世了，我感到不可置信，当时还有说有笑的亲人，转眼就躺在一口封闭的棺材中了。想哭拼了命也挤不出两三滴泪，年少离家，与他们见面不是很多，但是我觉得他们家我是最熟悉也最亲近的...\n网上天天流传着吃席的各种场面，但真到我吃上席的时候，心中却怎么也不是个滋味...\n现在是 2025 年 2 月 16 日 1:22，因为电脑重装，然后 vercel 出现了奇奇怪怪的 bug，一直部署失败，好不容易才修好博客",
      "guid": "https://www.blueke.top/posts/%E4%BD%A0%E5%A5%BD2025/",
      "categories": [
        "生活"
      ],
      "isoDate": "2025-02-15T21:15:00.000Z"
    },
    {
      "title": "辗转相除法求最大公约数",
      "link": "https://www.blueke.top/posts/%E8%BE%97%E8%BD%AC%E7%9B%B8%E9%99%A4%E6%B3%95%E6%B1%82%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0/",
      "pubDate": "Mon, 23 Dec 2024 21:49:00 GMT",
      "content:encoded": "<p>记录一下学到的快速求最大公约数的办法\n&lt;!--more--&gt;</p>\n<h2>原理</h2>\n<p>辗转相除法，也叫欧几里得算法，是用于求两个正整数的最大公约数的一种高效算法。它基于这样一个原理：两个整数的最大公约数等于其中较小的数和两数相除余数的最大公约数。</p>\n<h2>实现</h2>\n<p>直接粘代码吧</p>\n<pre><code>def func(m, n):\n    while n:\n        m, n = n, m % n\n    return m\n</code></pre>\n<p>具体解释如下：</p>\n<ol>\n<li><strong>函数定义</strong>：</li>\n</ol>\n<pre><code>   def func(m, n):\n</code></pre>\n<p>定义了一个名为 <code>func</code> 的函数，接受两个参数 <code>m</code> 和 <code>n</code>，这两个参数用于传入需要计算最大公约数的两个数。</p>\n<ol>\n<li><strong>循环部分</strong>：</li>\n</ol>\n<pre><code>   while n:\n       m, n = n, m % n\n   ```\n\n这是一个 `while` 循环，只要 `n` 不为 0，就会一直执行循环体。在循环体中，通过语句 `m, n = n, m % n` 实现了辗转相除的核心操作。它将 `n` 的值赋给 `m`，将 `m` 除以 `n` 的余数赋给 `n`。这样每次循环都在更新 `m` 和 `n` 的值，逐步逼近最大公约数。\n\n3. **返回结果**：\n```python\n   return m\n   ```\n\n当 `n` 最终变为 0 时，循环结束，此时的 `m` 就是 `m` 和 `n` 最初传入值的最大公约数，将其返回。\n\n4. **调用函数并输出结果**：\n```python\n   m = 72\n   n = 36\n   print(f\"{m} 和 {n} 的最大公约数是: {func(m, n)}\")\n   ```\n\n定义了两个变量 `m` 和 `n`，分别赋值为 72 和 36，然后调用 `func` 函数计算它们的最大公约数，并使用格式化字符串输出结果。\n\n在这个例子中，计算过程如下：\n\n- 初始 `m = 72`，`n = 36`。\n- 第一次循环：`m = 36`，`n = 72 % 36 = 0`。\n- 此时 `n` 为 0，循环结束，函数返回 `m` 的值 36，所以 72 和 36 的最大公约数是 36。</code></pre>\n",
      "content:encodedSnippet": "记录一下学到的快速求最大公约数的办法\n<!--more-->\n原理\n辗转相除法，也叫欧几里得算法，是用于求两个正整数的最大公约数的一种高效算法。它基于这样一个原理：两个整数的最大公约数等于其中较小的数和两数相除余数的最大公约数。\n实现\n直接粘代码吧\ndef func(m, n):\n    while n:\n        m, n = n, m % n\n    return m\n\n具体解释如下：\n函数定义：\n   def func(m, n):\n\n定义了一个名为 func 的函数，接受两个参数 m 和 n，这两个参数用于传入需要计算最大公约数的两个数。\n循环部分：\n   while n:\n       m, n = n, m % n\n   ```\n\n这是一个 `while` 循环，只要 `n` 不为 0，就会一直执行循环体。在循环体中，通过语句 `m, n = n, m % n` 实现了辗转相除的核心操作。它将 `n` 的值赋给 `m`，将 `m` 除以 `n` 的余数赋给 `n`。这样每次循环都在更新 `m` 和 `n` 的值，逐步逼近最大公约数。\n\n3. **返回结果**：\n```python\n   return m\n   ```\n\n当 `n` 最终变为 0 时，循环结束，此时的 `m` 就是 `m` 和 `n` 最初传入值的最大公约数，将其返回。\n\n4. **调用函数并输出结果**：\n```python\n   m = 72\n   n = 36\n   print(f\"{m} 和 {n} 的最大公约数是: {func(m, n)}\")\n   ```\n\n定义了两个变量 `m` 和 `n`，分别赋值为 72 和 36，然后调用 `func` 函数计算它们的最大公约数，并使用格式化字符串输出结果。\n\n在这个例子中，计算过程如下：\n\n- 初始 `m = 72`，`n = 36`。\n- 第一次循环：`m = 36`，`n = 72 % 36 = 0`。\n- 此时 `n` 为 0，循环结束，函数返回 `m` 的值 36，所以 72 和 36 的最大公约数是 36。",
      "guid": "https://www.blueke.top/posts/%E8%BE%97%E8%BD%AC%E7%9B%B8%E9%99%A4%E6%B3%95%E6%B1%82%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0/",
      "categories": [
        "笔记",
        "博客",
        "数学"
      ],
      "isoDate": "2024-12-23T21:49:00.000Z"
    },
    {
      "title": "力扣322 零钱兑换",
      "link": "https://www.blueke.top/posts/li-kou-322-ling-qian-dui-huan/",
      "pubDate": "Wed, 27 Nov 2024 22:01:00 GMT",
      "content:encoded": "<p><strong>题目来源</strong>\n<a href=\"https://leetcode.cn/problems/coin-change/\">322. 零钱兑换 - 力扣（LeetCode）</a></p>\n<h2>题目描述</h2>\n<p>给你一个整数数组 <code>coins</code> ，表示不同面额的硬币；以及一个整数 <code>amount</code> ，表示总金额。\n计算并返回可以凑成总金额所需的 <strong>最少的硬币个数</strong> 。如果没有任何一种硬币组合能组成总金额，返回 <code>-1</code> 。\n你可以认为每种硬币的数量是无限的。</p>\n<blockquote>\n<p><strong>示例 1：</strong>\n<strong>输入：coins = <code>[1, 2, 5]</code>, amount = <code>11</code></strong>\n<strong>输出：<code>3</code></strong>\n<strong>解释：11 = 5 + 5 + 1</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>示例 2：</strong>\n<strong>输入：coins = <code>[2]</code>, amount = <code>3</code></strong>\n<strong>输出：-1</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>示例 3：</strong>\n<strong>输入：coins = [1], amount = 0</strong>\n<strong>输出：0</strong></p>\n</blockquote>\n<h2>分析</h2>\n<p>硬币不是排序好的，所以要先处理下数组。然后 amount=0，直接输出 0. 所以将 dp[0]写进 0 即可然后从小到大，找出每个金额 i 的最优解，最后就找到 amount 的最优解了。\n<strong>重点理解</strong>\ndp 动态规划的思想。要一步步的从小问题开始，例如本题，就是从金额 1 开始寻找最优解，直到找到 amount 的最优解</p>\n<h2>代码</h2>\n<pre><code>class Solution {\n    public int coinChange(int[] coins, int amount) {\n         // 先排序，样例有无序的\n        Arrays.sort(coins);\n        // 初始化一个较大的值，表示当前还未找到可行解\n        int[] dp = new int[amount + 1];\n        Arrays.fill(dp, amount + 1);\n        // 金额为0时，所需硬币个数为0，这是基础情况\n        dp[0] = 0;\n\n        // 从金额1块钱开始，凑i块钱需要多少个硬币\n        for (int i = 1; i &lt;= amount; i++) {\n            for (int coin : coins) {\n                if (coin &lt;= i) {\n                    // dp[i]存的是金额为i的时候最少的硬币数量\n                    // 尝试用当前硬币去凑金额i，取较小值（当前的dp[i]和使用该硬币后的情况对比）\n                    // 比如i=7，coin =5，就表示现在七块钱，用五块钱硬币凑，如果花的硬币更少\n                    // 就记录此时需要的最少金币数\n                    dp[i] = Math.min(dp[i], dp[i - coin] + 1);\n                } else {\n                    // 如果当前硬币面额大于要凑的金额，就不用继续尝试更大面额的硬币了\n                    break;\n                }\n            }\n        }\n\n        // 如果最终结果还是初始化的较大值，说明无法凑出给定金额，返回 -1\n        return dp[amount] &gt; amount? -1 : dp[amount];\n    }\n}\n</code></pre>\n",
      "content:encodedSnippet": "题目来源\n322. 零钱兑换 - 力扣（LeetCode）\n题目描述\n给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。\n计算并返回可以凑成总金额所需的 最少的硬币个数 。如果没有任何一种硬币组合能组成总金额，返回 -1 。\n你可以认为每种硬币的数量是无限的。\n示例 1：\n输入：coins = [1, 2, 5], amount = 11\n输出：3\n解释：11 = 5 + 5 + 1\n示例 2：\n输入：coins = [2], amount = 3\n输出：-1\n示例 3：\n输入：coins = [1], amount = 0\n输出：0\n分析\n硬币不是排序好的，所以要先处理下数组。然后 amount=0，直接输出 0. 所以将 dp[0]写进 0 即可然后从小到大，找出每个金额 i 的最优解，最后就找到 amount 的最优解了。\n重点理解\ndp 动态规划的思想。要一步步的从小问题开始，例如本题，就是从金额 1 开始寻找最优解，直到找到 amount 的最优解\n代码\nclass Solution {\n    public int coinChange(int[] coins, int amount) {\n         // 先排序，样例有无序的\n        Arrays.sort(coins);\n        // 初始化一个较大的值，表示当前还未找到可行解\n        int[] dp = new int[amount + 1];\n        Arrays.fill(dp, amount + 1);\n        // 金额为0时，所需硬币个数为0，这是基础情况\n        dp[0] = 0;\n\n        // 从金额1块钱开始，凑i块钱需要多少个硬币\n        for (int i = 1; i <= amount; i++) {\n            for (int coin : coins) {\n                if (coin <= i) {\n                    // dp[i]存的是金额为i的时候最少的硬币数量\n                    // 尝试用当前硬币去凑金额i，取较小值（当前的dp[i]和使用该硬币后的情况对比）\n                    // 比如i=7，coin =5，就表示现在七块钱，用五块钱硬币凑，如果花的硬币更少\n                    // 就记录此时需要的最少金币数\n                    dp[i] = Math.min(dp[i], dp[i - coin] + 1);\n                } else {\n                    // 如果当前硬币面额大于要凑的金额，就不用继续尝试更大面额的硬币了\n                    break;\n                }\n            }\n        }\n\n        // 如果最终结果还是初始化的较大值，说明无法凑出给定金额，返回 -1\n        return dp[amount] > amount? -1 : dp[amount];\n    }\n}",
      "guid": "https://www.blueke.top/posts/li-kou-322-ling-qian-dui-huan/",
      "categories": [
        "Java",
        "刷题"
      ],
      "isoDate": "2024-11-27T22:01:00.000Z"
    },
    {
      "title": "博客美化记录",
      "link": "https://www.blueke.top/posts/bo-ke-mei-hua-ji-lu/",
      "pubDate": "Wed, 20 Nov 2024 16:25:00 GMT",
      "content:encoded": "<p>简单记录下 stellar 主题的博客美化过程，偏重 Halo，Hexo 仅供参考\n&lt;!--more--&gt;</p>\n<h2>文章</h2>\n<h3>摘要</h3>\n<p>目前 halo 主题不支持自动摘要，但添加 <code>excerpt</code> 属性，可以在写的时候设置摘要。</p>\n<h2>侧栏</h2>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E4%BE%A7%E6%A0%8F.png\" alt=\"侧栏|400\" />\n侧栏设置</p>\n<h3>banner（hexo）</h3>\n<p>hexo 主题提供了超级多的组件\n效果图如下\n![[博客美化记录-202411250018.png]]</p>\n<pre><code>{% banner 友情链接 请为一切不真实之物感到骄傲,因为我们高于这个世界！ avatar:https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E5%A4%B4%E5%83%8F.jpg  bg:https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/pc2.webp %}\n{% endbanner %}\n</code></pre>\n<h2>一言 API</h2>\n<p>插入到合适地方即可</p>\n<pre><code>&lt;p id=\"hitokoto\" style=\"font-size: 11px;\"&gt;:D 获取中...&lt;/p&gt;\n&lt;script src=\"https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto\" defer&gt;&lt;/script&gt;\n</code></pre>\n<p>还有个 API 也可以选择</p>\n<pre><code>&lt;script src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n</code></pre>\n<h2>随机图</h2>\n<p>插入到合适地方。</p>\n<pre><code>&lt;img src=\"https://t.mwm.moe/pc\"&gt;\n# 备份 https://t.mwm.moe/pc | https://imgapi.xl0408.top/index.php\n</code></pre>\n<h2>页脚</h2>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E9%A1%B5%E8%84%9A.webp\" alt=\"博客美化记录-202411201642|450\" /></p>\n<h3>添加不蒜子统计</h3>\n<p>不蒜子是一个超级简单的网页计数器，可以用来统计站点信息。\n引用方式也十分简单只要在对应位置添加以下代码即可</p>\n<pre><code>\t\t&lt;!--不蒜子计数器--&gt;\n        &lt;script async src=\"https://busuanzi.sukap.cn/busuanzi.pure.mini.js\"&gt;&lt;/script&gt;\n        &lt;!--添加一个访问量--&gt;\n        &lt;span style=\"text-align: center;\"&gt;本\"&lt;span style=\" color: hsl(192 98% 55%); font-weight: bold; \"&gt;页面&lt;/span&gt;\"访问 &lt;span id=\"busuanzi_value_page_pv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"&gt;&lt;/span&gt; 次 | 👀总访问 &lt;span id=\"busuanzi_value_site_pv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"&gt;&lt;/span&gt; 次 | 总访客 &lt;span id=\"busuanzi_value_site_uv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"&gt;&lt;/span&gt; 人&lt;/span&gt;\n</code></pre>\n<h3>建站天数信息</h3>\n<p>在对应的页脚中插入以下代码即可实现。</p>\n<pre><code>        &lt;span id=\"runtime_span\" style=\"text-align: center;\"&gt;&lt;/span&gt;\n        &lt;script type=\"text/javascript\"&gt;\n          function show_runtime() {\n          window.setTimeout(\"show_runtime()\", 1000);\n          X = new Date(\"2024/01/7 17:00:00\");\n          Y = new Date();\n          T = (Y.getTime() - X.getTime());\n          M = 24 * 60 * 60 * 1000;\n          a = T / M;\n          A = Math.floor(a);\n          b = (a - A) * 24;\n          B = Math.floor(b);\n          c = (b - B) * 60;\n          C = Math.floor((b - B) * 60);\n          D = Math.floor((c - C) * 60);\n          runtime_span.innerHTML = \"⏱️本站已运行 \" + A + \"天\" + B + \"小时\" + C + \"分\" + D + \"秒\"\n          } \n          show_runtime();\n        &lt;/script&gt;\n</code></pre>\n<h3>Waline 评论</h3>\n<p>Waline 是一款简洁、安全的评论系统。优点：布置简单，功能强大。\n官方地址： <a href=\"https://waline.js.org/\">Waline官方</a></p>\n<blockquote>\n<p>在引入前请自行部署服务端，部署也是很简单的，十分钟左右</p>\n</blockquote>\n<h4>引入</h4>\n<p>在合适的位置（如页脚）引入以下代码：</p>\n<pre><code>&lt;link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" /&gt;\n&lt;div id=\"waline\"&gt;&lt;/div&gt;\n&lt;script type=\"module\"&gt;\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n    \n  const blockedPages = ['/categories', '/tags'];\n  const currentPage = window.location.pathname;\n\n  // 检查当前页面是否不在屏蔽列表中且不是首页\n  const shouldShowWaline =!blockedPages.includes(currentPage) &amp;&amp; currentPage!== '/';\n\n  if (shouldShowWaline) {\n    init({\n      el: '#waline',\n      serverURL: 'https://your serverURL',\n      path: window.location.pathname,\n    });\n  }\n&lt;/script&gt;\n</code></pre>\n<p>我这个和官方有点不同，主要是 Halo 只能全局注入页脚，所以只能加个判断了，可自行修改</p>\n<h4>拓展 统计信息</h4>\n<p>Waline 还支持更多的操作，如添加表情包，添加访问信息，这里我就直接上源码了。\n（顺便隐藏了一下统计信息）</p>\n<pre><code>&lt;!--waline评论--&gt;\n&lt;link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" /&gt;\n&lt;div id=\"waline\"&gt;&lt;/div&gt;\n\n&lt;script type=\"module\"&gt;\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n  const blockedPages = ['/categories', '/tags'];\n  const currentPage = window.location.pathname;\n\n  // 合并判断条件，判断是否显示Waline相关内容（组件及统计信息）\n  const shouldShowWalineRelated =!blockedPages.includes(currentPage) &amp;&amp; currentPage!== '/';\n\n  // 根据判断结果决定是否创建并插入统计信息\n  if (shouldShowWalineRelated) {\n    const statsInfoHTML = `\n    &lt;div id=\"waline-info\" style=\"display: flex; justify-content: space-between; align-items: center;\"&gt;\n      &lt;!--阅读量 --&gt;\n      &lt;div style=\"display: flex; align-items: center;\"&gt;\n        阅读量: &lt;span class=\"waline-pageview-count\" data-path=\"/\" style=\"margin-left: 5px;\"&gt;&lt;/span&gt;\n      &lt;/div&gt;\n      &lt;!--评论数 --&gt;\n      &lt;div style=\"display: flex; align-items: center;\"&gt;\n        评论数：&lt;span class=\"waline-comment-count\" style=\"margin-left: 5px;\"&gt;&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n    `;\n    const linkElement = document.querySelector('link[rel=\"stylesheet\"][href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\"]');\n    if (linkElement) {\n      linkElement.insertAdjacentHTML('beforebegin', statsInfoHTML);\n    }\n    init({\n      el: '#waline',\n      serverURL: 'https://waline.blueke.top',\n      path: window.location.pathname,\n      pageview: true, // 浏览量统计\n      comment: true, // 评论数统计\n      emoji: [\n        '//unpkg.com/@waline/emojis@1.2.0/alus',\n        '//unpkg.com/@waline/emojis@1.2.0/qq',\n      ],\n    });\n  }\n&lt;/script&gt;\n</code></pre>\n<blockquote>\n<p>还有一种，不过这个有点看网速，网速不好下面仍会出现，仅备份。</p>\n</blockquote>\n<pre><code>&lt;!--waline--&gt;\n&lt;!--统计信息--&gt;\n&lt;div id=\"waline-info\" style=\"display: flex; justify-content: space-between; align-items: center;\"&gt;\n  &lt;!--阅读量 --&gt;\n  &lt;div style=\"display: flex; align-items: center;\"&gt;\n    阅读量: &lt;span class=\"waline-pageview-count\" data-path=\"/\" style=\"margin-left: 5px;\"&gt;&lt;/span&gt;\n  &lt;/div&gt;\n  &lt;!--评论数 --&gt;\n  &lt;div style=\"display: flex; align-items: center;\"&gt;\n    评论数：&lt;span class=\"waline-comment-count\" style=\"margin-left: 5px;\"&gt;&lt;/span&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;!--waline评论--&gt;\n&lt;link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" /&gt;\n&lt;div id=\"waline\"&gt;&lt;/div&gt;\n\n&lt;script type=\"module\"&gt;\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n  const walineInfo = document.getElementById('waline-info');\n  const blockedPages = ['/categories', '/tags'];\n  const currentPage = window.location.pathname;\n  \n  // 合并判断条件，判断是否显示Waline相关内容（组件及统计信息）\n  const shouldShowWalineRelated =!blockedPages.includes(currentPage) &amp;&amp; currentPage!== '/';\n  \n  if (shouldShowWalineRelated) {\n    init({\n      el: '#waline',\n      serverURL: 'https://waline.blueke.top',\n      path: window.location.pathname,\n      pageview: true, // 浏览量统计\n      comment: true, // 评论数统计\n      emoji: [\n        '//unpkg.com/@waline/emojis@1.2.0/alus',\n        '//unpkg.com/@waline/emojis@1.2.0/qq',\n      ],\n    });\n  } else {\n    // 如果不满足条件，直接移除统计信息元素\n    walineInfo.parentNode.removeChild(walineInfo);\n  }\n&lt;/script&gt;\n</code></pre>\n<p>再次备份，这个勉强可用，但是网速不好，下面会显示出来</p>\n<pre><code>&lt;!--waline评论--&gt;\n&lt;link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" /&gt;\n&lt;div id=\"waline\"&gt;&lt;/div&gt;\n\n&lt;script type=\"module\"&gt;\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n  const blockedPages = ['/categories', '/tags'];\n  const currentPage = window.location.pathname;\n\n  // 合并判断条件，判断是否显示Waline相关内容（组件及统计信息）\n  const shouldShowWalineRelated =!blockedPages.includes(currentPage) &amp;&amp; currentPage!== '/';\n\n  // 根据判断结果决定是否创建并插入统计信息的DOM结构\n  if (shouldShowWalineRelated) {\n    const statsInfoHTML = `\n    &lt;div id=\"waline-info\" style=\"display: flex; justify-content: space-between; align-items: center;\"&gt;\n      &lt;!--阅读量 --&gt;\n      &lt;div style=\"display: flex; align-items: center;\"&gt;\n        阅读量: &lt;span class=\"waline-pageview-count\" data-path=\"/\" style=\"margin-left: 5px;\"&gt;&lt;/span&gt;\n      &lt;/div&gt;\n      &lt;!--评论数 --&gt;\n      &lt;div style=\"display: flex; align-items: center;\"&gt;\n        评论数：&lt;span class=\"waline-comment-count\" style=\"margin-left: 5px;\"&gt;&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n    `;\n    document.body.insertAdjacentHTML('beforeend', statsInfoHTML);\n    init({\n      el: '#waline',\n      serverURL: 'https://waline.blueke.top',\n      path: window.location.pathname,\n      pageview: true, // 浏览量统计\n      comment: true, // 评论数统计\n      emoji: [\n        '//unpkg.com/@waline/emojis@1.2.0/alus',\n        '//unpkg.com/@waline/emojis@1.2.0/qq',\n      ],\n    });\n  }\n&lt;/script&gt;\n</code></pre>\n<h4>第三方评论无法使用快速跳转底部的解决方案</h4>\n<p>建一个目录同级（或者直接右侧？）的功能，引入以下代码</p>\n<pre><code>&lt;div&gt;\n  &lt;button id=\"fixedButton\" onclick=\"scrollButton()\"&gt;回到底部&lt;/button&gt;\n&lt;/div&gt;\n\n&lt;style&gt;\n  /* 这段CSS样式用于设置按钮的固定定位，使其不随页面滚动而移动，可根据需求调整样式 */\n  #fixedButton {\n    position: fixed;\n    bottom: 300px; /* 距离页面底部20px，可按需调整此距离 */\n    right: 333px; /* 距离页面右侧20px，可按需调整此距离 */\n    padding: 5px 10px;\n    background-color: #333;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n&lt;/style&gt;\n\n&lt;script&gt;\nfunction scrollButton() {\n    // 设置每次点击向下滑动的固定距离，这里设置为200像素，你可按需修改此数值\n    const scrollDistance = 20000;\n    window.scrollBy(0, scrollDistance);\n}\n&lt;/script&gt;\n</code></pre>\n<h3>添加 artitalk 说说</h3>\n<p><a href=\"https://artitalk.js.org/\">Artitalk.js</a> 基于 LeanCloud 实现的可实时发布说说/微语的 js\n现根据官方文档构建项目，然后在 halo 的页脚（内容页不知道为什么插不进去）插入下面代码即可。</p>\n<pre><code>&lt;!-- 引用 artitalk --&gt;\n&lt;script type=\"text/javascript\" src=\"https://unpkg.com/artitalk\"&gt;&lt;/script&gt;\n&lt;!-- 存放说说的容器 --&gt;\n&lt;div id=\"artitalk_main\"&gt;&lt;/div&gt;\n\n&lt;style&gt;\n  #artitalk_main .cbp_tmtimeline&gt;li .cbp_tmlabel {\n  font-size: 17px;\n  font-weight: 600;\n}\n&lt;/style&gt;\n&lt;script&gt;\n    window.onload = function () {\n    const currentPath = window.location.pathname;\n    const targetPages = ['/test', '/about'];\n\n    if (targetPages.includes(currentPath)) {\n        const artitalkScript = document.createElement('script');\n        artitalkScript.type = \"text/javascript\";\n        artitalkScript.src = \"https://unpkg.com/artitalk\";\n        document.body.appendChild(artitalkScript);\n\n        const artitalkContainer = document.createElement('div');\n        artitalkContainer.id = \"artitalk_main\";\n        document.body.appendChild(artitalkContainer);\n\n        artitalkScript.onload = function () {\n            new Artitalk({\n                appId: '',\n                appKey: '',\n                color1: 'linear-gradient(45deg,rgba(109,208,242,0.75) 15%,rgba(245,154,190,0.75) 85%)',\n\t            color2: 'linear-gradient(45deg,rgba(109,208,242,0.75) 15%,rgba(245,154,190,0.75) 85%)',\n                color3: 'black',\n            });\n        };\n    }\n};\n&lt;/script&gt;\n</code></pre>\n<h3>memos 实现说说</h3>\n<p>服务器太小了，先画饼....</p>\n",
      "content:encodedSnippet": "简单记录下 stellar 主题的博客美化过程，偏重 Halo，Hexo 仅供参考\n<!--more-->\n文章\n摘要\n目前 halo 主题不支持自动摘要，但添加 excerpt 属性，可以在写的时候设置摘要。\n侧栏\n\n侧栏设置\nbanner（hexo）\nhexo 主题提供了超级多的组件\n效果图如下\n![[博客美化记录-202411250018.png]]\n{% banner 友情链接 请为一切不真实之物感到骄傲,因为我们高于这个世界！ avatar:https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E5%A4%B4%E5%83%8F.jpg  bg:https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/pc2.webp %}\n{% endbanner %}\n\n一言 API\n插入到合适地方即可\n<p id=\"hitokoto\" style=\"font-size: 11px;\">:D 获取中...</p>\n<script src=\"https://v1.hitokoto.cn/?encode=js&select=%23hitokoto\" defer></script>\n\n还有个 API 也可以选择\n<script src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"></script>\n\n随机图\n插入到合适地方。\n<img src=\"https://t.mwm.moe/pc\">\n# 备份 https://t.mwm.moe/pc | https://imgapi.xl0408.top/index.php\n\n页脚\n\n添加不蒜子统计\n不蒜子是一个超级简单的网页计数器，可以用来统计站点信息。\n引用方式也十分简单只要在对应位置添加以下代码即可\n\t\t<!--不蒜子计数器-->\n        <script async src=\"https://busuanzi.sukap.cn/busuanzi.pure.mini.js\"></script>\n        <!--添加一个访问量-->\n        <span style=\"text-align: center;\">本\"<span style=\" color: hsl(192 98% 55%); font-weight: bold; \">页面</span>\"访问 <span id=\"busuanzi_value_page_pv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"></span> 次 | 👀总访问 <span id=\"busuanzi_value_site_pv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"></span> 次 | 总访客 <span id=\"busuanzi_value_site_uv\" style=\" color: hsl(192 98% 55%); font-weight: bold; \"></span> 人</span>\n\n建站天数信息\n在对应的页脚中插入以下代码即可实现。\n        <span id=\"runtime_span\" style=\"text-align: center;\"></span>\n        <script type=\"text/javascript\">\n          function show_runtime() {\n          window.setTimeout(\"show_runtime()\", 1000);\n          X = new Date(\"2024/01/7 17:00:00\");\n          Y = new Date();\n          T = (Y.getTime() - X.getTime());\n          M = 24 * 60 * 60 * 1000;\n          a = T / M;\n          A = Math.floor(a);\n          b = (a - A) * 24;\n          B = Math.floor(b);\n          c = (b - B) * 60;\n          C = Math.floor((b - B) * 60);\n          D = Math.floor((c - C) * 60);\n          runtime_span.innerHTML = \"⏱️本站已运行 \" + A + \"天\" + B + \"小时\" + C + \"分\" + D + \"秒\"\n          } \n          show_runtime();\n        </script>\n\nWaline 评论\nWaline 是一款简洁、安全的评论系统。优点：布置简单，功能强大。\n官方地址： Waline官方\n在引入前请自行部署服务端，部署也是很简单的，十分钟左右\n引入\n在合适的位置（如页脚）引入以下代码：\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" />\n<div id=\"waline\"></div>\n<script type=\"module\">\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n    \n  const blockedPages = ['/categories', '/tags'];\n  const currentPage = window.location.pathname;\n\n  // 检查当前页面是否不在屏蔽列表中且不是首页\n  const shouldShowWaline =!blockedPages.includes(currentPage) && currentPage!== '/';\n\n  if (shouldShowWaline) {\n    init({\n      el: '#waline',\n      serverURL: 'https://your serverURL',\n      path: window.location.pathname,\n    });\n  }\n</script>\n\n我这个和官方有点不同，主要是 Halo 只能全局注入页脚，所以只能加个判断了，可自行修改\n拓展 统计信息\nWaline 还支持更多的操作，如添加表情包，添加访问信息，这里我就直接上源码了。\n（顺便隐藏了一下统计信息）\n<!--waline评论-->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" />\n<div id=\"waline\"></div>\n\n<script type=\"module\">\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n  const blockedPages = ['/categories', '/tags'];\n  const currentPage = window.location.pathname;\n\n  // 合并判断条件，判断是否显示Waline相关内容（组件及统计信息）\n  const shouldShowWalineRelated =!blockedPages.includes(currentPage) && currentPage!== '/';\n\n  // 根据判断结果决定是否创建并插入统计信息\n  if (shouldShowWalineRelated) {\n    const statsInfoHTML = `\n    <div id=\"waline-info\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n      <!--阅读量 -->\n      <div style=\"display: flex; align-items: center;\">\n        阅读量: <span class=\"waline-pageview-count\" data-path=\"/\" style=\"margin-left: 5px;\"></span>\n      </div>\n      <!--评论数 -->\n      <div style=\"display: flex; align-items: center;\">\n        评论数：<span class=\"waline-comment-count\" style=\"margin-left: 5px;\"></span>\n      </div>\n    </div>\n    `;\n    const linkElement = document.querySelector('link[rel=\"stylesheet\"][href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\"]');\n    if (linkElement) {\n      linkElement.insertAdjacentHTML('beforebegin', statsInfoHTML);\n    }\n    init({\n      el: '#waline',\n      serverURL: 'https://waline.blueke.top',\n      path: window.location.pathname,\n      pageview: true, // 浏览量统计\n      comment: true, // 评论数统计\n      emoji: [\n        '//unpkg.com/@waline/emojis@1.2.0/alus',\n        '//unpkg.com/@waline/emojis@1.2.0/qq',\n      ],\n    });\n  }\n</script>\n\n还有一种，不过这个有点看网速，网速不好下面仍会出现，仅备份。\n<!--waline-->\n<!--统计信息-->\n<div id=\"waline-info\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n  <!--阅读量 -->\n  <div style=\"display: flex; align-items: center;\">\n    阅读量: <span class=\"waline-pageview-count\" data-path=\"/\" style=\"margin-left: 5px;\"></span>\n  </div>\n  <!--评论数 -->\n  <div style=\"display: flex; align-items: center;\">\n    评论数：<span class=\"waline-comment-count\" style=\"margin-left: 5px;\"></span>\n  </div>\n</div>\n\n<!--waline评论-->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" />\n<div id=\"waline\"></div>\n\n<script type=\"module\">\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n  const walineInfo = document.getElementById('waline-info');\n  const blockedPages = ['/categories', '/tags'];\n  const currentPage = window.location.pathname;\n  \n  // 合并判断条件，判断是否显示Waline相关内容（组件及统计信息）\n  const shouldShowWalineRelated =!blockedPages.includes(currentPage) && currentPage!== '/';\n  \n  if (shouldShowWalineRelated) {\n    init({\n      el: '#waline',\n      serverURL: 'https://waline.blueke.top',\n      path: window.location.pathname,\n      pageview: true, // 浏览量统计\n      comment: true, // 评论数统计\n      emoji: [\n        '//unpkg.com/@waline/emojis@1.2.0/alus',\n        '//unpkg.com/@waline/emojis@1.2.0/qq',\n      ],\n    });\n  } else {\n    // 如果不满足条件，直接移除统计信息元素\n    walineInfo.parentNode.removeChild(walineInfo);\n  }\n</script>\n\n再次备份，这个勉强可用，但是网速不好，下面会显示出来\n<!--waline评论-->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@waline/client@v3/dist/waline.css\" />\n<div id=\"waline\"></div>\n\n<script type=\"module\">\n  import { init } from 'https://unpkg.com/@waline/client@v3/dist/waline.js';\n  const blockedPages = ['/categories', '/tags'];\n  const currentPage = window.location.pathname;\n\n  // 合并判断条件，判断是否显示Waline相关内容（组件及统计信息）\n  const shouldShowWalineRelated =!blockedPages.includes(currentPage) && currentPage!== '/';\n\n  // 根据判断结果决定是否创建并插入统计信息的DOM结构\n  if (shouldShowWalineRelated) {\n    const statsInfoHTML = `\n    <div id=\"waline-info\" style=\"display: flex; justify-content: space-between; align-items: center;\">\n      <!--阅读量 -->\n      <div style=\"display: flex; align-items: center;\">\n        阅读量: <span class=\"waline-pageview-count\" data-path=\"/\" style=\"margin-left: 5px;\"></span>\n      </div>\n      <!--评论数 -->\n      <div style=\"display: flex; align-items: center;\">\n        评论数：<span class=\"waline-comment-count\" style=\"margin-left: 5px;\"></span>\n      </div>\n    </div>\n    `;\n    document.body.insertAdjacentHTML('beforeend', statsInfoHTML);\n    init({\n      el: '#waline',\n      serverURL: 'https://waline.blueke.top',\n      path: window.location.pathname,\n      pageview: true, // 浏览量统计\n      comment: true, // 评论数统计\n      emoji: [\n        '//unpkg.com/@waline/emojis@1.2.0/alus',\n        '//unpkg.com/@waline/emojis@1.2.0/qq',\n      ],\n    });\n  }\n</script>\n\n第三方评论无法使用快速跳转底部的解决方案\n建一个目录同级（或者直接右侧？）的功能，引入以下代码\n<div>\n  <button id=\"fixedButton\" onclick=\"scrollButton()\">回到底部</button>\n</div>\n\n<style>\n  /* 这段CSS样式用于设置按钮的固定定位，使其不随页面滚动而移动，可根据需求调整样式 */\n  #fixedButton {\n    position: fixed;\n    bottom: 300px; /* 距离页面底部20px，可按需调整此距离 */\n    right: 333px; /* 距离页面右侧20px，可按需调整此距离 */\n    padding: 5px 10px;\n    background-color: #333;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n</style>\n\n<script>\nfunction scrollButton() {\n    // 设置每次点击向下滑动的固定距离，这里设置为200像素，你可按需修改此数值\n    const scrollDistance = 20000;\n    window.scrollBy(0, scrollDistance);\n}\n</script>\n\n添加 artitalk 说说\nArtitalk.js 基于 LeanCloud 实现的可实时发布说说/微语的 js\n现根据官方文档构建项目，然后在 halo 的页脚（内容页不知道为什么插不进去）插入下面代码即可。\n<!-- 引用 artitalk -->\n<script type=\"text/javascript\" src=\"https://unpkg.com/artitalk\"></script>\n<!-- 存放说说的容器 -->\n<div id=\"artitalk_main\"></div>\n\n<style>\n  #artitalk_main .cbp_tmtimeline>li .cbp_tmlabel {\n  font-size: 17px;\n  font-weight: 600;\n}\n</style>\n<script>\n    window.onload = function () {\n    const currentPath = window.location.pathname;\n    const targetPages = ['/test', '/about'];\n\n    if (targetPages.includes(currentPath)) {\n        const artitalkScript = document.createElement('script');\n        artitalkScript.type = \"text/javascript\";\n        artitalkScript.src = \"https://unpkg.com/artitalk\";\n        document.body.appendChild(artitalkScript);\n\n        const artitalkContainer = document.createElement('div');\n        artitalkContainer.id = \"artitalk_main\";\n        document.body.appendChild(artitalkContainer);\n\n        artitalkScript.onload = function () {\n            new Artitalk({\n                appId: '',\n                appKey: '',\n                color1: 'linear-gradient(45deg,rgba(109,208,242,0.75) 15%,rgba(245,154,190,0.75) 85%)',\n\t            color2: 'linear-gradient(45deg,rgba(109,208,242,0.75) 15%,rgba(245,154,190,0.75) 85%)',\n                color3: 'black',\n            });\n        };\n    }\n};\n</script>\n\nmemos 实现说说\n服务器太小了，先画饼....",
      "guid": "https://www.blueke.top/posts/bo-ke-mei-hua-ji-lu/",
      "categories": [
        "博客",
        "Halo",
        "Hexo",
        "小技巧"
      ],
      "isoDate": "2024-11-20T16:25:00.000Z"
    },
    {
      "title": "Obsidian实现笔记自动迁移并同步推送到Hexo",
      "link": "https://www.blueke.top/posts/obsidianshi-xian-bi-ji-zi-dong-qian-yi-bing-tong-bu-tui-song-dao-hexo/",
      "pubDate": "Tue, 19 Nov 2024 20:47:00 GMT",
      "content:encoded": "<p>编写了一个插件，将文件自动复制到 Hexo 的文件夹里，并自动 git push\n&lt;!--more--&gt;\n最近在玩 Hexo 博客，总感觉静态网页书写有点麻烦，因为我的笔记一般都是放到一起的，但是 Hexo 有自己的目录，在网上搜索了很久也没有合适的解决办法，就索性自己动手写一个插件了，好在不是很难，稍微有不熟悉的语法，问一下豆包也是解决了。\n（话说豆包真厉害.... 帮我完善了好多）\n话不多说，来看看怎么用的。点击即可，哈哈。\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E6%8F%92%E4%BB%B6%E6%8C%89%E9%92%AE.png\" alt=\"插件按钮|322\" /></p>\n<h2>效果展示</h2>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E6%8F%92%E4%BB%B6%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA.png\" alt=\"插件效果展示\" /></p>\n<h2>插件设置</h2>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E6%8F%92%E4%BB%B6%E8%AE%BE%E7%BD%AE.png\" alt=\"插件设置\" />\n源文件夹：就是自己存放博客的 Obsidian 位置了，写相对路径哈~没有加判断，相对路径已经够简单了。\n目标文件夹：Hexo 本地仓库存放博客的所在位置\n开启自动推送：开启后，会执行 git push 操作，如果分支不一样，可以自行更改</p>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/push%E9%85%8D%E7%BD%AE.png\" alt=\"push配置|500\" /></p>\n<p>git push 的相关代码如图所示，可自行更改。</p>\n<h3>额外说明</h3>\n<p>插件根据最后更新时间进行复制操作的，未修改的不会重复操作。\n目前来看好像也没什么要更新的，除非遇到我不能使用的情况。可自行进行修改，我注释加了好多，应该有点基础的也能照着更改了。\n更新：\n2024-11-27：添加了对 hexo 文件夹检测，如果源文件夹没有，会自动删除 hexo 的博客，方便 hexo 文章的删除\n转载记得标明原作者。</p>\n<h3>仓库地址</h3>\n<p><a href=\"https://github.com/Keduoli03/note-delivery\">Keduoli03/note-delivery: Obsidian笔记自动复制到其他文件夹并推送</a></p>\n<h3>参考资料</h3>\n<ul>\n<li><a href=\"https://forum-zh.obsidian.md/t/topic/37149\">史上最简单易用的obsidian插件开发方法（适合新手） - 开发讨论 - Obsidian 中文论坛</a></li>\n<li><a href=\"https://luhaifeng666.github.io/obsidian-plugin-docs-zh/zh2.0/\">声明 | Obsidian 插件开发文档</a></li>\n</ul>\n",
      "content:encodedSnippet": "编写了一个插件，将文件自动复制到 Hexo 的文件夹里，并自动 git push\n<!--more-->\n最近在玩 Hexo 博客，总感觉静态网页书写有点麻烦，因为我的笔记一般都是放到一起的，但是 Hexo 有自己的目录，在网上搜索了很久也没有合适的解决办法，就索性自己动手写一个插件了，好在不是很难，稍微有不熟悉的语法，问一下豆包也是解决了。\n（话说豆包真厉害.... 帮我完善了好多）\n话不多说，来看看怎么用的。点击即可，哈哈。\n\n效果展示\n\n插件设置\n\n源文件夹：就是自己存放博客的 Obsidian 位置了，写相对路径哈~没有加判断，相对路径已经够简单了。\n目标文件夹：Hexo 本地仓库存放博客的所在位置\n开启自动推送：开启后，会执行 git push 操作，如果分支不一样，可以自行更改\n\ngit push 的相关代码如图所示，可自行更改。\n额外说明\n插件根据最后更新时间进行复制操作的，未修改的不会重复操作。\n目前来看好像也没什么要更新的，除非遇到我不能使用的情况。可自行进行修改，我注释加了好多，应该有点基础的也能照着更改了。\n更新：\n2024-11-27：添加了对 hexo 文件夹检测，如果源文件夹没有，会自动删除 hexo 的博客，方便 hexo 文章的删除\n转载记得标明原作者。\n仓库地址\nKeduoli03/note-delivery: Obsidian笔记自动复制到其他文件夹并推送\n参考资料\n史上最简单易用的obsidian插件开发方法（适合新手） - 开发讨论 - Obsidian 中文论坛\n声明 | Obsidian 插件开发文档",
      "guid": "https://www.blueke.top/posts/obsidianshi-xian-bi-ji-zi-dong-qian-yi-bing-tong-bu-tui-song-dao-hexo/",
      "categories": [
        "笔记",
        "博客",
        "前端"
      ],
      "isoDate": "2024-11-19T20:47:00.000Z"
    },
    {
      "title": "Obsidian拓展",
      "link": "https://www.blueke.top/posts/obsidiantuo-zhan/",
      "pubDate": "Sun, 17 Nov 2024 13:59:00 GMT",
      "content:encoded": "<p>最近又对笔记进行了一些优化，目前感觉还可以，简单记录一下。 ^b9bb4d</p>\n<h2>dataview</h2>\n<p>DataView 是 Obsidian 社区中的热门插件，它为用户提供了一个强大的实时索引和查询引擎。通过在文档中设置属性（或称为元数据），DataView 能够检索并处理这些数据。借助 DataView，用户可以轻松列出、筛选、排序和分组数据，这与使用数据库查询语言类似。</p>\n<blockquote>\n<p>首先我们要知道，插件为我们初始化了很多参数，方便我们调用。请先大致浏览下图</p>\n</blockquote>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/dataview%E9%A2%9D%E5%A4%96%E5%B1%9E%E6%80%A7\" alt=\"&amp;dataview-参数|475\" /></p>\n<h3>展示最近的文件</h3>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%26dataview-%E5%B1%95%E7%A4%BA%E6%9C%80%E8%BF%91%E6%96%87%E4%BB%B6.png\" alt=\"&amp;dataview-展示最近文件\" /></p>\n<pre><code>```dataview\ntable WITHOUT ID tags as \"🏷️标签\",\nfile.link as \"📜文件\",\ndateformat(file.ctime,\"yyyy年MM月dd日\") as 🕕创建日期\nfrom \"\" and !\"笔记模板\"\nsort file.ctime desc\nwhere type = \"编程\"\nlimit 10\n```\n</code></pre>\n<p>^28840b</p>\n<p>这里我选择的是展示标签、文件名以及创建日期，并给列名取了名字。\n下面都是非必要的参数：\nfrom 支持检索文件夹和标签。标签要加 <code>#</code> 号\nsort 排序，支持多种参数，后面跟 <code>asc</code> 或者 <code>desc</code> 控制升降序，默认升序\nwhere 聚合条件，进行匹配操作。\nlimit 就是限制展示的长度啦</p>\n<blockquote>\n<p>个人实测，where 后和我上面代码一样写 = 号，和 <code>where contains(type,\"编程\")</code> 是一样的效果</p>\n</blockquote>\n<p>添加 CSS 优化，如果你已经粘贴复制了，那么标签一多，表格就会很乱，当然我们可以用 CSS 来控制</p>\n<pre><code>```dataview\ntable WITHOUT ID \"&lt;span style='display:flex; justify-content: left;'&gt;\"+tags as \"🏷️标签\",\n\"&lt;span style='display:flex; justify-content: left;'&gt;\"+file.link as \"📜文件\",\n\"&lt;span style='display:flex; justify-content: left;'&gt;\"+dateformat(file.ctime,\"yyyy年MM月dd日\") as 🕕创建日期\nfrom \"\" and -\"笔记模板\"\nsort file.ctime desc\nwhere type = \"编程\"\nlimit 10\n```\n</code></pre>\n<p>我就简单弄了下标签的布局，并都改成左对齐了。你可以自己发挥一下</p>\n<h3>展示含有某个标签的笔记</h3>\n<p>上面的细化，比如我就只想看数据库标签的笔记</p>\n<pre><code>```dataview\ntable WITHOUT ID \"&lt;span style='display:flex; justify-content: left;'&gt;\"+tags as \"类型\",\nfile.link as \"📜文件\",\ndateformat(file.ctime,\"yyyy年MM月dd日\") as 🕕创建日期\nfrom #数据库 \nwhere type = \"编程\"\n```\n</code></pre>\n<h3>展示未完成的笔记</h3>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E5%B1%95%E7%A4%BA%E6%9C%AA%E5%AE%8C%E6%88%90%E7%9A%84%E7%AC%94%E8%AE%B0.png\" alt=\"展示未完成的笔记\" />\n这里其实就是添加了个 status 的属性</p>\n<pre><code>```dataview\ntable WITHOUT ID \"&lt;span style='display:flex; justify-content: left;'&gt;\"+tags as \"🏷️标签\",\n\"&lt;span style='display:flex; justify-content: left;'&gt;\"+file.link as \"📜文件\",\n\"&lt;span style='display:flex; justify-content: left;'&gt;\"+dateformat(file.ctime,\"yyyy年MM月dd日\") as 🕕创建日期\nfrom !\"笔记模板\"\nsort file.ctime desc\nwhere status = \"未完成\"\nlimit 10\n```\n</code></pre>\n<h2>dataviewjs</h2>\n<p>dataview 本身是支持 JS 语法拓展的。这里展示一些我使用的例子，具体语法不详细展开。\n原贴放到最后</p>\n<h3>展示天数</h3>\n<p>直接上代码了</p>\n<pre><code> 今天是 `=dateformat(date(today),\"yyyy年M月d日\")`，今年还剩 `=(date(2024-12-31)-date(today))` \n</code></pre>\n<h3>展示文件数</h3>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%26dataviewjs-%E5%B1%95%E7%A4%BA%E6%96%87%E4%BB%B6.png\" alt=\"&amp;dataviewjs-展示文件\" />\n代码实现：</p>\n<pre><code>```dataviewjs\nvar i = [dv.pages().length,dv.pages(`\"\"`).length,dv.pages(`\"日常/博客\"`).length,\n         dv.pages().file.etags.distinct().length]\ndv.paragraph(`总共有 **${i[0]}** 个文件`)\ndv.paragraph(`其中==笔记== **${i[1]}** 篇，==博客== **${i[2]}** 篇`)\ndv.paragraph(`==标签== **${i[3]}**个`)\n```\n</code></pre>\n<blockquote>\n<p><code>dv</code> 是 dataview 的缩写，也是 JS 的入口。</p>\n</blockquote>\n<p><code>dv.pages</code> 的功能是，你给它一个搜索字段（如文件路径、标签等），会自动返回结果。</p>\n<blockquote>\n<p>填写文件夹，它就会把所有符合要求的文件都给你列出来。为空就是展示所有，也可以自己写对应路径，搜索某个子文件夹里的文件数量</p>\n</blockquote>\n<blockquote>\n<p>如果要搜索标签，在其中输入 <code>#对应标签</code> 即可</p>\n</blockquote>\n<p><code>dv.paragraph</code> 输出，类似 print 语法，输出结果。</p>\n<h4>拓展</h4>\n<blockquote>\n<p>输出的拓展，可以略过</p>\n</blockquote>\n<p><code>dv.paragraph</code> 与 <code>dv.list()</code>。这两种都是输出，前者类似 print 语法，输出结果。list 就是以列表形式展示\n这样也可以实现展示对应的文件， list 和 paragraph 格式可以直接输出，table 要用别的语法格式</p>\n<pre><code>```dataviewjs\ndv.list(dv.pages(\"#Vue\").file.link)\n```\n</code></pre>\n<p><strong>table 展示</strong></p>\n<pre><code>```dataviewjs\ndv.table(\n  [\"File\", \"Status\"],\n  dv.pages('\"\"')  \n  .sort(p =&gt; p.status, 'desc')\n  .map(p =&gt; [p.file.link, p.status])\n)\n```\n</code></pre>\n<p>格式是这样的，列表列名+元素，然后用 map 函数返回。</p>\n<p><code>dv.current()</code> 展示当前文件名字</p>\n<pre><code>```dataviewjs\ndv.paragraph(dv.current().file.name);\n```\n</code></pre>\n<p>好像不小心多写了很多，因为看了不少资料，就此打住，不多写了。\n更具体的请参阅 <a href=\"https://publish.obsidian.md/napkinium/Ideas/Dataview/Learnings/DataviewJS+-+%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E9%80%80%E5%9D%91+01\">DataviewJS - 从入门到退坑 01 - 餐巾纸盒子 - Obsidian Publish</a></p>\n<h3>展示笔记字数</h3>\n<p>效果图如下：\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E7%AC%94%E8%AE%B0%E5%AD%97%E6%95%B0.png\" alt=\"笔记字数\" />\n我用的是二改过的，然后自己再修改了一点，加了创建日期。\n链接：<a href=\"https://www.123684.com/s/YyUDVv-B1IJA\">点我下载</a>\n<strong>用法</strong></p>\n<pre><code>```dataviewjs\ndv.view(\"笔记模板/字数统计\",\"\")\n```\n</code></pre>\n<p>只要在合适的地方引用即可</p>\n<h2>Quick Add</h2>\n<p>目前我只用到快速创建笔记，更多功能可以看下面的链接，那个博主写的很好。\n简单来说就是，你写好模板，然后可以用这个快速创建笔记。\n比如我一般写编程时，就用下面的\n![[模板举例.png|475]]\n这样就不需要自己添加属性值了，笔记也会自动创建在你指定的文件夹中</p>\n<h3>简单实现</h3>\n<p>首先，我们在插件设置中，写好名字，右侧选择 <code>template</code>，模板格式，然后点击 add choice 创建\n然后下面是我的一些配置：\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/QuickAdd%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE.png\" alt=\"QuickAdd参数配置\" /></p>\n<p>template path: 模板地址，我是专门建个文件夹存放的\n打开 create in folder 设置，然后根据自己需要，自己每次选择文件夹还是自动放到指定好的文件夹。如果希望自动放到指定文件夹，那下面那一个不能打开。\n先点击 folder path 进行文件夹选择，然后点击 add 进行添加\n然后就是最后的 open ，开启也是有 split 分栏和 panel 新面板两个选择的，个人习惯推荐 panel</p>\n<h2>原版</h2>\n<h3>预览别的笔记</h3>\n<p>原版除了链接到别的笔记，还支持预览, 效果如下\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E5%8E%9F%E7%89%88%E9%A2%84%E8%A7%88.png\" alt=\"原版预览\" /></p>\n<p>使用也是直接在正常的链接前加个感叹号就可以了，例如 <code>![[聚沙成塔]]</code>\n那如果我们只想预览一部分，也是可以的，格式就是在上面的基础上, 在文件名后加 <code>^</code>, 然后进行选择即可\n![[块引用.png]]\n在本文中也是可以进行块引用的，直接使用 <code>^</code> 选择即可\n![[#^28840b | 块引用展示]]</p>\n<h3>快速跳转到笔记的其他标题</h3>\n<p>比如跳到 dataview，格式为 <code>[[#dataview]]</code>，也可以 <code>[[#dataview | 自定义文本]]</code> 来修改文本\n<code>[[#^....]]</code> 来进行文字块的选择，也能快速跳转\n例如</p>\n<ul>\n<li>[[#dataview | 来到第一个插件介绍]]</li>\n<li>[[#^b9bb4d| 跳转到顶部]]</li>\n</ul>\n<h2>教程参考</h2>\n<h3>dataview</h3>\n<ol>\n<li><a href=\"https://forum-zh.obsidian.md/t/topic/195\">obsidian插件之dataview入门 - 经验分享 - Obsidian 中文论坛</a></li>\n<li><a href=\"https://forum-zh.obsidian.md/t/topic/32608\">基于dataviewjs的字数统计功能 - 经验分享 - Obsidian 中文论坛</a></li>\n</ol>\n<h4>dataviewjs</h4>\n<ol>\n<li><a href=\"https://publish.obsidian.md/napkinium/Ideas/Dataview/Learnings/DataviewJS+-+%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E9%80%80%E5%9D%91+01\">DataviewJS - 从入门到退坑 01 - 餐巾纸盒子 - Obsidian Publish</a></li>\n<li><a href=\"https://forum-zh.obsidian.md/t/topic/5954/128\">Dataviewjs的奇技淫巧 - 经验分享 - Obsidian 中文论坛</a></li>\n</ol>\n<h3>Quick Add</h3>\n<ol>\n<li><a href=\"https://sspai.com/post/69375\">Obsidian最强插件：QuickAdd - 少数派</a></li>\n</ol>\n",
      "content:encodedSnippet": "最近又对笔记进行了一些优化，目前感觉还可以，简单记录一下。 ^b9bb4d\ndataview\nDataView 是 Obsidian 社区中的热门插件，它为用户提供了一个强大的实时索引和查询引擎。通过在文档中设置属性（或称为元数据），DataView 能够检索并处理这些数据。借助 DataView，用户可以轻松列出、筛选、排序和分组数据，这与使用数据库查询语言类似。\n首先我们要知道，插件为我们初始化了很多参数，方便我们调用。请先大致浏览下图\n\n展示最近的文件\n\n```dataview\ntable WITHOUT ID tags as \"🏷️标签\",\nfile.link as \"📜文件\",\ndateformat(file.ctime,\"yyyy年MM月dd日\") as 🕕创建日期\nfrom \"\" and !\"笔记模板\"\nsort file.ctime desc\nwhere type = \"编程\"\nlimit 10\n```\n\n^28840b\n这里我选择的是展示标签、文件名以及创建日期，并给列名取了名字。\n下面都是非必要的参数：\nfrom 支持检索文件夹和标签。标签要加 # 号\nsort 排序，支持多种参数，后面跟 asc 或者 desc 控制升降序，默认升序\nwhere 聚合条件，进行匹配操作。\nlimit 就是限制展示的长度啦\n个人实测，where 后和我上面代码一样写 = 号，和 where contains(type,\"编程\") 是一样的效果\n添加 CSS 优化，如果你已经粘贴复制了，那么标签一多，表格就会很乱，当然我们可以用 CSS 来控制\n```dataview\ntable WITHOUT ID \"<span style='display:flex; justify-content: left;'>\"+tags as \"🏷️标签\",\n\"<span style='display:flex; justify-content: left;'>\"+file.link as \"📜文件\",\n\"<span style='display:flex; justify-content: left;'>\"+dateformat(file.ctime,\"yyyy年MM月dd日\") as 🕕创建日期\nfrom \"\" and -\"笔记模板\"\nsort file.ctime desc\nwhere type = \"编程\"\nlimit 10\n```\n\n我就简单弄了下标签的布局，并都改成左对齐了。你可以自己发挥一下\n展示含有某个标签的笔记\n上面的细化，比如我就只想看数据库标签的笔记\n```dataview\ntable WITHOUT ID \"<span style='display:flex; justify-content: left;'>\"+tags as \"类型\",\nfile.link as \"📜文件\",\ndateformat(file.ctime,\"yyyy年MM月dd日\") as 🕕创建日期\nfrom #数据库 \nwhere type = \"编程\"\n```\n\n展示未完成的笔记\n\n这里其实就是添加了个 status 的属性\n```dataview\ntable WITHOUT ID \"<span style='display:flex; justify-content: left;'>\"+tags as \"🏷️标签\",\n\"<span style='display:flex; justify-content: left;'>\"+file.link as \"📜文件\",\n\"<span style='display:flex; justify-content: left;'>\"+dateformat(file.ctime,\"yyyy年MM月dd日\") as 🕕创建日期\nfrom !\"笔记模板\"\nsort file.ctime desc\nwhere status = \"未完成\"\nlimit 10\n```\n\ndataviewjs\ndataview 本身是支持 JS 语法拓展的。这里展示一些我使用的例子，具体语法不详细展开。\n原贴放到最后\n展示天数\n直接上代码了\n 今天是 `=dateformat(date(today),\"yyyy年M月d日\")`，今年还剩 `=(date(2024-12-31)-date(today))` \n\n展示文件数\n\n代码实现：\n```dataviewjs\nvar i = [dv.pages().length,dv.pages(`\"\"`).length,dv.pages(`\"日常/博客\"`).length,\n         dv.pages().file.etags.distinct().length]\ndv.paragraph(`总共有 **${i[0]}** 个文件`)\ndv.paragraph(`其中==笔记== **${i[1]}** 篇，==博客== **${i[2]}** 篇`)\ndv.paragraph(`==标签== **${i[3]}**个`)\n```\n\ndv 是 dataview 的缩写，也是 JS 的入口。\ndv.pages 的功能是，你给它一个搜索字段（如文件路径、标签等），会自动返回结果。\n填写文件夹，它就会把所有符合要求的文件都给你列出来。为空就是展示所有，也可以自己写对应路径，搜索某个子文件夹里的文件数量\n如果要搜索标签，在其中输入 #对应标签 即可\ndv.paragraph 输出，类似 print 语法，输出结果。\n拓展\n输出的拓展，可以略过\ndv.paragraph 与 dv.list()。这两种都是输出，前者类似 print 语法，输出结果。list 就是以列表形式展示\n这样也可以实现展示对应的文件， list 和 paragraph 格式可以直接输出，table 要用别的语法格式\n```dataviewjs\ndv.list(dv.pages(\"#Vue\").file.link)\n```\n\ntable 展示\n```dataviewjs\ndv.table(\n  [\"File\", \"Status\"],\n  dv.pages('\"\"')  \n  .sort(p => p.status, 'desc')\n  .map(p => [p.file.link, p.status])\n)\n```\n\n格式是这样的，列表列名+元素，然后用 map 函数返回。\ndv.current() 展示当前文件名字\n```dataviewjs\ndv.paragraph(dv.current().file.name);\n```\n\n好像不小心多写了很多，因为看了不少资料，就此打住，不多写了。\n更具体的请参阅 DataviewJS - 从入门到退坑 01 - 餐巾纸盒子 - Obsidian Publish\n展示笔记字数\n效果图如下：\n\n我用的是二改过的，然后自己再修改了一点，加了创建日期。\n链接：点我下载\n用法\n```dataviewjs\ndv.view(\"笔记模板/字数统计\",\"\")\n```\n\n只要在合适的地方引用即可\nQuick Add\n目前我只用到快速创建笔记，更多功能可以看下面的链接，那个博主写的很好。\n简单来说就是，你写好模板，然后可以用这个快速创建笔记。\n比如我一般写编程时，就用下面的\n![[模板举例.png|475]]\n这样就不需要自己添加属性值了，笔记也会自动创建在你指定的文件夹中\n简单实现\n首先，我们在插件设置中，写好名字，右侧选择 template，模板格式，然后点击 add choice 创建\n然后下面是我的一些配置：\n\ntemplate path: 模板地址，我是专门建个文件夹存放的\n打开 create in folder 设置，然后根据自己需要，自己每次选择文件夹还是自动放到指定好的文件夹。如果希望自动放到指定文件夹，那下面那一个不能打开。\n先点击 folder path 进行文件夹选择，然后点击 add 进行添加\n然后就是最后的 open ，开启也是有 split 分栏和 panel 新面板两个选择的，个人习惯推荐 panel\n原版\n预览别的笔记\n原版除了链接到别的笔记，还支持预览, 效果如下\n\n使用也是直接在正常的链接前加个感叹号就可以了，例如 ![[聚沙成塔]]\n那如果我们只想预览一部分，也是可以的，格式就是在上面的基础上, 在文件名后加 ^, 然后进行选择即可\n![[块引用.png]]\n在本文中也是可以进行块引用的，直接使用 ^ 选择即可\n![[#^28840b | 块引用展示]]\n快速跳转到笔记的其他标题\n比如跳到 dataview，格式为 [[#dataview]]，也可以 [[#dataview | 自定义文本]] 来修改文本\n[[#^....]] 来进行文字块的选择，也能快速跳转\n例如\n[[#dataview | 来到第一个插件介绍]]\n[[#^b9bb4d| 跳转到顶部]]\n教程参考\ndataview\nobsidian插件之dataview入门 - 经验分享 - Obsidian 中文论坛\n基于dataviewjs的字数统计功能 - 经验分享 - Obsidian 中文论坛\ndataviewjs\nDataviewJS - 从入门到退坑 01 - 餐巾纸盒子 - Obsidian Publish\nDataviewjs的奇技淫巧 - 经验分享 - Obsidian 中文论坛\nQuick Add\nObsidian最强插件：QuickAdd - 少数派",
      "guid": "https://www.blueke.top/posts/obsidiantuo-zhan/",
      "categories": [
        "笔记",
        "博客"
      ],
      "isoDate": "2024-11-17T13:59:00.000Z"
    },
    {
      "title": "自建图床教程",
      "link": "https://www.blueke.top/posts/zi-jian-tu-chuang-jiao-cheng/",
      "pubDate": "Thu, 03 Oct 2024 23:38:00 GMT",
      "content:encoded": "<p>今天来分享个博客比较需要的东西，自建图床</p>\n<h2>图床</h2>\n<p>图床是互联网中用于储存图片的空间。网站、APP 的所有图片都是储存在服务器，然后获得图片地址，就能把图片显示出来。\n对于博客，如果长期在博客里存储图片、会对博客造成不小的负担，这种时候一个放心的图床就显得很好用了</p>\n<h2>图片展示</h2>\n<p><img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E5%8F%8B%E5%88%A9%E5%A5%88%E7%BB%AA.webp\" alt=\"友利奈绪镇楼\" /> 可以看到效果还是很不错的</p>\n<p>图床是和博客分开的，我的图床是搭建在 github 上的，使用加速 cdn 来加速图片显示，可能有时候会图片加载缓慢。这是不能忽视的因素</p>\n<p>下面来分享一下我用到的相关内容：</p>\n<ul>\n<li>教程 1：<a href=\"https://blog.csdn.net/qq_44231797/article/details/131658184?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~YuanLiJiHua~Position-3-131658184-blog-89784600.237%5Ev3%5Ewap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~YuanLiJiHua~Position-3-131658184-blog-89784600.237%5Ev3%5Ewap_relevant_t0_download\">如何搭建自己的图床(GitHub 版)_github 图床_wisdom_zhe 的博客-CSDN 博客</a></li>\n<li>教程 2：<a href=\"https://blog.csdn.net/xdnxl/article/details/129466060?spm=1001.2101.3001.6650.5&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-5-129466060-blog-131658184.235%5Ev38%5Epc_relevant_sort_base1&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-5-129466060-blog-131658184.235%5Ev38%5Epc_relevant_sort_base1&amp;utm_relevant_index=10\">如何用 github 搭建图床（亲测有效）_github 图床_jxwd 的博客-CSDN 博客</a></li>\n<li>PicList 项目地址：<a href=\"https://github.com/Kuingsmile/PicList\">Kuingsmile/PicList: An image upload and manage tool, base on PicGo (</a><a href=\"http://github.com\">github.com</a><a href=\"https://github.com/Kuingsmile/PicList\">)</a></li>\n</ul>\n",
      "content:encodedSnippet": "今天来分享个博客比较需要的东西，自建图床\n图床\n图床是互联网中用于储存图片的空间。网站、APP 的所有图片都是储存在服务器，然后获得图片地址，就能把图片显示出来。\n对于博客，如果长期在博客里存储图片、会对博客造成不小的负担，这种时候一个放心的图床就显得很好用了\n图片展示\n 可以看到效果还是很不错的\n图床是和博客分开的，我的图床是搭建在 github 上的，使用加速 cdn 来加速图片显示，可能有时候会图片加载缓慢。这是不能忽视的因素\n下面来分享一下我用到的相关内容：\n教程 1：如何搭建自己的图床(GitHub 版)_github 图床_wisdom_zhe 的博客-CSDN 博客\n教程 2：如何用 github 搭建图床（亲测有效）_github 图床_jxwd 的博客-CSDN 博客\nPicList 项目地址：Kuingsmile/PicList: An image upload and manage tool, base on PicGo (github.com)",
      "guid": "https://www.blueke.top/posts/zi-jian-tu-chuang-jiao-cheng/",
      "categories": [
        "博客",
        "图床"
      ],
      "isoDate": "2024-10-03T23:38:00.000Z"
    },
    {
      "title": "我推的Ob插件",
      "link": "https://www.blueke.top/posts/%E6%88%91%E6%8E%A8%E7%9A%84ob%E6%8F%92%E4%BB%B6/",
      "pubDate": "Tue, 24 Sep 2024 12:32:00 GMT",
      "content:encoded": "<h2>前言</h2>\n<p>最近在酷安看到有伙伴分享了自己的笔记软件分享，我也就借花献佛，来推荐下我觉得很好用的 Obsidian 插件，也欢迎各位交流分享\n&lt;!--more--&gt;</p>\n<h2>插件</h2>\n<h3>1.Remotely Save -- 第三方同步插件</h3>\n<p>插件介绍：这是一款非官方的的同步插件，支持Amazon S3 或兼容 S3 的服务（如阿里云）、Webdav、 OneDrive 等众多服务。</p>\n<p>本人使用的阿里云存储，每年九块钱的费用对我来说已经跟白嫖差不多了（但阿里云要注意不能同时上传或下载太大体积的文件，因为一旦超出阈值，会产生费用，但平时增量同步一下是完全不产生费用的）\n新设备建议直接将仓库复制过去，避免产生流量费用</p>\n<p>阿里云同步参考教程： https://forum-zh.obsidian.md/t/topic/5362</p>\n<h3>2. Image Auto Upload Plugin -- 图片自动上传到图床</h3>\n<p>插件介绍：这是一个支持 PicGo、PicList、PicGo-Core 上传图片到图床的工具\n如果你拥有一个图床，并想与 Obsidian 一起利用起来，那么这个插件不容错过\n插件支持剪贴图片自动上传，右键图片快速上传等功能，快速方便</p>\n<p>如果你想快速体验（白嫖）一个图床，可自行搜索 GitHub 图床，相关的教程很多，这里不多赘述\n分享一张我图床里的图片： https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/yileina.png</p>\n<p>图床的好处有很多，对我来说就是比较方便发布到博客里，因为本地图片我还要一张张上传，使用图床后我只需要将文章直接复制过去即可</p>\n<h3>3.Attachment Manager -- 附件管理器</h3>\n<p>插件介绍：支持附件文件夹名称绑定笔记名、自动重命名、自动删除、显示/隐藏。\n<img src=\"https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/%E6%88%91%E6%8E%A8%E7%9A%84Ob%E6%8F%92%E4%BB%B6-Attachment%20Manager.png\" alt=\"我推的Ob插件-Attachment Manager\" />\n这个本人真的强烈推荐，适用于强迫症，按照 Obsidian 本身的附件管理，只能指定到一个文件夹里，随着笔记的积累，无异会很混乱。而这个插件可以完美的解决这个问题，不仅可以自动命名，还能自动创建附件子文件夹，分别存储，美观整洁。</p>\n<h3>4. mousewheel image zoom -- 鼠标滚轮图像缩放</h3>\n<p>插件介绍：顾名思义，按住 alt 滚动鼠标即可快速调整图片大小</p>\n<h3>5.Easy Typing --  书写体验增强插件</h3>\n<p>插件介绍：EasyTyping 是一个 Obsidian 的书写体验增强插件，功能包含编辑时自动格式化文本和符号编辑增强。自动格式化文本对文档的格式进行规范化，并且美化文档的观感，编辑增强优化用户的编辑体验。</p>\n<p>这个插件的大概作用一眼便知，内置的功能也很多，可以自己下载来慢慢摸索</p>\n<h3>6. editing-toolbar -- 必装的可视化编辑工具</h3>\n<p>插件介绍：旨在增强 Obsidian 的可视化编辑体验。提供类似于 Word，在线办公软件的浮动工具栏等交互方式。</p>\n<p>这个也是提供了很多的格式，方便 Markdown 的书写，如果你是 Markdown 刚入门或者不熟悉很多的语法，那么强烈推荐</p>\n",
      "content:encodedSnippet": "前言\n最近在酷安看到有伙伴分享了自己的笔记软件分享，我也就借花献佛，来推荐下我觉得很好用的 Obsidian 插件，也欢迎各位交流分享\n<!--more-->\n插件\n1.Remotely Save -- 第三方同步插件\n插件介绍：这是一款非官方的的同步插件，支持Amazon S3 或兼容 S3 的服务（如阿里云）、Webdav、 OneDrive 等众多服务。\n本人使用的阿里云存储，每年九块钱的费用对我来说已经跟白嫖差不多了（但阿里云要注意不能同时上传或下载太大体积的文件，因为一旦超出阈值，会产生费用，但平时增量同步一下是完全不产生费用的）\n新设备建议直接将仓库复制过去，避免产生流量费用\n阿里云同步参考教程： https://forum-zh.obsidian.md/t/topic/5362\n2. Image Auto Upload Plugin -- 图片自动上传到图床\n插件介绍：这是一个支持 PicGo、PicList、PicGo-Core 上传图片到图床的工具\n如果你拥有一个图床，并想与 Obsidian 一起利用起来，那么这个插件不容错过\n插件支持剪贴图片自动上传，右键图片快速上传等功能，快速方便\n如果你想快速体验（白嫖）一个图床，可自行搜索 GitHub 图床，相关的教程很多，这里不多赘述\n分享一张我图床里的图片： https://gcore.jsdelivr.net/gh/Keduoli03/My_img@img/img/yileina.png\n图床的好处有很多，对我来说就是比较方便发布到博客里，因为本地图片我还要一张张上传，使用图床后我只需要将文章直接复制过去即可\n3.Attachment Manager -- 附件管理器\n插件介绍：支持附件文件夹名称绑定笔记名、自动重命名、自动删除、显示/隐藏。\n\n这个本人真的强烈推荐，适用于强迫症，按照 Obsidian 本身的附件管理，只能指定到一个文件夹里，随着笔记的积累，无异会很混乱。而这个插件可以完美的解决这个问题，不仅可以自动命名，还能自动创建附件子文件夹，分别存储，美观整洁。\n4. mousewheel image zoom -- 鼠标滚轮图像缩放\n插件介绍：顾名思义，按住 alt 滚动鼠标即可快速调整图片大小\n5.Easy Typing --  书写体验增强插件\n插件介绍：EasyTyping 是一个 Obsidian 的书写体验增强插件，功能包含编辑时自动格式化文本和符号编辑增强。自动格式化文本对文档的格式进行规范化，并且美化文档的观感，编辑增强优化用户的编辑体验。\n这个插件的大概作用一眼便知，内置的功能也很多，可以自己下载来慢慢摸索\n6. editing-toolbar -- 必装的可视化编辑工具\n插件介绍：旨在增强 Obsidian 的可视化编辑体验。提供类似于 Word，在线办公软件的浮动工具栏等交互方式。\n这个也是提供了很多的格式，方便 Markdown 的书写，如果你是 Markdown 刚入门或者不熟悉很多的语法，那么强烈推荐",
      "content": "最近在酷安看到有伙伴分享了自己的笔记软件分享，我也就借花献佛，来推荐下我觉得很好用的 Obsidian 插件，也欢迎各位交流分享",
      "contentSnippet": "最近在酷安看到有伙伴分享了自己的笔记软件分享，我也就借花献佛，来推荐下我觉得很好用的 Obsidian 插件，也欢迎各位交流分享",
      "guid": "https://www.blueke.top/posts/%E6%88%91%E6%8E%A8%E7%9A%84ob%E6%8F%92%E4%BB%B6/",
      "isoDate": "2024-09-24T12:32:00.000Z"
    },
    {
      "title": "Simple Guides for Fuwari",
      "link": "https://www.blueke.top/posts/guide/",
      "pubDate": "Mon, 01 Apr 2024 00:00:00 GMT",
      "content:encoded": "<blockquote>\n<p>Cover image source: <a href=\"https://image.civitai.com/xG1nkqKTMzGDvpLrqFT7WA/208fc754-890d-4adb-9753-2c963332675d/width=2048/01651-1456859105-(colour_1.5),girl,_Blue,yellow,green,cyan,purple,red,pink,_best,8k,UHD,masterpiece,male%20focus,%201boy,gloves,%20ponytail,%20long%20hair,.jpeg\">Source</a></p>\n</blockquote>\n<p>This blog template is built with <a href=\"https://astro.build/\">Astro</a>. For the things that are not mentioned in this guide, you may find the answers in the <a href=\"https://docs.astro.build/\">Astro Docs</a>.</p>\n<h2>Front-matter of Posts</h2>\n<pre><code>---\ntitle: My First Blog Post\npublished: 2023-09-09\ndescription: This is the first post of my new Astro blog.\nimage: ./cover.jpg\ntags: [Foo, Bar]\ncategory: Front-end\ndraft: false\n---\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>The title of the post.</td>\n</tr>\n<tr>\n<td><code>published</code></td>\n<td>The date the post was published.</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>A short description of the post. Displayed on index page.</td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>The cover image path of the post.&lt;br/&gt;1. Start with <code>http://</code> or <code>https://</code>: Use web image&lt;br/&gt;2. Start with <code>/</code>: For image in <code>public</code> dir&lt;br/&gt;3. With none of the prefixes: Relative to the markdown file</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>The tags of the post.</td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>The category of the post.</td>\n</tr>\n<tr>\n<td><code>draft</code></td>\n<td>If this post is still a draft, which won't be displayed.</td>\n</tr>\n</tbody>\n</table>\n<h2>Where to Place the Post Files</h2>\n<p>Your post files should be placed in <code>src/content/posts/</code> directory. You can also create sub-directories to better organize your posts and assets.</p>\n<pre><code>src/content/posts/\n├── post-1.md\n└── post-2/\n    ├── cover.png\n    └── index.md\n</code></pre>\n",
      "content:encodedSnippet": "Cover image source: Source\nThis blog template is built with Astro. For the things that are not mentioned in this guide, you may find the answers in the Astro Docs.\nFront-matter of Posts\n---\ntitle: My First Blog Post\npublished: 2023-09-09\ndescription: This is the first post of my new Astro blog.\nimage: ./cover.jpg\ntags: [Foo, Bar]\ncategory: Front-end\ndraft: false\n---\n\nAttribute\nDescription\n\n\n\n\ntitle\nThe title of the post.\n\n\npublished\nThe date the post was published.\n\n\ndescription\nA short description of the post. Displayed on index page.\n\n\nimage\nThe cover image path of the post.<br/>1. Start with http:// or https://: Use web image<br/>2. Start with /: For image in public dir<br/>3. With none of the prefixes: Relative to the markdown file\n\n\ntags\nThe tags of the post.\n\n\ncategory\nThe category of the post.\n\n\ndraft\nIf this post is still a draft, which won't be displayed.\n\n\n\nWhere to Place the Post Files\nYour post files should be placed in src/content/posts/ directory. You can also create sub-directories to better organize your posts and assets.\nsrc/content/posts/\n├── post-1.md\n└── post-2/\n    ├── cover.png\n    └── index.md",
      "content": "How to use this blog template.",
      "contentSnippet": "How to use this blog template.",
      "guid": "https://www.blueke.top/posts/guide/",
      "categories": [
        "Fuwari",
        "Blogging",
        "Customization"
      ],
      "isoDate": "2024-04-01T00:00:00.000Z"
    }
  ],
  "title": "Lanke",
  "description": "兴致所至",
  "link": "https://www.blueke.top/",
  "language": "zh_CN"
}